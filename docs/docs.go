// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/transaction/broadcast/callback": {
            "post": {
                "security": [
                    {
                        "callback-auth": []
                    }
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Broadcast Callback",
                "parameters": [
                    {
                        "description": "Transaction",
                        "name": "transaction",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/broadcast.SubmittedTx"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1/access-key": {
            "get": {
                "security": [
                    {
                        "x-auth-xpub": []
                    }
                ],
                "description": "Get access key",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Access-key"
                ],
                "summary": "Get access key",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "x-auth-xpub": []
                    }
                ],
                "description": "Create access key",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Access-key"
                ],
                "summary": "Create access key",
                "parameters": [
                    {
                        "description": "CreateAccessKey model containing metadata",
                        "name": "CreateAccessKey",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/accesskeys.CreateAccessKey"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "x-auth-xpub": []
                    }
                ],
                "description": "Revoke access key",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Access-key"
                ],
                "summary": "Revoke access key",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/v1/access-key/count": {
            "post": {
                "security": [
                    {
                        "x-auth-xpub": []
                    }
                ],
                "description": "Count of access keys",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Access-key"
                ],
                "summary": "Count of access keys",
                "parameters": [
                    {
                        "description": "CountRequestParameters model containing metadata and conditions",
                        "name": "CountRequestParameters",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/actions.CountRequestParameters"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1/access-key/search": {
            "post": {
                "security": [
                    {
                        "x-auth-xpub": []
                    }
                ],
                "description": "Search access key",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Access-key"
                ],
                "summary": "Search access key",
                "parameters": [
                    {
                        "description": "SearchRequestParameters model containing metadata, conditions and query params",
                        "name": "SearchRequestParameters",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/actions.SearchRequestParameters"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1/admin/access-keys/count": {
            "post": {
                "security": [
                    {
                        "x-auth-xpub": []
                    }
                ],
                "description": "Access Keys Count",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Access Keys Count",
                "parameters": [
                    {
                        "description": "CountRequestParameters model containing metadata and conditions",
                        "name": "CountRequestParameters",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/actions.CountRequestParameters"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1/admin/access-keys/search": {
            "post": {
                "security": [
                    {
                        "x-auth-xpub": []
                    }
                ],
                "description": "Access Keys Search",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Access Keys Search",
                "parameters": [
                    {
                        "description": "SearchRequestParameters model containing metadata, conditions and query params",
                        "name": "SearchRequestParameters",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/actions.SearchRequestParameters"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1/admin/destinations/count": {
            "post": {
                "security": [
                    {
                        "x-auth-xpub": []
                    }
                ],
                "description": "Count destinations",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Count destinations",
                "parameters": [
                    {
                        "description": "CountRequestParameters model containing metadata and conditions",
                        "name": "CountRequestParameters",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/actions.CountRequestParameters"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1/admin/destinations/search": {
            "post": {
                "security": [
                    {
                        "x-auth-xpub": []
                    }
                ],
                "description": "Search for destinations",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Search for destinations",
                "parameters": [
                    {
                        "description": "SearchRequestParameters model containing metadata, conditions and query params",
                        "name": "SearchRequestParameters",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/actions.SearchRequestParameters"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1/admin/paymail/create": {
            "post": {
                "security": [
                    {
                        "x-auth-xpub": []
                    }
                ],
                "description": "Create paymail",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Create paymail",
                "parameters": [
                    {
                        "description": "CreatePaymail model containing paymail information",
                        "name": "CreatePaymail",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/admin.CreatePaymail"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/v1/admin/paymail/delete": {
            "delete": {
                "security": [
                    {
                        "x-auth-xpub": []
                    }
                ],
                "description": "Delete paymail",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Delete paymail",
                "parameters": [
                    {
                        "description": "PaymailAddress model containing paymail address to delete",
                        "name": "PaymailAddress",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1/admin/paymail/get": {
            "post": {
                "security": [
                    {
                        "x-auth-xpub": []
                    }
                ],
                "description": "Get paymail",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Get paymail",
                "parameters": [
                    {
                        "description": "CreateAccessKey model containing paymail address",
                        "name": "PaymailAddress",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/admin.PaymailAddress"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1/admin/paymails/count": {
            "post": {
                "security": [
                    {
                        "x-auth-xpub": []
                    }
                ],
                "description": "Paymail addresses count",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Paymail addresses count",
                "parameters": [
                    {
                        "description": "CountRequestParameters model containing metadata and conditions",
                        "name": "CountRequestParameters",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/actions.CountRequestParameters"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1/admin/paymails/search": {
            "post": {
                "security": [
                    {
                        "x-auth-xpub": []
                    }
                ],
                "description": "Paymail addresses search",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Paymail addresses search",
                "parameters": [
                    {
                        "description": "SearchRequestParameters model containing metadata, conditions and query params",
                        "name": "SearchRequestParameters",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/actions.SearchRequestParameters"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1/admin/stats": {
            "get": {
                "security": [
                    {
                        "x-auth-xpub": []
                    }
                ],
                "description": "Get stats",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Get stats",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1/admin/status": {
            "get": {
                "security": [
                    {
                        "x-auth-xpub": []
                    }
                ],
                "description": "Get status",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Get status",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1/admin/transactions/count": {
            "post": {
                "security": [
                    {
                        "x-auth-xpub": []
                    }
                ],
                "description": "Count transactions",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Count transactions",
                "parameters": [
                    {
                        "description": "CountRequestParameters model containing metadata and conditions",
                        "name": "CountRequestParameters",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/actions.CountRequestParameters"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1/admin/transactions/record": {
            "post": {
                "security": [
                    {
                        "x-auth-xpub": []
                    }
                ],
                "description": "Record transactions",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Record transactions",
                "parameters": [
                    {
                        "description": "RecordTransaction model containing hex of the transaction to record",
                        "name": "RecordTransaction",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/admin.RecordTransaction"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/v1/admin/transactions/search": {
            "post": {
                "security": [
                    {
                        "x-auth-xpub": []
                    }
                ],
                "description": "Search for transactions",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Search for transactions",
                "parameters": [
                    {
                        "description": "SearchRequestParameters model containing metadata, conditions and query params",
                        "name": "SearchRequestParameters",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/actions.SearchRequestParameters"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1/admin/utxos/count": {
            "post": {
                "security": [
                    {
                        "x-auth-xpub": []
                    }
                ],
                "description": "Count utxos",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Count utxos",
                "parameters": [
                    {
                        "description": "CountRequestParameters model containing metadata and conditions",
                        "name": "CountRequestParameters",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/actions.CountRequestParameters"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1/admin/utxos/search": {
            "post": {
                "security": [
                    {
                        "x-auth-xpub": []
                    }
                ],
                "description": "Search for utxos",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Search for utxos",
                "parameters": [
                    {
                        "description": "SearchRequestParameters model containing metadata, conditions and query params",
                        "name": "SearchRequestParameters",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/actions.SearchRequestParameters"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1/admin/xpub": {
            "post": {
                "security": [
                    {
                        "x-auth-xpub": []
                    }
                ],
                "description": "Create xPub",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Create xPub",
                "parameters": [
                    {
                        "description": "CreateXpub model containing key and metadata",
                        "name": "CreateXpub",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/admin.CreateXpub"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/v1/admin/xpubs/count": {
            "post": {
                "security": [
                    {
                        "x-auth-xpub": []
                    }
                ],
                "description": "Count xpubs",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Count xpubs",
                "parameters": [
                    {
                        "description": "CountRequestParameters model containing metadata and conditions",
                        "name": "CountRequestParameters",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/actions.CountRequestParameters"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1/admin/xpubs/search": {
            "post": {
                "security": [
                    {
                        "x-auth-xpub": []
                    }
                ],
                "description": "Search for xpubs",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Search for xpubs",
                "parameters": [
                    {
                        "description": "SearchRequestParameters model containing metadata, conditions and query params",
                        "name": "SearchRequestParameters",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/actions.SearchRequestParameters"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1/destination": {
            "get": {
                "security": [
                    {
                        "x-auth-xpub": []
                    }
                ],
                "description": "Get a destination",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Destinations"
                ],
                "summary": "Get a destination",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Destination ID",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Destination address",
                        "name": "address",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Destination locking script",
                        "name": "locking_script",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "x-auth-xpub": []
                    }
                ],
                "description": "Create a new destination",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Destinations"
                ],
                "summary": "Create a new destination",
                "parameters": [
                    {
                        "description": "CreateDestination model containing metadata",
                        "name": "CreateDestination",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/destinations.CreateDestination"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "x-auth-xpub": []
                    }
                ],
                "description": "Update destination",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Destinations"
                ],
                "summary": "Update destination",
                "parameters": [
                    {
                        "description": "UpdateDestination model containing ids, address, locking_script and metadata",
                        "name": "UpdateDestination",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/destinations.UpdateDestination"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1/destination/count": {
            "post": {
                "security": [
                    {
                        "x-auth-xpub": []
                    }
                ],
                "description": "Count Destinations",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Destinations"
                ],
                "summary": "Count Destinations",
                "parameters": [
                    {
                        "description": "CountRequestParameters model containing metadata and conditions",
                        "name": "CountRequestParameters",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/actions.CountRequestParameters"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1/destination/search": {
            "post": {
                "security": [
                    {
                        "x-auth-xpub": []
                    }
                ],
                "description": "Search for a destination",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Destinations"
                ],
                "summary": "Search for a destination",
                "parameters": [
                    {
                        "description": "SearchRequestParameters model containing metadata, conditions and query params",
                        "name": "SearchRequestParameters",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/actions.SearchRequestParameters"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1/transaction": {
            "get": {
                "security": [
                    {
                        "x-auth-xpub": []
                    }
                ],
                "description": "Get transaction by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Get transaction by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "x-auth-xpub": []
                    }
                ],
                "description": "New transaction",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "New transaction",
                "parameters": [
                    {
                        "description": "NewTransaction model containing the transaction config and metadata",
                        "name": "NewTransaction",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/transactions.NewTransaction"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "x-auth-xpub": []
                    }
                ],
                "description": "Update transaction",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Update transaction",
                "parameters": [
                    {
                        "description": "UpdateTransaction model containing the transaction id and metadata",
                        "name": "UpdateTransaction",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/transactions.UpdateTransaction"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1/transaction/count": {
            "post": {
                "security": [
                    {
                        "x-auth-xpub": []
                    }
                ],
                "description": "Count of transactions",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Count of transactions",
                "parameters": [
                    {
                        "description": "CountRequestParameters model containing metadata and conditions",
                        "name": "CountRequestParameters",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/actions.CountRequestParameters"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1/transaction/record": {
            "post": {
                "security": [
                    {
                        "x-auth-xpub": []
                    }
                ],
                "description": "Record transaction",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Record transaction",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1/transaction/search": {
            "post": {
                "security": [
                    {
                        "x-auth-xpub": []
                    }
                ],
                "description": "Search transaction",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Search transaction",
                "parameters": [
                    {
                        "description": "SearchRequestParameters model containing metadata, conditions and query params",
                        "name": "SearchRequestParameters",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/actions.SearchRequestParameters"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1/utxo": {
            "get": {
                "security": [
                    {
                        "x-auth-xpub": []
                    }
                ],
                "description": "Get UTXO",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "UTXO"
                ],
                "summary": "Get UTXO",
                "parameters": [
                    {
                        "type": "string",
                        "description": "tx_id",
                        "name": "tx_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "output_index",
                        "name": "output_index",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1/utxo/count": {
            "post": {
                "security": [
                    {
                        "x-auth-xpub": []
                    }
                ],
                "description": "Count of UTXOs",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "UTXO"
                ],
                "summary": "Count of UTXOs",
                "parameters": [
                    {
                        "description": "CountRequestParameters model containing metadata and conditions",
                        "name": "CountRequestParameters",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/actions.CountRequestParameters"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1/utxo/search": {
            "post": {
                "security": [
                    {
                        "x-auth-xpub": []
                    }
                ],
                "description": "Search UTXO",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "UTXO"
                ],
                "summary": "Search UTXO",
                "parameters": [
                    {
                        "description": "SearchRequestParameters model containing metadata, conditions and query params",
                        "name": "SearchRequestParameters",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/actions.SearchRequestParameters"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1/xpub": {
            "get": {
                "security": [
                    {
                        "x-auth-xpub": []
                    }
                ],
                "description": "Get xPub",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "xPub"
                ],
                "summary": "Get xPub",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "x-auth-xpub": []
                    },
                    {
                        "bux-auth-xpub": []
                    }
                ],
                "description": "Update xPub",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "xPub"
                ],
                "summary": "Update xPub",
                "parameters": [
                    {
                        "description": "Metadata which should replace the already existing one",
                        "name": "Metadata",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/engine.Metadata"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        }
    },
    "definitions": {
        "accesskeys.CreateAccessKey": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/engine.Metadata"
                }
            }
        },
        "actions.CountRequestParameters": {
            "type": "object",
            "properties": {
                "conditions": {
                    "type": "object",
                    "additionalProperties": true
                },
                "metadata": {
                    "$ref": "#/definitions/engine.Metadata"
                }
            }
        },
        "actions.SearchRequestParameters": {
            "type": "object",
            "properties": {
                "conditions": {
                    "type": "object",
                    "additionalProperties": true
                },
                "metadata": {
                    "$ref": "#/definitions/engine.Metadata"
                },
                "params": {
                    "$ref": "#/definitions/datastore.QueryParams"
                }
            }
        },
        "admin.CreatePaymail": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "avatar": {
                    "type": "string"
                },
                "metadata": {
                    "$ref": "#/definitions/engine.Metadata"
                },
                "public_name": {
                    "type": "string"
                },
                "xpub_id": {
                    "type": "string"
                }
            }
        },
        "admin.CreateXpub": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "metadata": {
                    "$ref": "#/definitions/engine.Metadata"
                }
            }
        },
        "admin.PaymailAddress": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                }
            }
        },
        "admin.RecordTransaction": {
            "type": "object",
            "properties": {
                "hex": {
                    "type": "string"
                }
            }
        },
        "broadcast.SubmittedTx": {
            "type": "object",
            "properties": {
                "blockHash": {
                    "description": "BlockHash is the hash of the block where the transaction was included.",
                    "type": "string"
                },
                "blockHeight": {
                    "description": "BlockHeight is the height of the block where the transaction was included.",
                    "type": "integer"
                },
                "extraInfo": {
                    "description": "ExtraInfo provides extra information for given transaction.",
                    "type": "string"
                },
                "merklePath": {
                    "description": "MerklePath is the Merkle path used to calculate Merkle root of the block in which the transaction was included.",
                    "type": "string"
                },
                "status": {
                    "description": "Status is the status of the response.",
                    "type": "integer"
                },
                "timestamp": {
                    "description": "Timestamp is the timestamp of the block where the transaction was included.",
                    "type": "string"
                },
                "title": {
                    "description": "Title is the title of the response.",
                    "type": "string"
                },
                "txStatus": {
                    "description": "TxStatus is the status of the transaction.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/broadcast.TxStatus"
                        }
                    ]
                },
                "txid": {
                    "description": "TxID is the transaction id.",
                    "type": "string"
                }
            }
        },
        "broadcast.TxStatus": {
            "type": "string",
            "enum": [
                "UNKNOWN",
                "QUEUED",
                "RECEIVED",
                "STORED",
                "ANNOUNCED_TO_NETWORK",
                "REQUESTED_BY_NETWORK",
                "SENT_TO_NETWORK",
                "ACCEPTED_BY_NETWORK",
                "SEEN_ON_NETWORK",
                "MINED",
                "SEEN_IN_ORPHAN_MEMPOOL",
                "CONFIRMED",
                "REJECTED"
            ],
            "x-enum-comments": {
                "AcceptedByNetwork": "7",
                "AnnouncedToNetwork": "4",
                "Confirmed": "108",
                "Mined": "9",
                "Queued": "1",
                "Received": "2",
                "Rejected": "109",
                "RequestedByNetwork": "5",
                "SeenInOrphanMempool": "10",
                "SeenOnNetwork": "8",
                "SentToNetwork": "6",
                "Stored": "3",
                "Unknown": "0"
            },
            "x-enum-varnames": [
                "Unknown",
                "Queued",
                "Received",
                "Stored",
                "AnnouncedToNetwork",
                "RequestedByNetwork",
                "SentToNetwork",
                "AcceptedByNetwork",
                "SeenOnNetwork",
                "Mined",
                "SeenInOrphanMempool",
                "Confirmed",
                "Rejected"
            ]
        },
        "datastore.QueryParams": {
            "type": "object",
            "properties": {
                "order_by_field": {
                    "type": "string"
                },
                "page": {
                    "type": "integer"
                },
                "page_size": {
                    "type": "integer"
                },
                "sort_direction": {
                    "type": "string"
                }
            }
        },
        "destinations.CreateDestination": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/engine.Metadata"
                }
            }
        },
        "destinations.UpdateDestination": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "locking_script": {
                    "type": "string"
                },
                "metadata": {
                    "$ref": "#/definitions/engine.Metadata"
                }
            }
        },
        "engine.Metadata": {
            "type": "object",
            "additionalProperties": true
        },
        "models.Destination": {
            "type": "object",
            "properties": {
                "address": {
                    "description": "Address is a destination's address.",
                    "type": "string"
                },
                "chain": {
                    "description": "Chain is a destination's chain representation.",
                    "type": "integer"
                },
                "created_at": {
                    "description": "CreatedAt is a time when outer model was created.",
                    "type": "string"
                },
                "deleted_at": {
                    "description": "DeletedAt is a time when outer model was deleted.",
                    "type": "string"
                },
                "draft_id": {
                    "description": "DraftID is a destination's draft id.",
                    "type": "string"
                },
                "id": {
                    "description": "ID is a destination id.",
                    "type": "string"
                },
                "locking_script": {
                    "description": "LockingScript is a destination's locking script.",
                    "type": "string"
                },
                "metadata": {
                    "description": "Metadata is a metadata map of outer model.",
                    "type": "object",
                    "additionalProperties": true
                },
                "monitor": {
                    "description": "Monitor is a time when destination was monitored.",
                    "type": "string"
                },
                "num": {
                    "description": "Num is a destination's num representation.",
                    "type": "integer"
                },
                "type": {
                    "description": "Type is a destination's type.",
                    "type": "string"
                },
                "updated_at": {
                    "description": "UpdatedAt is a time when outer model was updated.",
                    "type": "string"
                },
                "xpub_id": {
                    "description": "XpubID is a destination's xpub related id used to register destination.",
                    "type": "string"
                }
            }
        },
        "transactions.NewTransaction": {
            "type": "object"
        },
        "transactions.UpdateTransaction": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "metadata": {
                    "$ref": "#/definitions/engine.Metadata"
                }
            }
        }
    },
    "securityDefinitions": {
        "callback-auth": {
            "type": "apiKey",
            "name": "authorization",
            "in": "header"
        },
        "x-auth-xpub": {
            "type": "apiKey",
            "name": "x-auth-xpub",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "v0.12.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "SPV Wallet",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
