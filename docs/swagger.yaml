definitions:
  accesskeys.CreateAccessKey:
    properties:
      metadata:
        additionalProperties:
          type: string
        description: Accepts a JSON object for embedding custom metadata, enabling
          arbitrary additional information to be associated with the resource
        example:
          key: value
          key2: value2
        type: object
    type: object
  actions.CountRequestParameters:
    properties:
      conditions:
        additionalProperties: true
        description: Custom conditions used for filtering the search results
        type: object
      metadata:
        allOf:
        - $ref: '#/definitions/engine.Metadata'
        description: Accepts a JSON object for embedding custom metadata, enabling
          arbitrary additional information to be associated with the resource
    type: object
  actions.SearchRequestParameters:
    properties:
      conditions:
        additionalProperties: true
        description: Custom conditions used for filtering the search results
        type: object
      metadata:
        allOf:
        - $ref: '#/definitions/engine.Metadata'
        description: Accepts a JSON object for embedding custom metadata, enabling
          arbitrary additional information to be associated with the resource
      params:
        allOf:
        - $ref: '#/definitions/datastore.QueryParams'
        description: Pagination and sorting options to streamline data exploration
          and analysis
    type: object
  admin.CreatePaymail:
    properties:
      address:
        description: 'The paymail address, example: example@spv-wallet.com'
        type: string
      avatar:
        description: The avatar of the paymail (url address)
        type: string
      metadata:
        allOf:
        - $ref: '#/definitions/engine.Metadata'
        description: Accepts a JSON object for embedding custom metadata, enabling
          arbitrary additional information to be associated with the resource
      public_name:
        description: The public name of the paymail
        type: string
      xpub_id:
        description: The xpub with which the paymail is associated
        type: string
    type: object
  admin.CreateXpub:
    properties:
      key:
        description: The xpub key
        type: string
      metadata:
        allOf:
        - $ref: '#/definitions/engine.Metadata'
        description: Accepts a JSON object for embedding custom metadata, enabling
          arbitrary additional information to be associated with the resource
    type: object
  admin.PaymailAddress:
    properties:
      address:
        description: 'The paymail address example: example@spv-wallet.com'
        type: string
    type: object
  admin.RecordTransaction:
    properties:
      hex:
        description: The transaction hex
        type: string
    type: object
  broadcast.SubmittedTx:
    properties:
      blockHash:
        description: BlockHash is the hash of the block where the transaction was
          included.
        type: string
      blockHeight:
        description: BlockHeight is the height of the block where the transaction
          was included.
        type: integer
      extraInfo:
        description: ExtraInfo provides extra information for given transaction.
        type: string
      merklePath:
        description: MerklePath is the Merkle path used to calculate Merkle root of
          the block in which the transaction was included.
        type: string
      status:
        description: Status is the status of the response.
        type: integer
      timestamp:
        description: Timestamp is the timestamp of the block where the transaction
          was included.
        type: string
      title:
        description: Title is the title of the response.
        type: string
      txStatus:
        allOf:
        - $ref: '#/definitions/broadcast.TxStatus'
        description: TxStatus is the status of the transaction.
      txid:
        description: TxID is the transaction id.
        type: string
    type: object
  broadcast.TxStatus:
    enum:
    - UNKNOWN
    - QUEUED
    - RECEIVED
    - STORED
    - ANNOUNCED_TO_NETWORK
    - REQUESTED_BY_NETWORK
    - SENT_TO_NETWORK
    - ACCEPTED_BY_NETWORK
    - SEEN_ON_NETWORK
    - MINED
    - SEEN_IN_ORPHAN_MEMPOOL
    - CONFIRMED
    - REJECTED
    type: string
    x-enum-comments:
      AcceptedByNetwork: "7"
      AnnouncedToNetwork: "4"
      Confirmed: "108"
      Mined: "9"
      Queued: "1"
      Received: "2"
      Rejected: "109"
      RequestedByNetwork: "5"
      SeenInOrphanMempool: "10"
      SeenOnNetwork: "8"
      SentToNetwork: "6"
      Stored: "3"
      Unknown: "0"
    x-enum-varnames:
    - Unknown
    - Queued
    - Received
    - Stored
    - AnnouncedToNetwork
    - RequestedByNetwork
    - SentToNetwork
    - AcceptedByNetwork
    - SeenOnNetwork
    - Mined
    - SeenInOrphanMempool
    - Confirmed
    - Rejected
  customtypes.NullString:
    properties:
      string:
        type: string
      valid:
        description: Valid is true if String is not NULL
        type: boolean
    type: object
  customtypes.NullTime:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  datastore.QueryParams:
    properties:
      order_by_field:
        type: string
      page:
        type: integer
      page_size:
        type: integer
      sort_direction:
        type: string
    type: object
  destinations.CreateDestination:
    properties:
      metadata:
        allOf:
        - $ref: '#/definitions/engine.Metadata'
        description: Accepts a JSON object for embedding custom metadata, enabling
          arbitrary additional information to be associated with the resource
    type: object
  destinations.UpdateDestination:
    properties:
      address:
        description: Address of the destination
        type: string
      id:
        description: ID of the destination which is the hash of the LockingScript
        type: string
      locking_script:
        description: LockingScript of the destination
        type: string
      metadata:
        allOf:
        - $ref: '#/definitions/engine.Metadata'
        description: Accepts a JSON object for embedding custom metadata, enabling
          arbitrary additional information to be associated with the resource
    type: object
  engine.BUMP:
    properties:
      blockHeight:
        example: "0"
        type: string
      path:
        items:
          items:
            $ref: '#/definitions/engine.BUMPLeaf'
          type: array
        type: array
    type: object
  engine.BUMPLeaf:
    properties:
      duplicate:
        type: boolean
      hash:
        type: string
      offset:
        example: "0"
        type: string
      txid:
        type: boolean
    type: object
  engine.Metadata:
    additionalProperties: true
    type: object
  engine.PaymailAddress:
    properties:
      alias:
        description: Alias part of the paymail
        type: string
      avatar:
        description: This is the url of the user (public profile)
        type: string
      created_at:
        type: string
      deleted_at:
        allOf:
        - $ref: '#/definitions/customtypes.NullTime'
        description: |-
          https://gorm.io/docs/indexes.html
          DeletedAt gorm.DeletedAt `json:"deleted_at" toml:"deleted_at" yaml:"deleted_at" (@mrz: this was the original type)
      domain:
        description: Domain of the paymail
        type: string
      external_xpub_key:
        description: PublicKey hex encoded
        type: string
      id:
        description: Model specific fields
        type: string
      metadata:
        $ref: '#/definitions/engine.Metadata'
      public_name:
        description: Full username
        type: string
      updated_at:
        type: string
      xpub_id:
        description: Related xPub ID
        type: string
    type: object
  engine.SyncStatus:
    enum:
    - pending
    - ready
    - processing
    - canceled
    - skipped
    - error
    - complete
    type: string
    x-enum-varnames:
    - SyncStatusPending
    - SyncStatusReady
    - SyncStatusProcessing
    - SyncStatusCanceled
    - SyncStatusSkipped
    - SyncStatusError
    - SyncStatusComplete
  engine.Transaction:
    properties:
      block_hash:
        type: string
      block_height:
        type: integer
      bump:
        $ref: '#/definitions/engine.BUMP'
      created_at:
        type: string
      deleted_at:
        allOf:
        - $ref: '#/definitions/customtypes.NullTime'
        description: |-
          https://gorm.io/docs/indexes.html
          DeletedAt gorm.DeletedAt `json:"deleted_at" toml:"deleted_at" yaml:"deleted_at" (@mrz: this was the original type)
      direction:
        $ref: '#/definitions/engine.TransactionDirection'
      draft_id:
        type: string
      fee:
        type: integer
      hex:
        type: string
      id:
        type: string
      metadata:
        $ref: '#/definitions/engine.Metadata'
      number_of_inputs:
        type: integer
      number_of_outputs:
        type: integer
      output_value:
        description: Virtual Fields
        type: integer
      status:
        $ref: '#/definitions/engine.SyncStatus'
      total_value:
        type: integer
      txStatus:
        type: string
      updated_at:
        type: string
      xpub_in_ids:
        description: Model specific fields
        items:
          type: string
        type: array
      xpub_out_ids:
        items:
          type: string
        type: array
      xpubID:
        description: XPub of the user registering this transaction
        type: string
    type: object
  engine.TransactionDirection:
    enum:
    - incoming
    - outgoing
    - reconcile
    type: string
    x-enum-varnames:
    - TransactionDirectionIn
    - TransactionDirectionOut
    - TransactionDirectionReconcile
  engine.Utxo:
    properties:
      created_at:
        type: string
      deleted_at:
        allOf:
        - $ref: '#/definitions/customtypes.NullTime'
        description: |-
          https://gorm.io/docs/indexes.html
          DeletedAt gorm.DeletedAt `json:"deleted_at" toml:"deleted_at" yaml:"deleted_at" (@mrz: this was the original type)
      draft_id:
        $ref: '#/definitions/customtypes.NullString'
      id:
        description: Model specific fields
        type: string
      metadata:
        $ref: '#/definitions/engine.Metadata'
      output_index:
        type: integer
      reserved_at:
        $ref: '#/definitions/customtypes.NullTime'
      satoshis:
        type: integer
      script_pub_key:
        type: string
      spending_tx_id:
        $ref: '#/definitions/customtypes.NullString'
      transaction:
        allOf:
        - $ref: '#/definitions/engine.Transaction'
        description: |-
          Virtual field holding the original transaction the utxo originated from
          This is needed when signing a new transaction that spends the utxo
      transaction_id:
        type: string
      type:
        type: string
      updated_at:
        type: string
      xpub_id:
        type: string
    type: object
  engine.Xpub:
    properties:
      created_at:
        type: string
      current_balance:
        type: integer
      deleted_at:
        allOf:
        - $ref: '#/definitions/customtypes.NullTime'
        description: |-
          https://gorm.io/docs/indexes.html
          DeletedAt gorm.DeletedAt `json:"deleted_at" toml:"deleted_at" yaml:"deleted_at" (@mrz: this was the original type)
      id:
        description: Model specific fields
        type: string
      metadata:
        $ref: '#/definitions/engine.Metadata'
      next_external_num:
        type: integer
      next_internal_num:
        type: integer
      updated_at:
        type: string
    type: object
  models.AccessKey:
    properties:
      created_at:
        description: CreatedAt is a time when outer model was created.
        type: string
      deleted_at:
        description: DeletedAt is a time when outer model was deleted.
        type: string
      id:
        description: ID is an access key id.
        type: string
      key:
        description: Key is a string representation of an access key.
        type: string
      metadata:
        additionalProperties: true
        description: Metadata is a metadata map of outer model.
        type: object
      revoked_at:
        description: RevokedAt is a time when access key was revoked.
        type: string
      updated_at:
        description: UpdatedAt is a time when outer model was updated.
        type: string
      xpub_id:
        description: XpubID is an access key's xpub related id.
        type: string
    type: object
  models.AdminStats:
    properties:
      balance:
        description: Balance is a total balance of all xpubs.
        type: integer
      destinations:
        description: Destinations is a total number of destinations.
        type: integer
      paymail_addresses:
        description: PaymailAddresses is a total number of paymail addresses.
        type: integer
      transactions:
        description: Transactions is a total number of committed transactions.
        type: integer
      transactions_per_day:
        additionalProperties: true
        description: TransactionsPerDay is a total number of committed transactions
          per day.
        type: object
      utxos:
        description: Utxos is a total number of utxos.
        type: integer
      utxos_per_type:
        additionalProperties: true
        description: UtxosPerType are utxos grouped by type.
        type: object
      xpubs:
        description: Xpubs is a total number of xpubs.
        type: integer
    type: object
  models.Contact:
    properties:
      created_at:
        description: CreatedAt is a time when outer model was created.
        type: string
      deleted_at:
        description: DeletedAt is a time when outer model was deleted.
        type: string
      fullName:
        type: string
      id:
        type: string
      metadata:
        additionalProperties: true
        description: Metadata is a metadata map of outer model.
        type: object
      paymail:
        type: string
      pubKey:
        type: string
      status:
        type: string
      updated_at:
        description: UpdatedAt is a time when outer model was updated.
        type: string
      xpubID:
        type: string
    type: object
  models.Destination:
    properties:
      address:
        description: Address is a destination's address.
        type: string
      chain:
        description: Chain is a destination's chain representation.
        type: integer
      created_at:
        description: CreatedAt is a time when outer model was created.
        type: string
      deleted_at:
        description: DeletedAt is a time when outer model was deleted.
        type: string
      draft_id:
        description: DraftID is a destination's draft id.
        type: string
      id:
        description: ID is a destination id.
        type: string
      locking_script:
        description: LockingScript is a destination's locking script.
        type: string
      metadata:
        additionalProperties: true
        description: Metadata is a metadata map of outer model.
        type: object
      monitor:
        description: Monitor is a time when destination was monitored.
        type: string
      num:
        description: Num is a destination's num representation.
        type: integer
      type:
        description: Type is a destination's type.
        type: string
      updated_at:
        description: UpdatedAt is a time when outer model was updated.
        type: string
      xpub_id:
        description: XpubID is a destination's xpub related id used to register destination.
        type: string
    type: object
  models.DraftTransaction:
    properties:
      configuration:
        allOf:
        - $ref: '#/definitions/models.TransactionConfig'
        description: Configuration contains draft transaction configuration.
      created_at:
        description: CreatedAt is a time when outer model was created.
        type: string
      deleted_at:
        description: DeletedAt is a time when outer model was deleted.
        type: string
      expires_at:
        description: ExpiresAt is a time when draft transaction expired.
        type: string
      final_tx_id:
        description: FinalTxID is a final transaction id.
        type: string
      hex:
        description: Hex is a draft transaction hex.
        type: string
      id:
        description: ID is a draft transaction id.
        type: string
      metadata:
        additionalProperties: true
        description: Metadata is a metadata map of outer model.
        type: object
      status:
        description: Status is a draft transaction lastly monitored status.
        type: string
      updated_at:
        description: UpdatedAt is a time when outer model was updated.
        type: string
      xpub_id:
        description: XpubID is a draft transaction's xpub used to sign transaction.
        type: string
    type: object
  models.FeeUnit:
    properties:
      bytes:
        description: Bytes is a fee unit bytes representation.
        type: integer
      satoshis:
        description: Satoshis is a fee unit satoshis amount.
        type: integer
    type: object
  models.MapProtocol:
    properties:
      app:
        description: App is a map protocol app.
        type: string
      keys:
        additionalProperties: true
        description: Keys is a map protocol keys.
        type: object
      type:
        description: Type is a map protocol type.
        type: string
    type: object
  models.OpReturn:
    properties:
      hex:
        description: Hex is a full hex of op return.
        type: string
      hex_parts:
        description: HexParts is a slice of splitted hex parts.
        items:
          type: string
        type: array
      map:
        allOf:
        - $ref: '#/definitions/models.MapProtocol'
        description: Map is a pointer to a map protocol object.
      string_parts:
        description: StringParts is a slice of string parts.
        items:
          type: string
        type: array
    type: object
  models.PaymailP4:
    properties:
      alias:
        description: Alias is a paymail p4 alias.
        type: string
      domain:
        description: Domain is a paymail p4 domain.
        type: string
      from_paymail:
        description: FromPaymail is a paymail p4 from paymail.
        type: string
      note:
        description: Note is a paymail p4 note.
        type: string
      pub_key:
        description: PubKey is a paymail p4 pub key.
        type: string
      receive_endpoint:
        description: ReceiveEndpoint is a paymail p4 receive endpoint.
        type: string
      reference_id:
        description: ReferenceID is a paymail p4 reference id.
        type: string
      resolution_type:
        description: ResolutionType is a paymail p4 resolution type.
        type: string
    type: object
  models.ScriptOutput:
    properties:
      address:
        description: Address is a script output address.
        type: string
      satoshis:
        description: Satoshis is a script output satoshis.
        type: integer
      script:
        description: Script is a script output script.
        type: string
      script_type:
        description: ScriptType is a script output script type.
        type: string
    type: object
  models.SyncConfig:
    properties:
      broadcast:
        description: Broadcast is a flag that indicates whether to broadcast transaction
          or not.
        type: boolean
      broadcast_instant:
        description: BroadcastInstant is a flag that indicates whether to broadcast
          transaction instantly or not.
        type: boolean
      paymail_p2p:
        description: PaymailP2P is a flag that indicates whether to use paymail p2p
          or not.
        type: boolean
      sync_on_chain:
        description: SyncOnChain is a flag that indicates whether to sync transaction
          on chain or not.
        type: boolean
    type: object
  models.Transaction:
    properties:
      block_hash:
        description: BlockHash is a block hash that transaction is in.
        type: string
      block_height:
        description: BlockHeight is a block height that transaction is in.
        type: integer
      created_at:
        description: CreatedAt is a time when outer model was created.
        type: string
      deleted_at:
        description: DeletedAt is a time when outer model was deleted.
        type: string
      direction:
        description: TransactionDirection is a transaction direction (inbound/outbound).
        type: string
      draft_id:
        description: DraftID is a transaction related draft id.
        type: string
      fee:
        description: Fee is a transaction fee.
        type: integer
      hex:
        description: Hex is a transaction hex.
        type: string
      id:
        description: ID is a transaction id.
        type: string
      metadata:
        additionalProperties: true
        description: Metadata is a metadata map of outer model.
        type: object
      number_of_inputs:
        description: NumberOfInputs is a number of transaction inputs.
        type: integer
      number_of_outputs:
        description: NumberOfOutputs is a number of transaction outputs.
        type: integer
      output_value:
        description: OutputValue is a total output value.
        type: integer
      outputs:
        additionalProperties:
          type: integer
        description: Outputs represents all spv-wallet-transaction outputs. Will be
          shown only for admin.
        type: object
      status:
        description: Status is a transaction status.
        type: string
      total_value:
        description: TotalValue is a total input value.
        type: integer
      updated_at:
        description: UpdatedAt is a time when outer model was updated.
        type: string
      xpub_in_ids:
        description: XpubInIDs is a slice of xpub input ids.
        items:
          type: string
        type: array
      xpub_out_ids:
        description: XpubOutIDs is a slice of xpub output ids.
        items:
          type: string
        type: array
    type: object
  models.TransactionConfig:
    properties:
      change_destinations:
        description: ChangeDestinations is a slice of change destinations.
        items:
          $ref: '#/definitions/models.Destination'
        type: array
      change_destinations_strategy:
        description: ChangeStrategy is a change strategy.
        type: string
      change_minimum_satoshis:
        description: ChangeMinimumSatoshis is a minimum satoshis for change.
        type: integer
      change_number_of_destinations:
        description: ChangeNumberOfDestinations is a number of change destinations.
        type: integer
      change_satoshis:
        description: ChangeSatoshis is a change satoshis.
        type: integer
      expires_in:
        allOf:
        - $ref: '#/definitions/time.Duration'
        description: ExpiresAt is a time when transaction expires.
      fee:
        description: Fee is a fee amount.
        type: integer
      fee_unit:
        allOf:
        - $ref: '#/definitions/models.FeeUnit'
        description: FeeUnit is a pointer to a fee unit object.
      from_utxos:
        description: FromUtxos is a slice of from utxos used to build transaction.
        items:
          $ref: '#/definitions/models.UtxoPointer'
        type: array
      include_utxos:
        description: IncludeUtxos is a slice of utxos to include in transaction.
        items:
          $ref: '#/definitions/models.UtxoPointer'
        type: array
      inputs:
        description: Inputs is a slice of transaction inputs.
        items:
          $ref: '#/definitions/models.TransactionInput'
        type: array
      outputs:
        description: Outputs is a slice of transaction outputs.
        items:
          $ref: '#/definitions/models.TransactionOutput'
        type: array
      send_all_to:
        allOf:
        - $ref: '#/definitions/models.TransactionOutput'
        description: SendAllTo is a pointer to a transaction output object.
      sync:
        allOf:
        - $ref: '#/definitions/models.SyncConfig'
        description: Sync contains sync configuration.
    type: object
  models.TransactionInput:
    properties:
      created_at:
        description: CreatedAt is a time when outer model was created.
        type: string
      deleted_at:
        description: DeletedAt is a time when outer model was deleted.
        type: string
      destination:
        allOf:
        - $ref: '#/definitions/models.Destination'
        description: Destination is a pointer to a destination object.
      draft_id:
        description: DraftID is a utxo transaction related draft id.
        type: string
      id:
        description: ID is a utxo id.
        type: string
      metadata:
        additionalProperties: true
        description: Metadata is a metadata map of outer model.
        type: object
      output_index:
        description: OutputIndex is a output index that utxo points to.
        type: integer
      reserved_at:
        description: ReservedAt is a time utxo was reserved at.
        type: string
      satoshis:
        description: Satoshis is a utxo satoshis amount.
        type: integer
      script_pub_key:
        description: ScriptPubKey is a utxo script pub key.
        type: string
      spending_tx_id:
        description: SpendingTxID is a spending transaction id - null if not spent
          yet.
        type: string
      transaction:
        allOf:
        - $ref: '#/definitions/models.Transaction'
        description: Transaction is a transaction pointer that utxo points to.
      transaction_id:
        description: TransactionID is a transaction id that utxo points to.
        type: string
      type:
        description: Type is a utxo type.
        type: string
      updated_at:
        description: UpdatedAt is a time when outer model was updated.
        type: string
      xpub_id:
        description: XpubID is a utxo related xpub id.
        type: string
    type: object
  models.TransactionOutput:
    properties:
      op_return:
        allOf:
        - $ref: '#/definitions/models.OpReturn'
        description: OpReturn is a pointer to a op return object.
      paymail_p4:
        allOf:
        - $ref: '#/definitions/models.PaymailP4'
        description: PaymailP4 is a pointer to a paymail p4 object.
      satoshis:
        description: Satoshis is a satoshis amount.
        type: integer
      script:
        description: Script is a transaction output string representation of script.
        type: string
      scripts:
        description: ScriptType is a transaction output script type.
        items:
          $ref: '#/definitions/models.ScriptOutput'
        type: array
      to:
        description: To is a transaction output destination address.
        type: string
      use_for_change:
        description: UseForChange is a flag that indicates if this output should be
          used for change.
        type: boolean
    type: object
  models.Utxo:
    properties:
      created_at:
        description: CreatedAt is a time when outer model was created.
        type: string
      deleted_at:
        description: DeletedAt is a time when outer model was deleted.
        type: string
      draft_id:
        description: DraftID is a utxo transaction related draft id.
        type: string
      id:
        description: ID is a utxo id.
        type: string
      metadata:
        additionalProperties: true
        description: Metadata is a metadata map of outer model.
        type: object
      output_index:
        description: OutputIndex is a output index that utxo points to.
        type: integer
      reserved_at:
        description: ReservedAt is a time utxo was reserved at.
        type: string
      satoshis:
        description: Satoshis is a utxo satoshis amount.
        type: integer
      script_pub_key:
        description: ScriptPubKey is a utxo script pub key.
        type: string
      spending_tx_id:
        description: SpendingTxID is a spending transaction id - null if not spent
          yet.
        type: string
      transaction:
        allOf:
        - $ref: '#/definitions/models.Transaction'
        description: Transaction is a transaction pointer that utxo points to.
      transaction_id:
        description: TransactionID is a transaction id that utxo points to.
        type: string
      type:
        description: Type is a utxo type.
        type: string
      updated_at:
        description: UpdatedAt is a time when outer model was updated.
        type: string
      xpub_id:
        description: XpubID is a utxo related xpub id.
        type: string
    type: object
  models.UtxoPointer:
    properties:
      output_index:
        description: OutputIndex is a output index that utxo points to.
        type: integer
      transaction_id:
        description: TransactionID is a transaction id that utxo points to.
        type: string
    type: object
  models.Xpub:
    properties:
      created_at:
        description: CreatedAt is a time when outer model was created.
        type: string
      current_balance:
        description: CurrentBalance is a xpub's current balance.
        type: integer
      deleted_at:
        description: DeletedAt is a time when outer model was deleted.
        type: string
      id:
        description: ID is a xpub id.
        type: string
      metadata:
        additionalProperties: true
        description: Metadata is a metadata map of outer model.
        type: object
      next_external_num:
        description: NextExternalNum is a next external num.
        type: integer
      next_internal_num:
        description: NextInternalNum is a next internal num.
        type: integer
      updated_at:
        description: UpdatedAt is a time when outer model was updated.
        type: string
    type: object
  time.Duration:
    enum:
    - -9223372036854775808
    - 9223372036854775807
    - 1
    - 1000
    - 1000000
    - 1000000000
    - 60000000000
    - 3600000000000
    - -9223372036854775808
    - 9223372036854775807
    - 1
    - 1000
    - 1000000
    - 1000000000
    - 60000000000
    - 3600000000000
    type: integer
    x-enum-varnames:
    - minDuration
    - maxDuration
    - Nanosecond
    - Microsecond
    - Millisecond
    - Second
    - Minute
    - Hour
    - minDuration
    - maxDuration
    - Nanosecond
    - Microsecond
    - Millisecond
    - Second
    - Minute
    - Hour
  transactions.NewTransaction:
    properties:
      config:
        allOf:
        - $ref: '#/definitions/models.TransactionConfig'
        description: Configuration of the transaction
      metadata:
        allOf:
        - $ref: '#/definitions/engine.Metadata'
        description: Accepts a JSON object for embedding custom metadata, enabling
          arbitrary additional information to be associated with the resource
    type: object
  transactions.RecordTransaction:
    properties:
      hex:
        description: Hex of the transaction
        type: string
      metadata:
        allOf:
        - $ref: '#/definitions/engine.Metadata'
        description: Accepts a JSON object for embedding custom metadata, enabling
          arbitrary additional information to be associated with the resource
      reference_id:
        description: ReferenceID which is a ID of the draft transaction
        type: string
    type: object
  transactions.UpdateTransaction:
    properties:
      id:
        description: Id of the transaction which is a hash of the transaction
        type: string
      metadata:
        allOf:
        - $ref: '#/definitions/engine.Metadata'
        description: Accepts a JSON object for embedding custom metadata, enabling
          arbitrary additional information to be associated with the resource
    type: object
info:
  contact: {}
  title: SPV Wallet
  version: v0.12.0
paths:
  /transaction/broadcast/callback:
    post:
      parameters:
      - description: Transaction
        in: body
        name: transaction
        required: true
        schema:
          $ref: '#/definitions/broadcast.SubmittedTx'
      responses:
        "200":
          description: OK
        "400":
          description: Bad request - Error while parsing transaction from request
            body
        "500":
          description: Internal Server Error - Error while updating transaction
      security:
      - callback-auth: []
      summary: Broadcast Callback
      tags:
      - Transactions
  /v1/access-key:
    delete:
      description: Revoke access key
      parameters:
      - description: id of the access key
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Created AccessKey
          schema:
            $ref: '#/definitions/models.AccessKey'
        "400":
          description: 'Bad request - Missing required field: id'
        "500":
          description: Internal server error - Error while revoking access key
      security:
      - x-auth-xpub: []
      summary: Revoke access key
      tags:
      - Access-key
    get:
      description: Get access key
      parameters:
      - description: id of the access key
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: AccessKey with given id
          schema:
            $ref: '#/definitions/models.AccessKey'
        "400":
          description: 'Bad request - Missing required field: id'
        "403":
          description: Forbidden - Access key is not owned by the user
        "500":
          description: Internal server error - Error while getting access key
      security:
      - x-auth-xpub: []
      summary: Get access key
      tags:
      - Access-key
    post:
      description: Create access key
      parameters:
      - description: CreateAccessKey model containing metadata
        in: body
        name: CreateAccessKey
        required: true
        schema:
          $ref: '#/definitions/accesskeys.CreateAccessKey'
      produces:
      - application/json
      responses:
        "201":
          description: Created AccessKey
          schema:
            $ref: '#/definitions/models.AccessKey'
        "400":
          description: Bad request - Error while parsing CreateAccessKey from request
            body
        "500":
          description: Internal server error - Error while creating new access key
      security:
      - x-auth-xpub: []
      summary: Create access key
      tags:
      - Access-key
  /v1/access-key/count:
    post:
      description: Count of access keys
      parameters:
      - description: Supports targeted resource asset counting with filters for metadata
          and custom conditions
        in: body
        name: CountRequestParameters
        schema:
          $ref: '#/definitions/actions.CountRequestParameters'
      produces:
      - application/json
      responses:
        "200":
          description: Count of access keys
          schema:
            type: number
        "400":
          description: Bad request - Error while parsing CountRequestParameters from
            request body
        "500":
          description: Internal Server Error - Error while fetching count of access
            keys
      security:
      - x-auth-xpub: []
      summary: Count of access keys
      tags:
      - Access-key
  /v1/access-key/search:
    post:
      description: Search access key
      parameters:
      - description: Supports targeted resource searches with filters for metadata
          and custom conditions, plus options for pagination and sorting to streamline
          data exploration and analysis
        in: body
        name: SearchRequestParameters
        schema:
          $ref: '#/definitions/actions.SearchRequestParameters'
      produces:
      - application/json
      responses:
        "200":
          description: List of access keys
          schema:
            items:
              items:
                $ref: '#/definitions/models.AccessKey'
              type: array
            type: array
        "400":
          description: Bad request - Error while parsing SearchRequestParameters from
            request body
        "500":
          description: Internal server error - Error while searching for access keys
      security:
      - x-auth-xpub: []
      summary: Search access key
      tags:
      - Access-key
  /v1/admin/access-keys/count:
    post:
      description: Access Keys Count
      parameters:
      - description: Supports targeted resource asset counting with filters for metadata
          and custom conditions
        in: body
        name: CountRequestParameters
        schema:
          $ref: '#/definitions/actions.CountRequestParameters'
      produces:
      - application/json
      responses:
        "200":
          description: Count of access keys
          schema:
            type: number
        "400":
          description: Bad request - Error while parsing CountRequestParameters from
            request body
        "500":
          description: Internal Server Error - Error while fetching count of access
            keys
      security:
      - x-auth-xpub: []
      summary: Access Keys Count
      tags:
      - Admin
  /v1/admin/access-keys/search:
    post:
      description: Access Keys Search
      parameters:
      - description: Supports targeted resource searches with filters for metadata
          and custom conditions, plus options for pagination and sorting to streamline
          data exploration and analysis
        in: body
        name: SearchRequestParameters
        schema:
          $ref: '#/definitions/actions.SearchRequestParameters'
      produces:
      - application/json
      responses:
        "200":
          description: List of access keys
          schema:
            items:
              items:
                $ref: '#/definitions/models.AccessKey'
              type: array
            type: array
        "400":
          description: Bad request - Error while parsing SearchRequestParameters from
            request body
        "500":
          description: Internal server error - Error while searching for access keys
      security:
      - x-auth-xpub: []
      summary: Access Keys Search
      tags:
      - Admin
  /v1/admin/destinations/search:
    post:
      description: Search for destinations
      parameters:
      - description: Supports targeted resource searches with filters for metadata
          and custom conditions, plus options for pagination and sorting to streamline
          data exploration and analysis
        in: body
        name: SearchRequestParameters
        schema:
          $ref: '#/definitions/actions.SearchRequestParameters'
      produces:
      - application/json
      responses:
        "200":
          description: List of destinations
          schema:
            items:
              items:
                $ref: '#/definitions/models.Destination'
              type: array
            type: array
        "400":
          description: Bad request - Error while parsing SearchRequestParameters from
            request body
        "500":
          description: Internal server error - Error while searching for destinations
      security:
      - x-auth-xpub: []
      summary: Search for destinations
      tags:
      - Admin
  /v1/admin/paymail/create:
    post:
      description: Create paymail
      parameters:
      - description: CreatePaymail model containing all information to create a new
          paymail address
        in: body
        name: CreatePaymail
        schema:
          $ref: '#/definitions/admin.CreatePaymail'
      produces:
      - application/json
      responses:
        "201":
          description: Created PaymailAddress
          schema:
            $ref: '#/definitions/engine.PaymailAddress'
        "400":
          description: Bad request - Error while parsing CreatePaymail from request
            body or if xpub or address are missing
        "500":
          description: Internal Server Error - Error while creating new paymail address
      security:
      - x-auth-xpub: []
      summary: Create paymail
      tags:
      - Admin
  /v1/admin/paymail/delete:
    delete:
      description: Delete paymail
      parameters:
      - description: PaymailAddress model containing paymail address to delete
        in: body
        name: PaymailAddress
        schema:
          $ref: '#/definitions/admin.PaymailAddress'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad request - Error while parsing PaymailAddress from request
            body or if address is missing
        "500":
          description: Internal Server Error - Error while deleting paymail address
      security:
      - x-auth-xpub: []
      summary: Delete paymail
      tags:
      - Admin
  /v1/admin/paymail/get:
    post:
      description: Get paymail
      parameters:
      - description: PaymailAddress model containing paymail address to get
        in: body
        name: PaymailAddress
        schema:
          $ref: '#/definitions/admin.PaymailAddress'
      produces:
      - application/json
      responses:
        "200":
          description: PaymailAddress with given address
          schema:
            $ref: '#/definitions/engine.PaymailAddress'
        "400":
          description: Bad request - Error while parsing PaymailAddress from request
            body
        "500":
          description: Internal Server Error - Error while getting paymail address
      security:
      - x-auth-xpub: []
      summary: Get paymail
      tags:
      - Admin
  /v1/admin/paymails/count:
    post:
      description: Paymail addresses count
      parameters:
      - description: Supports targeted resource asset counting with filters for metadata
          and custom conditions
        in: body
        name: CountRequestParameters
        schema:
          $ref: '#/definitions/actions.CountRequestParameters'
      produces:
      - application/json
      responses:
        "200":
          description: Count of paymail addresses
          schema:
            type: number
        "400":
          description: Bad request - Error while parsing CountRequestParameters from
            request body
        "500":
          description: Internal Server Error - Error while fetching count of paymail
            addresses
      security:
      - x-auth-xpub: []
      summary: Paymail addresses count
      tags:
      - Admin
  /v1/admin/paymails/search:
    post:
      description: Paymail addresses search
      parameters:
      - description: Supports targeted resource searches with filters for metadata
          and custom conditions, plus options for pagination and sorting to streamline
          data exploration and analysis
        in: body
        name: SearchRequestParameters
        schema:
          $ref: '#/definitions/actions.SearchRequestParameters'
      produces:
      - application/json
      responses:
        "200":
          description: List of paymail addresses
          schema:
            items:
              items:
                $ref: '#/definitions/engine.PaymailAddress'
              type: array
            type: array
        "400":
          description: Bad request - Error while parsing SearchRequestParameters from
            request body
        "500":
          description: Internal server error - Error while searching for paymail addresses
      security:
      - x-auth-xpub: []
      summary: Paymail addresses search
      tags:
      - Admin
  /v1/admin/stats:
    get:
      description: Get stats
      produces:
      - application/json
      responses:
        "200":
          description: Stats for the admin
          schema:
            $ref: '#/definitions/models.AdminStats'
        "500":
          description: Internal Server Error - Error while fetching admin stats
      security:
      - x-auth-xpub: []
      summary: Get stats
      tags:
      - Admin
  /v1/admin/status:
    get:
      description: Get status
      produces:
      - application/json
      responses:
        "200":
          description: Status response
          schema:
            type: boolean
      security:
      - x-auth-xpub: []
      summary: Get status
      tags:
      - Admin
  /v1/admin/transactions/count:
    post:
      description: Count transactions
      parameters:
      - description: Supports targeted resource asset counting with filters for metadata
          and custom conditions
        in: body
        name: CountRequestParameters
        schema:
          $ref: '#/definitions/actions.CountRequestParameters'
      produces:
      - application/json
      responses:
        "200":
          description: Count of transactions
          schema:
            type: number
        "400":
          description: Bad request - Error while parsing CountRequestParameters from
            request body
        "500":
          description: Internal Server Error - Error while fetching count of transactions
      security:
      - x-auth-xpub: []
      summary: Count transactions
      tags:
      - Admin
  /v1/admin/transactions/record:
    post:
      description: Record transactions
      parameters:
      - description: RecordTransaction model containing hex of the transaction to
          record
        in: body
        name: RecordTransaction
        required: true
        schema:
          $ref: '#/definitions/admin.RecordTransaction'
      produces:
      - application/json
      responses:
        "201":
          description: Recorded transaction
          schema:
            $ref: '#/definitions/models.Transaction'
        "400":
          description: Bad request - Error while parsing RecordTransaction from request
            body
        "500":
          description: Internal Server Error - Error while fetching count of access
            keys
      security:
      - x-auth-xpub: []
      summary: Record transactions
      tags:
      - Admin
  /v1/admin/transactions/search:
    post:
      description: Search for transactions
      parameters:
      - description: Supports targeted resource searches with filters for metadata
          and custom conditions, plus options for pagination and sorting to streamline
          data exploration and analysis
        in: body
        name: SearchRequestParameters
        schema:
          $ref: '#/definitions/actions.SearchRequestParameters'
      produces:
      - application/json
      responses:
        "200":
          description: List of transactions
          schema:
            items:
              items:
                $ref: '#/definitions/models.Transaction'
              type: array
            type: array
        "400":
          description: Bad request - Error while parsing SearchRequestParameters from
            request body
        "500":
          description: Internal server error - Error while searching for transactions
      security:
      - x-auth-xpub: []
      summary: Search for transactions
      tags:
      - Admin
  /v1/admin/utxos/count:
    post:
      description: Count utxos
      parameters:
      - description: Supports targeted resource asset counting with filters for metadata
          and custom conditions
        in: body
        name: CountRequestParameters
        schema:
          $ref: '#/definitions/actions.CountRequestParameters'
      produces:
      - application/json
      responses:
        "200":
          description: Count of utxos
          schema:
            type: number
        "400":
          description: Bad request - Error while parsing CountRequestParameters from
            request body
        "500":
          description: Internal Server Error - Error while fetching count of utxos
      security:
      - x-auth-xpub: []
      summary: Count utxos
      tags:
      - Admin
  /v1/admin/utxos/search:
    post:
      description: Search for utxos
      parameters:
      - description: Supports targeted resource searches with filters for metadata
          and custom conditions, plus options for pagination and sorting to streamline
          data exploration and analysis
        in: body
        name: SearchRequestParameters
        schema:
          $ref: '#/definitions/actions.SearchRequestParameters'
      produces:
      - application/json
      responses:
        "200":
          description: List of utxos
          schema:
            items:
              items:
                $ref: '#/definitions/engine.Utxo'
              type: array
            type: array
        "400":
          description: Bad request - Error while parsing SearchRequestParameters from
            request body
        "500":
          description: Internal server error - Error while searching for utxos
      security:
      - x-auth-xpub: []
      summary: Search for utxos
      tags:
      - Admin
  /v1/admin/xpub:
    post:
      description: Create xPub
      parameters:
      - description: CreateXpub model containing key and metadata
        in: body
        name: CreateXpub
        required: true
        schema:
          $ref: '#/definitions/admin.CreateXpub'
      produces:
      - application/json
      responses:
        "201":
          description: Created Xpub
          schema:
            $ref: '#/definitions/models.Xpub'
        "400":
          description: Bad request - Error while parsing CreateXpub from request body
        "500":
          description: Internal server error - Error while creating xpub
      security:
      - x-auth-xpub: []
      summary: Create xPub
      tags:
      - Admin
  /v1/admin/xpubs/count:
    post:
      description: Count xpubs
      parameters:
      - description: Supports targeted resource asset counting with filters for metadata
          and custom conditions
        in: body
        name: CountRequestParameters
        schema:
          $ref: '#/definitions/actions.CountRequestParameters'
      produces:
      - application/json
      responses:
        "200":
          description: Count of access keys
          schema:
            type: number
        "400":
          description: Bad request - Error while parsing CountRequestParameters from
            request body
        "500":
          description: Internal Server Error - Error while fetching count of xpubs
      security:
      - x-auth-xpub: []
      summary: Count xpubs
      tags:
      - Admin
  /v1/admin/xpubs/search:
    post:
      description: Search for xpubs
      parameters:
      - description: Supports targeted resource searches with filters for metadata
          and custom conditions, plus options for pagination and sorting to streamline
          data exploration and analysis
        in: body
        name: SearchRequestParameters
        schema:
          $ref: '#/definitions/actions.SearchRequestParameters'
      produces:
      - application/json
      responses:
        "200":
          description: List of xpubs
          schema:
            items:
              items:
                $ref: '#/definitions/engine.Xpub'
              type: array
            type: array
        "400":
          description: Bad request - Error while parsing SearchRequestParameters from
            request body
        "500":
          description: Internal server error - Error while searching for xpubs
      security:
      - x-auth-xpub: []
      summary: Search for xpubs
      tags:
      - Admin
  /v1/contact:
    post:
      description: Create contact
      parameters:
      - description: fullName
        in: query
        name: fullName
        type: string
      - description: paymail
        in: query
        name: paymail
        type: string
      - description: pubKey
        in: query
        name: pubKey
        type: string
      - description: metadata
        in: query
        name: metadata
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Contact created
          schema:
            $ref: '#/definitions/models.Contact'
        "500":
          description: Internal server error - Error while creating contact
      security:
      - bux-auth-xpub: []
      summary: Create contact
      tags:
      - Contact
  /v1/destination:
    get:
      description: Get a destination
      parameters:
      - description: Destination ID
        in: query
        name: id
        type: string
      - description: Destination address
        in: query
        name: address
        type: string
      - description: Destination locking script
        in: query
        name: locking_script
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Destination with given id
          schema:
            $ref: '#/definitions/models.Destination'
        "400":
          description: Bad request - All parameters are missing (id, address, locking_script)
        "500":
          description: Internal server error - Error while getting destination
      security:
      - x-auth-xpub: []
      summary: Get a destination
      tags:
      - Destinations
    patch:
      description: Update destination
      parameters:
      - description: UpdateDestination model containing an id, address, locking_script
          and metadata
        in: body
        name: UpdateDestination
        schema:
          $ref: '#/definitions/destinations.UpdateDestination'
      produces:
      - application/json
      responses:
        "200":
          description: Updated Destination
          schema:
            $ref: '#/definitions/models.Destination'
        "400":
          description: Bad request - Error while parsing UpdateDestination from request
            body
        "500":
          description: Internal Server Error - Error while updating destination
      security:
      - x-auth-xpub: []
      summary: Update destination
      tags:
      - Destinations
    post:
      description: Create a new destination
      parameters:
      - description: CreateDestination model containing metadata
        in: body
        name: CreateDestination
        schema:
          $ref: '#/definitions/destinations.CreateDestination'
      produces:
      - application/json
      responses:
        "201":
          description: Created Destination
          schema:
            $ref: '#/definitions/models.Destination'
        "400":
          description: Bad request - Error while parsing CreateDestination from request
            body
        "500":
          description: Internal Server Error - Error while creating destination
      security:
      - x-auth-xpub: []
      summary: Create a new destination
      tags:
      - Destinations
  /v1/destination/count:
    post:
      description: Count Destinations
      parameters:
      - description: Supports targeted resource asset counting with filters for metadata
          and custom conditions
        in: body
        name: CountRequestParameters
        schema:
          $ref: '#/definitions/actions.CountRequestParameters'
      produces:
      - application/json
      responses:
        "200":
          description: Count of destinations
          schema:
            type: number
        "400":
          description: Bad request - Error while parsing CountRequestParameters from
            request body
        "500":
          description: Internal Server Error - Error while fetching count of destinations
      security:
      - x-auth-xpub: []
      summary: Count Destinations
      tags:
      - Destinations
  /v1/destination/search:
    post:
      description: Search for a destination
      parameters:
      - description: Supports targeted resource searches with filters for metadata
          and custom conditions, plus options for pagination and sorting to streamline
          data exploration and analysis
        in: body
        name: SearchRequestParameters
        schema:
          $ref: '#/definitions/actions.SearchRequestParameters'
      produces:
      - application/json
      responses:
        "200":
          description: List of destinations
          schema:
            items:
              items:
                $ref: '#/definitions/models.Destination'
              type: array
            type: array
        "400":
          description: Bad request - Error while parsing SearchRequestParameters from
            request body
        "500":
          description: Internal server error - Error while searching for destinations
      security:
      - x-auth-xpub: []
      summary: Search for a destination
      tags:
      - Destinations
  /v1/transaction:
    get:
      description: Get transaction by id
      parameters:
      - description: id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Transaction
          schema:
            $ref: '#/definitions/models.Transaction'
        "400":
          description: Bad request - Transaction not found or associated with another
            xpub
        "500":
          description: Internal Server Error - Error while fetching transaction
      security:
      - x-auth-xpub: []
      summary: Get transaction by id
      tags:
      - Transactions
    patch:
      description: Update transaction
      parameters:
      - description: UpdateTransaction model containing the information about tx to
          update
        in: body
        name: UpdateTransaction
        required: true
        schema:
          $ref: '#/definitions/transactions.UpdateTransaction'
      produces:
      - application/json
      responses:
        "200":
          description: Updated transaction
          schema:
            $ref: '#/definitions/models.Transaction'
        "400":
          description: Bad request - Error while parsing UpdateTransaction from request
            body, tx not found or tx is not associated with the xpub
        "500":
          description: Internal Server Error - Error while updating transaction
      security:
      - x-auth-xpub: []
      summary: Update transaction
      tags:
      - Transactions
    post:
      description: New transaction
      parameters:
      - description: NewTransaction model containing the transaction config and metadata
        in: body
        name: NewTransaction
        required: true
        schema:
          $ref: '#/definitions/transactions.NewTransaction'
      produces:
      - application/json
      responses:
        "201":
          description: Created transaction
          schema:
            $ref: '#/definitions/models.DraftTransaction'
        "400":
          description: Bad request - Error while parsing NewTransaction from request
            body or xpub not found
        "500":
          description: Internal Server Error - Error while creating transaction
      security:
      - x-auth-xpub: []
      summary: New transaction
      tags:
      - Transactions
  /v1/transaction/count:
    post:
      description: Count of transactions
      parameters:
      - description: Supports targeted resource asset counting with filters for metadata
          and custom conditions
        in: body
        name: CountRequestParameters
        schema:
          $ref: '#/definitions/actions.CountRequestParameters'
      produces:
      - application/json
      responses:
        "200":
          description: Count of access keys
          schema:
            type: number
        "400":
          description: Bad request - Error while parsing CountRequestParameters from
            request body
        "500":
          description: Internal Server Error - Error while fetching count of transactions
      security:
      - x-auth-xpub: []
      summary: Count of transactions
      tags:
      - Transactions
  /v1/transaction/record:
    post:
      description: Record transaction
      parameters:
      - description: Transaction to be recorded
        in: body
        name: RecordTransaction
        required: true
        schema:
          $ref: '#/definitions/transactions.RecordTransaction'
      produces:
      - application/json
      responses:
        "201":
          description: Created transaction
          schema:
            $ref: '#/definitions/models.Transaction'
        "400":
          description: Bad request - Error while parsing RecordTransaction from request
            body or xpub not found
        "500":
          description: Internal Server Error - Error while recording transaction
      security:
      - x-auth-xpub: []
      summary: Record transaction
      tags:
      - Transactions
  /v1/transaction/search:
    post:
      description: Search transaction
      parameters:
      - description: Supports targeted resource searches with filters for metadata
          and custom conditions, plus options for pagination and sorting to streamline
          data exploration and analysis
        in: body
        name: SearchRequestParameters
        schema:
          $ref: '#/definitions/actions.SearchRequestParameters'
      produces:
      - application/json
      responses:
        "200":
          description: List of transactions
          schema:
            items:
              items:
                $ref: '#/definitions/models.Transaction'
              type: array
            type: array
        "400":
          description: Bad request - Error while parsing SearchRequestParameters from
            request body
        "500":
          description: Internal server error - Error while searching for transactions
      security:
      - x-auth-xpub: []
      summary: Search transaction
      tags:
      - Transactions
  /v1/utxo:
    get:
      description: Get UTXO
      parameters:
      - description: Id of the transaction
        in: query
        name: tx_id
        required: true
        type: string
      - description: Output index
        in: query
        name: output_index
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: UTXO with given Id and output index
          schema:
            $ref: '#/definitions/models.Utxo'
        "400":
          description: Bad request - Error while parsing output_index
        "500":
          description: Internal Server Error - Error while fetching utxo
      security:
      - x-auth-xpub: []
      summary: Get UTXO
      tags:
      - UTXO
  /v1/utxo/count:
    post:
      description: Count of UTXOs
      parameters:
      - description: Supports targeted resource asset counting with filters for metadata
          and custom conditions
        in: body
        name: CountRequestParameters
        schema:
          $ref: '#/definitions/actions.CountRequestParameters'
      produces:
      - application/json
      responses:
        "200":
          description: Count of utxos
          schema:
            type: number
        "400":
          description: Bad request - Error while parsing CountRequestParameters from
            request body
        "500":
          description: Internal Server Error - Error while fetching count of utxos
      security:
      - x-auth-xpub: []
      summary: Count of UTXOs
      tags:
      - UTXO
  /v1/utxo/search:
    post:
      description: Search UTXO
      parameters:
      - description: Supports targeted resource searches with filters for metadata
          and custom conditions, plus options for pagination and sorting to streamline
          data exploration and analysis
        in: body
        name: SearchRequestParameters
        schema:
          $ref: '#/definitions/actions.SearchRequestParameters'
      produces:
      - application/json
      responses:
        "200":
          description: List of utxos
          schema:
            items:
              items:
                $ref: '#/definitions/models.Utxo'
              type: array
            type: array
        "400":
          description: Bad request - Error while parsing SearchRequestParameters from
            request body
        "500":
          description: Internal server error - Error while searching for utxos
      security:
      - x-auth-xpub: []
      summary: Search UTXO
      tags:
      - UTXO
  /v1/xpub:
    get:
      description: Get xPub
      produces:
      - application/json
      responses:
        "200":
          description: xPub associated with the given xPub from auth header
          schema:
            $ref: '#/definitions/models.Xpub'
        "500":
          description: Internal Server Error - Error while fetching xPub
      security:
      - x-auth-xpub: []
      summary: Get xPub
      tags:
      - xPub
    patch:
      description: Update xPub
      parameters:
      - description: Metadata which should replace the already existing one
        in: body
        name: Metadata
        schema:
          $ref: '#/definitions/engine.Metadata'
      produces:
      - application/json
      responses:
        "200":
          description: Updated xPub
          schema:
            $ref: '#/definitions/models.Xpub'
        "400":
          description: Bad request - Error while parsing Metadata from request body
        "500":
          description: Internal Server Error - Error while updating xPub
      security:
      - x-auth-xpub: []
      - bux-auth-xpub: []
      summary: Update xPub
      tags:
      - xPub
securityDefinitions:
  callback-auth:
    in: header
    name: authorization
    type: apiKey
  x-auth-xpub:
    in: header
    name: x-auth-xpub
    type: apiKey
swagger: "2.0"
