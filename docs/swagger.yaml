definitions:
  accesskeys.CountAccessKeys:
    properties:
      conditions:
        allOf:
        - $ref: '#/definitions/filter.AccessKeyFilter'
        description: Custom conditions used for filtering the search results. Every
          field within the object is optional.
      metadata:
        additionalProperties:
          type: string
        description: Accepts a JSON object for embedding custom metadata, enabling
          arbitrary additional information to be associated with the resource
        example:
          key: value
          key2: value2
        type: object
    type: object
  accesskeys.CreateAccessKey:
    properties:
      metadata:
        additionalProperties:
          type: string
        description: Accepts a JSON object for embedding custom metadata, enabling
          arbitrary additional information to be associated with the resource
        example:
          key: value
          key2: value2
        type: object
    type: object
  accesskeys.SearchAccessKeys:
    properties:
      conditions:
        allOf:
        - $ref: '#/definitions/filter.AccessKeyFilter'
        description: Custom conditions used for filtering the search results. Every
          field within the object is optional.
      metadata:
        additionalProperties:
          type: string
        description: Accepts a JSON object for embedding custom metadata, enabling
          arbitrary additional information to be associated with the resource
        example:
          key: value
          key2: value2
        type: object
      params:
        additionalProperties:
          type: string
        description: Pagination and sorting options to streamline data exploration
          and analysis
        example:
          order_by_direction: desc
          order_by_field: created_at
          page: "1"
          page_size: "10"
        type: object
    type: object
  admin.CountAccessKeys:
    properties:
      conditions:
        allOf:
        - $ref: '#/definitions/filter.AdminAccessKeyFilter'
        description: Custom conditions used for filtering the search results. Every
          field within the object is optional.
      metadata:
        additionalProperties:
          type: string
        description: Accepts a JSON object for embedding custom metadata, enabling
          arbitrary additional information to be associated with the resource
        example:
          key: value
          key2: value2
        type: object
    type: object
  admin.CountDestinations:
    properties:
      conditions:
        allOf:
        - $ref: '#/definitions/filter.DestinationFilter'
        description: Custom conditions used for filtering the search results. Every
          field within the object is optional.
      metadata:
        additionalProperties:
          type: string
        description: Accepts a JSON object for embedding custom metadata, enabling
          arbitrary additional information to be associated with the resource
        example:
          key: value
          key2: value2
        type: object
    type: object
  admin.CountPaymails:
    properties:
      conditions:
        allOf:
        - $ref: '#/definitions/filter.AdminPaymailFilter'
        description: Custom conditions used for filtering the search results. Every
          field within the object is optional.
      metadata:
        additionalProperties:
          type: string
        description: Accepts a JSON object for embedding custom metadata, enabling
          arbitrary additional information to be associated with the resource
        example:
          key: value
          key2: value2
        type: object
    type: object
  admin.CountTransactions:
    properties:
      conditions:
        allOf:
        - $ref: '#/definitions/filter.TransactionFilter'
        description: Custom conditions used for filtering the search results. Every
          field within the object is optional.
      metadata:
        additionalProperties:
          type: string
        description: Accepts a JSON object for embedding custom metadata, enabling
          arbitrary additional information to be associated with the resource
        example:
          key: value
          key2: value2
        type: object
    type: object
  admin.CountUtxos:
    properties:
      conditions:
        allOf:
        - $ref: '#/definitions/filter.AdminUtxoFilter'
        description: Custom conditions used for filtering the search results. Every
          field within the object is optional.
      metadata:
        additionalProperties:
          type: string
        description: Accepts a JSON object for embedding custom metadata, enabling
          arbitrary additional information to be associated with the resource
        example:
          key: value
          key2: value2
        type: object
    type: object
  admin.CountXpubs:
    properties:
      conditions:
        allOf:
        - $ref: '#/definitions/filter.XpubFilter'
        description: Custom conditions used for filtering the search results. Every
          field within the object is optional.
      metadata:
        additionalProperties:
          type: string
        description: Accepts a JSON object for embedding custom metadata, enabling
          arbitrary additional information to be associated with the resource
        example:
          key: value
          key2: value2
        type: object
    type: object
  admin.CreatePaymail:
    properties:
      address:
        description: The paymail address
        example: test@spv-wallet.com
        type: string
      avatar:
        description: The avatar of the paymail (url address)
        example: https://example.com/avatar.png
        type: string
      key:
        description: The xpub with which the paymail is associated
        example: xpub661MyMwAqRbcGpZVrSHU...
        type: string
      metadata:
        additionalProperties:
          type: string
        description: Accepts a JSON object for embedding custom metadata, enabling
          arbitrary additional information to be associated with the resource
        example:
          key: value
          key2: value2
        type: object
      public_name:
        description: The public name of the paymail
        example: Test
        type: string
    type: object
  admin.CreateXpub:
    properties:
      key:
        description: The xpub key
        example: xpub661MyMwAqRbcGpZVrSHU...
        type: string
      metadata:
        additionalProperties:
          type: string
        description: Accepts a JSON object for embedding custom metadata, enabling
          arbitrary additional information to be associated with the resource
        example:
          key: value
          key2: value2
        type: object
    type: object
  admin.PaymailAddress:
    properties:
      address:
        description: The paymail address
        example: test@spv-wallet.com
        type: string
    type: object
  admin.RecordTransaction:
    properties:
      hex:
        description: The transaction hex
        example: 0100000002...
        type: string
    type: object
  admin.SearchAccessKeys:
    properties:
      conditions:
        allOf:
        - $ref: '#/definitions/filter.AdminAccessKeyFilter'
        description: Custom conditions used for filtering the search results. Every
          field within the object is optional.
      metadata:
        additionalProperties:
          type: string
        description: Accepts a JSON object for embedding custom metadata, enabling
          arbitrary additional information to be associated with the resource
        example:
          key: value
          key2: value2
        type: object
      params:
        additionalProperties:
          type: string
        description: Pagination and sorting options to streamline data exploration
          and analysis
        example:
          order_by_direction: desc
          order_by_field: created_at
          page: "1"
          page_size: "10"
        type: object
    type: object
  admin.SearchContacts:
    properties:
      conditions:
        allOf:
        - $ref: '#/definitions/filter.ContactFilter'
        description: Custom conditions used for filtering the search results. Every
          field within the object is optional.
      metadata:
        additionalProperties:
          type: string
        description: Accepts a JSON object for embedding custom metadata, enabling
          arbitrary additional information to be associated with the resource
        example:
          key: value
          key2: value2
        type: object
      params:
        additionalProperties:
          type: string
        description: Pagination and sorting options to streamline data exploration
          and analysis
        example:
          order_by_direction: desc
          order_by_field: created_at
          page: "1"
          page_size: "10"
        type: object
    type: object
  admin.SearchDestinations:
    properties:
      conditions:
        allOf:
        - $ref: '#/definitions/filter.DestinationFilter'
        description: Custom conditions used for filtering the search results. Every
          field within the object is optional.
      metadata:
        additionalProperties:
          type: string
        description: Accepts a JSON object for embedding custom metadata, enabling
          arbitrary additional information to be associated with the resource
        example:
          key: value
          key2: value2
        type: object
      params:
        additionalProperties:
          type: string
        description: Pagination and sorting options to streamline data exploration
          and analysis
        example:
          order_by_direction: desc
          order_by_field: created_at
          page: "1"
          page_size: "10"
        type: object
    type: object
  admin.SearchPaymails:
    properties:
      conditions:
        allOf:
        - $ref: '#/definitions/filter.AdminPaymailFilter'
        description: Custom conditions used for filtering the search results. Every
          field within the object is optional.
      metadata:
        additionalProperties:
          type: string
        description: Accepts a JSON object for embedding custom metadata, enabling
          arbitrary additional information to be associated with the resource
        example:
          key: value
          key2: value2
        type: object
      params:
        additionalProperties:
          type: string
        description: Pagination and sorting options to streamline data exploration
          and analysis
        example:
          order_by_direction: desc
          order_by_field: created_at
          page: "1"
          page_size: "10"
        type: object
    type: object
  admin.SearchTransactions:
    properties:
      conditions:
        allOf:
        - $ref: '#/definitions/filter.TransactionFilter'
        description: Custom conditions used for filtering the search results. Every
          field within the object is optional.
      metadata:
        additionalProperties:
          type: string
        description: Accepts a JSON object for embedding custom metadata, enabling
          arbitrary additional information to be associated with the resource
        example:
          key: value
          key2: value2
        type: object
      params:
        additionalProperties:
          type: string
        description: Pagination and sorting options to streamline data exploration
          and analysis
        example:
          order_by_direction: desc
          order_by_field: created_at
          page: "1"
          page_size: "10"
        type: object
    type: object
  admin.SearchUtxos:
    properties:
      conditions:
        allOf:
        - $ref: '#/definitions/filter.AdminUtxoFilter'
        description: Custom conditions used for filtering the search results. Every
          field within the object is optional.
      metadata:
        additionalProperties:
          type: string
        description: Accepts a JSON object for embedding custom metadata, enabling
          arbitrary additional information to be associated with the resource
        example:
          key: value
          key2: value2
        type: object
      params:
        additionalProperties:
          type: string
        description: Pagination and sorting options to streamline data exploration
          and analysis
        example:
          order_by_direction: desc
          order_by_field: created_at
          page: "1"
          page_size: "10"
        type: object
    type: object
  admin.SearchXpubs:
    properties:
      conditions:
        allOf:
        - $ref: '#/definitions/filter.XpubFilter'
        description: Custom conditions used for filtering the search results. Every
          field within the object is optional.
      metadata:
        additionalProperties:
          type: string
        description: Accepts a JSON object for embedding custom metadata, enabling
          arbitrary additional information to be associated with the resource
        example:
          key: value
          key2: value2
        type: object
      params:
        additionalProperties:
          type: string
        description: Pagination and sorting options to streamline data exploration
          and analysis
        example:
          order_by_direction: desc
          order_by_field: created_at
          page: "1"
          page_size: "10"
        type: object
    type: object
  admin.UpdateContact:
    properties:
      fullName:
        description: New name for the contact
        example: John Doe
        type: string
      metadata:
        additionalProperties:
          type: string
        description: Accepts a JSON object for embedding custom metadata, enabling
          arbitrary additional information to be associated with the resource
        example:
          key: value
          key2: value2
        type: object
    type: object
  broadcast.SubmittedTx:
    properties:
      blockHash:
        description: BlockHash is the hash of the block where the transaction was
          included.
        type: string
      blockHeight:
        description: BlockHeight is the height of the block where the transaction
          was included.
        type: integer
      extraInfo:
        description: ExtraInfo provides extra information for given transaction.
        type: string
      merklePath:
        description: MerklePath is the Merkle path used to calculate Merkle root of
          the block in which the transaction was included.
        type: string
      status:
        description: Status is the status of the response.
        type: integer
      timestamp:
        description: Timestamp is the timestamp of the block where the transaction
          was included.
        type: string
      title:
        description: Title is the title of the response.
        type: string
      txStatus:
        allOf:
        - $ref: '#/definitions/broadcast.TxStatus'
        description: TxStatus is the status of the transaction.
      txid:
        description: TxID is the transaction id.
        type: string
    type: object
  broadcast.TxStatus:
    enum:
    - UNKNOWN
    - QUEUED
    - RECEIVED
    - STORED
    - ANNOUNCED_TO_NETWORK
    - REQUESTED_BY_NETWORK
    - SENT_TO_NETWORK
    - ACCEPTED_BY_NETWORK
    - SEEN_ON_NETWORK
    - MINED
    - SEEN_IN_ORPHAN_MEMPOOL
    - CONFIRMED
    - REJECTED
    type: string
    x-enum-comments:
      AcceptedByNetwork: "7"
      AnnouncedToNetwork: "4"
      Confirmed: "108"
      Mined: "9"
      Queued: "1"
      Received: "2"
      Rejected: "109"
      RequestedByNetwork: "5"
      SeenInOrphanMempool: "10"
      SeenOnNetwork: "8"
      SentToNetwork: "6"
      Stored: "3"
      Unknown: "0"
    x-enum-varnames:
    - Unknown
    - Queued
    - Received
    - Stored
    - AnnouncedToNetwork
    - RequestedByNetwork
    - SentToNetwork
    - AcceptedByNetwork
    - SeenOnNetwork
    - Mined
    - SeenInOrphanMempool
    - Confirmed
    - Rejected
  contacts.SearchContacts:
    properties:
      conditions:
        allOf:
        - $ref: '#/definitions/filter.ContactFilter'
        description: Custom conditions used for filtering the search results. Every
          field within the object is optional.
      metadata:
        additionalProperties:
          type: string
        description: Accepts a JSON object for embedding custom metadata, enabling
          arbitrary additional information to be associated with the resource
        example:
          key: value
          key2: value2
        type: object
      params:
        additionalProperties:
          type: string
        description: Pagination and sorting options to streamline data exploration
          and analysis
        example:
          order_by_direction: desc
          order_by_field: created_at
          page: "1"
          page_size: "10"
        type: object
    type: object
  contacts.UpsertContact:
    properties:
      fullName:
        description: The complete name of the contact, including first name, middle
          name (if applicable), and last name.
        type: string
      metadata:
        additionalProperties:
          type: string
        description: Accepts a JSON object for embedding custom metadata, enabling
          arbitrary additional information to be associated with the resource
        example:
          key: value
          key2: value2
        type: object
      requesterPaymail:
        description: Optional paymail address owned by the user to bind the contact
          to. It is required in case if user has multiple paymail addresses
        type: string
    type: object
  destinations.CountDestinations:
    properties:
      conditions:
        allOf:
        - $ref: '#/definitions/filter.DestinationFilter'
        description: Custom conditions used for filtering the search results. Every
          field within the object is optional.
      metadata:
        additionalProperties:
          type: string
        description: Accepts a JSON object for embedding custom metadata, enabling
          arbitrary additional information to be associated with the resource
        example:
          key: value
          key2: value2
        type: object
    type: object
  destinations.CreateDestination:
    properties:
      metadata:
        additionalProperties:
          type: string
        description: Accepts a JSON object for embedding custom metadata, enabling
          arbitrary additional information to be associated with the resource
        example:
          key: value
          key2: value2
        type: object
    type: object
  destinations.SearchDestinations:
    properties:
      conditions:
        allOf:
        - $ref: '#/definitions/filter.DestinationFilter'
        description: Custom conditions used for filtering the search results. Every
          field within the object is optional.
      metadata:
        additionalProperties:
          type: string
        description: Accepts a JSON object for embedding custom metadata, enabling
          arbitrary additional information to be associated with the resource
        example:
          key: value
          key2: value2
        type: object
      params:
        additionalProperties:
          type: string
        description: Pagination and sorting options to streamline data exploration
          and analysis
        example:
          order_by_direction: desc
          order_by_field: created_at
          page: "1"
          page_size: "10"
        type: object
    type: object
  destinations.UpdateDestination:
    properties:
      address:
        description: Address of the destination
        example: 1CDUf7CKu8ocTTkhcYUbq75t14Ft168K65
        type: string
      id:
        description: ID of the destination which is the hash of the LockingScript
        example: 82a5d848f997819a478b05fb713208d7f3aa66da5ba00953b9845fb1701f9b98
        type: string
      locking_script:
        description: LockingScript of the destination
        example: 76a9147b05764a97f3b4b981471492aa703b188e45979b88ac
        type: string
      metadata:
        additionalProperties:
          type: string
        description: Accepts a JSON object for embedding custom metadata, enabling
          arbitrary additional information to be associated with the resource
        example:
          key: value
          key2: value2
        type: object
    type: object
  engine.Metadata:
    additionalProperties: true
    type: object
  filter.AccessKeyFilter:
    properties:
      createdRange:
        allOf:
        - $ref: '#/definitions/filter.TimeRange'
        description: CreatedRange specifies the time range when a record was created.
      includeDeleted:
        default: false
        description: IncludeDeleted is a flag whether or not to include deleted items
          in the search results
        example: true
        type: boolean
      revokedRange:
        allOf:
        - $ref: '#/definitions/filter.TimeRange'
        description: RevokedRange specifies the time range when a record was revoked.
      updatedRange:
        allOf:
        - $ref: '#/definitions/filter.TimeRange'
        description: UpdatedRange specifies the time range when a record was updated.
    type: object
  filter.AdminAccessKeyFilter:
    properties:
      createdRange:
        allOf:
        - $ref: '#/definitions/filter.TimeRange'
        description: CreatedRange specifies the time range when a record was created.
      includeDeleted:
        default: false
        description: IncludeDeleted is a flag whether or not to include deleted items
          in the search results
        example: true
        type: boolean
      revokedRange:
        allOf:
        - $ref: '#/definitions/filter.TimeRange'
        description: RevokedRange specifies the time range when a record was revoked.
      updatedRange:
        allOf:
        - $ref: '#/definitions/filter.TimeRange'
        description: UpdatedRange specifies the time range when a record was updated.
      xpubId:
        type: string
    type: object
  filter.AdminPaymailFilter:
    properties:
      alias:
        example: alice
        type: string
      createdRange:
        allOf:
        - $ref: '#/definitions/filter.TimeRange'
        description: CreatedRange specifies the time range when a record was created.
      domain:
        example: example.com
        type: string
      id:
        example: ffb86c103d17d87c15aaf080aab6be5415c9fa885309a79b04c9910e39f2b542
        type: string
      includeDeleted:
        default: false
        description: IncludeDeleted is a flag whether or not to include deleted items
          in the search results
        example: true
        type: boolean
      publicName:
        example: Alice
        type: string
      updatedRange:
        allOf:
        - $ref: '#/definitions/filter.TimeRange'
        description: UpdatedRange specifies the time range when a record was updated.
      xpubId:
        example: 79f90a6bab0a44402fc64828af820e9465645658aea2d138c5205b88e6dabd00
        type: string
    type: object
  filter.AdminUtxoFilter:
    properties:
      createdRange:
        allOf:
        - $ref: '#/definitions/filter.TimeRange'
        description: CreatedRange specifies the time range when a record was created.
      draftId:
        example: 89419d4c7c50810bfe5ff9df9ad5074b749959423782dc91a30f1058b9ad7ef7
        type: string
      id:
        example: fe4cbfee0258aa589cbc79963f7c204061fd67d987e32ee5049aa90ce14658ee
        type: string
      includeDeleted:
        default: false
        description: IncludeDeleted is a flag whether or not to include deleted items
          in the search results
        example: true
        type: boolean
      outputIndex:
        example: 0
        type: integer
      reservedRange:
        allOf:
        - $ref: '#/definitions/filter.TimeRange'
        description: ReservedRange specifies the time range when a UTXO was reserved.
      satoshis:
        example: 1
        type: integer
      scriptPubKey:
        example: 76a914a5f271385e75f57bcd9092592dede812f8c466d088ac
        type: string
      spendingTxId:
        example: 11a7746489a70e9c0170601c2be65558455317a984194eb2791b637f59f8cd6e
        type: string
      transactionId:
        example: 5e17858ea0ca4155827754ba82bdcfcce108d5bb5b47fbb3aa54bd14540683c6
        type: string
      type:
        enum:
        - pubkey
        - pubkeyhash
        - nulldata
        - multisig
        - nonstandard
        - scripthash
        - metanet
        - token_stas
        - token_sensible
        type: string
      updatedRange:
        allOf:
        - $ref: '#/definitions/filter.TimeRange'
        description: UpdatedRange specifies the time range when a record was updated.
      xpubId:
        type: string
    type: object
  filter.ContactFilter:
    properties:
      createdRange:
        allOf:
        - $ref: '#/definitions/filter.TimeRange'
        description: CreatedRange specifies the time range when a record was created.
      fullName:
        example: Alice
        type: string
      id:
        example: ffdbe74e-0700-4710-aac5-611a1f877c7f
        type: string
      includeDeleted:
        default: false
        description: IncludeDeleted is a flag whether or not to include deleted items
          in the search results
        example: true
        type: boolean
      paymail:
        example: alice@example.com
        type: string
      pubKey:
        example: 0334f01ecb971e93db179e6fb320cd1466beb0c1ec6c1c6a37aa6cb02e53d5dd1a
        type: string
      status:
        enum:
        - unconfirmed
        - awaiting
        - confirmed
        - rejected
        type: string
      updatedRange:
        allOf:
        - $ref: '#/definitions/filter.TimeRange'
        description: UpdatedRange specifies the time range when a record was updated.
    type: object
  filter.DestinationFilter:
    properties:
      address:
        example: 1CDUf7CKu8ocTTkhcYUbq75t14Ft168K65
        type: string
      createdRange:
        allOf:
        - $ref: '#/definitions/filter.TimeRange'
        description: CreatedRange specifies the time range when a record was created.
      draftId:
        example: b356f7fa00cd3f20cce6c21d704cd13e871d28d714a5ebd0532f5a0e0cde63f7
        type: string
      includeDeleted:
        default: false
        description: IncludeDeleted is a flag whether or not to include deleted items
          in the search results
        example: true
        type: boolean
      lockingScript:
        example: 76a9147b05764a97f3b4b981471492aa703b188e45979b88ac
        type: string
      updatedRange:
        allOf:
        - $ref: '#/definitions/filter.TimeRange'
        description: UpdatedRange specifies the time range when a record was updated.
    type: object
  filter.TimeRange:
    properties:
      from:
        description: From specifies the start time of the range. It's optional and
          can be nil.
        example: "2024-02-26T11:01:28Z"
        type: string
      to:
        description: To specifies the end time of the range. It's optional and can
          be nil.
        example: "2024-02-26T11:01:28Z"
        type: string
    type: object
  filter.TransactionFilter:
    properties:
      blockHash:
        example: 0000000000000000031928c28075a82d7a00c2c90b489d1d66dc0afa3f8d26f8
        type: string
      blockHeight:
        example: 839376
        type: integer
      createdRange:
        allOf:
        - $ref: '#/definitions/filter.TimeRange'
        description: CreatedRange specifies the time range when a record was created.
      draftId:
        example: d425432e0d10a46af1ec6d00f380e9581ebf7907f3486572b3cd561a4c326e14
        type: string
      fee:
        example: 1
        type: integer
      hex:
        type: string
      includeDeleted:
        default: false
        description: IncludeDeleted is a flag whether or not to include deleted items
          in the search results
        example: true
        type: boolean
      numberOfInputs:
        example: 1
        type: integer
      numberOfOutputs:
        example: 2
        type: integer
      status:
        enum:
        - UNKNOWN
        - QUEUED
        - RECEIVED
        - STORED
        - ANNOUNCED_TO_NETWORK
        - REQUESTED_BY_NETWORK
        - SENT_TO_NETWORK
        - ACCEPTED_BY_NETWORK
        - SEEN_ON_NETWORK
        - MINED
        - SEEN_IN_ORPHAN_MEMPOOL
        - CONFIRMED
        - REJECTED
        type: string
      totalValue:
        example: 100000000
        type: integer
      updatedRange:
        allOf:
        - $ref: '#/definitions/filter.TimeRange'
        description: UpdatedRange specifies the time range when a record was updated.
    type: object
  filter.UtxoFilter:
    properties:
      createdRange:
        allOf:
        - $ref: '#/definitions/filter.TimeRange'
        description: CreatedRange specifies the time range when a record was created.
      draftId:
        example: 89419d4c7c50810bfe5ff9df9ad5074b749959423782dc91a30f1058b9ad7ef7
        type: string
      id:
        example: fe4cbfee0258aa589cbc79963f7c204061fd67d987e32ee5049aa90ce14658ee
        type: string
      includeDeleted:
        default: false
        description: IncludeDeleted is a flag whether or not to include deleted items
          in the search results
        example: true
        type: boolean
      outputIndex:
        example: 0
        type: integer
      reservedRange:
        allOf:
        - $ref: '#/definitions/filter.TimeRange'
        description: ReservedRange specifies the time range when a UTXO was reserved.
      satoshis:
        example: 1
        type: integer
      scriptPubKey:
        example: 76a914a5f271385e75f57bcd9092592dede812f8c466d088ac
        type: string
      spendingTxId:
        example: 11a7746489a70e9c0170601c2be65558455317a984194eb2791b637f59f8cd6e
        type: string
      transactionId:
        example: 5e17858ea0ca4155827754ba82bdcfcce108d5bb5b47fbb3aa54bd14540683c6
        type: string
      type:
        enum:
        - pubkey
        - pubkeyhash
        - nulldata
        - multisig
        - nonstandard
        - scripthash
        - metanet
        - token_stas
        - token_sensible
        type: string
      updatedRange:
        allOf:
        - $ref: '#/definitions/filter.TimeRange'
        description: UpdatedRange specifies the time range when a record was updated.
    type: object
  filter.XpubFilter:
    properties:
      createdRange:
        allOf:
        - $ref: '#/definitions/filter.TimeRange'
        description: CreatedRange specifies the time range when a record was created.
      currentBalance:
        example: 1000
        type: integer
      id:
        example: 00b953624f78004a4c727cd28557475d5233c15f17aef545106639f4d71b712d
        type: string
      includeDeleted:
        default: false
        description: IncludeDeleted is a flag whether or not to include deleted items
          in the search results
        example: true
        type: boolean
      updatedRange:
        allOf:
        - $ref: '#/definitions/filter.TimeRange'
        description: UpdatedRange specifies the time range when a record was updated.
    type: object
  models.AccessKey:
    properties:
      created_at:
        description: CreatedAt is a time when outer model was created.
        example: "2024-02-26T11:00:28.069911Z"
        type: string
      deleted_at:
        description: DeletedAt is a time when outer model was deleted.
        example: "2024-02-26T11:02:28.069911Z"
        type: string
      id:
        description: ID is an hash of the compressed public key.
        example: 874b86d6fd1d6c85a857e73180164203d8d23211bfd9d04d210f9f7fde5b82d8
        type: string
      key:
        description: Key is a string representation of an access key.
        example: 3fd870d6bf1725f04084cf31209c04be5bd9bed001a390ad3bc632a55a3ee078
        type: string
      metadata:
        additionalProperties:
          type: string
        description: Metadata is a metadata map of outer model.
        example:
          key: value
          key2: value2
        type: object
      revoked_at:
        description: RevokedAt is a time when access key was revoked.
        example: "2024-02-26T11:02:28.069911Z"
        type: string
      updated_at:
        description: UpdatedAt is a time when outer model was updated.
        example: "2024-02-26T11:01:28.069911Z"
        type: string
      xpub_id:
        description: XpubID is an access key's xpub related id.
        example: bb8593f85ef8056a77026ad415f02128f3768906de53e9e8bf8749fe2d66cf50
        type: string
    type: object
  models.AdminStats:
    properties:
      balance:
        description: Balance is a total balance of all xpubs.
        type: integer
      destinations:
        description: Destinations is a total number of destinations.
        type: integer
      paymail_addresses:
        description: PaymailAddresses is a total number of paymail addresses.
        type: integer
      transactions:
        description: Transactions is a total number of committed transactions.
        type: integer
      transactions_per_day:
        additionalProperties: true
        description: TransactionsPerDay is a total number of committed transactions
          per day.
        type: object
      utxos:
        description: Utxos is a total number of utxos.
        type: integer
      utxos_per_type:
        additionalProperties: true
        description: UtxosPerType are utxos grouped by type.
        type: object
      xpubs:
        description: Xpubs is a total number of xpubs.
        type: integer
    type: object
  models.Contact:
    properties:
      created_at:
        description: CreatedAt is a time when outer model was created.
        example: "2024-02-26T11:00:28.069911Z"
        type: string
      deleted_at:
        description: DeletedAt is a time when outer model was deleted.
        example: "2024-02-26T11:02:28.069911Z"
        type: string
      fullName:
        description: FullName is name which could be shown instead of whole paymail
          address.
        example: Test User
        type: string
      id:
        description: ID is a unique identifier of contact.
        example: 68af358bde7d8641621c7dd3de1a276c9a62cfa9e2d0740494519f1ba61e2f4a
        type: string
      metadata:
        additionalProperties:
          type: string
        description: Metadata is a metadata map of outer model.
        example:
          key: value
          key2: value2
        type: object
      paymail:
        description: Paymail is a paymail address related to contact.
        example: test@spv-wallet.com
        type: string
      pubKey:
        description: PubKey is a public key related to contact (receiver).
        example: xpub661MyMwAqRbcGpZVrSHU...
        type: string
      status:
        allOf:
        - $ref: '#/definitions/models.ContactStatus'
        description: Status is a contact's current status.
        example: unconfirmed
      updated_at:
        description: UpdatedAt is a time when outer model was updated.
        example: "2024-02-26T11:01:28.069911Z"
        type: string
    type: object
  models.ContactStatus:
    enum:
    - unconfirmed
    - awaiting
    - confirmed
    - rejected
    type: string
    x-enum-varnames:
    - ContactNotConfirmed
    - ContactAwaitAccept
    - ContactConfirmed
    - ContactRejected
  models.Destination:
    properties:
      address:
        description: Address is a destination's address.
        example: 1CDUf7CKu8ocTTkhcYUbq75t14Ft168K65
        type: string
      chain:
        description: Chain is a destination's chain representation.
        example: 0
        type: integer
      created_at:
        description: CreatedAt is a time when outer model was created.
        example: "2024-02-26T11:00:28.069911Z"
        type: string
      deleted_at:
        description: DeletedAt is a time when outer model was deleted.
        example: "2024-02-26T11:02:28.069911Z"
        type: string
      draft_id:
        description: DraftID is a destination's draft id.
        example: b356f7fa00cd3f20cce6c21d704cd13e871d28d714a5ebd0532f5a0e0cde63f7
        type: string
      id:
        description: ID is a destination id which is the hash of the LockingScript.
        example: 82a5d848f997819a478b05fb713208d7f3aa66da5ba00953b9845fb1701f9b98
        type: string
      locking_script:
        description: LockingScript is a destination's locking script.
        example: 76a9147b05764a97f3b4b981471492aa703b188e45979b88ac
        type: string
      metadata:
        additionalProperties:
          type: string
        description: Metadata is a metadata map of outer model.
        example:
          key: value
          key2: value2
        type: object
      num:
        description: Num is a destination's num representation.
        example: 0
        type: integer
      paymail_external_derivation_num:
        description: PaymailExternalDerivationNum is the chain/num/(ext_derivation_num)
          location of the address related to the xPub.
        example: 0
        type: integer
      type:
        description: Type is a destination's type.
        example: pubkeyhash
        type: string
      updated_at:
        description: UpdatedAt is a time when outer model was updated.
        example: "2024-02-26T11:01:28.069911Z"
        type: string
      xpub_id:
        description: XpubID is a destination's xpub related id used to register destination.
        example: bb8593f85ef8056a77026ad415f02128f3768906de53e9e8bf8749fe2d66cf50
        type: string
    type: object
  models.DraftTransaction:
    properties:
      configuration:
        allOf:
        - $ref: '#/definitions/models.TransactionConfig'
        description: Configuration contains draft transaction configuration.
      created_at:
        description: CreatedAt is a time when outer model was created.
        example: "2024-02-26T11:00:28.069911Z"
        type: string
      deleted_at:
        description: DeletedAt is a time when outer model was deleted.
        example: "2024-02-26T11:02:28.069911Z"
        type: string
      expires_at:
        description: ExpiresAt is a time when draft transaction expired.
        example: "2024-02-26T11:00:28.069911Z"
        type: string
      final_tx_id:
        description: FinalTxID is a final transaction id.
        example: cfe30797f0b5fc098b32194e857569a7a1edd829fddf3df4567796b738de386d
        type: string
      hex:
        description: Hex is a draft transaction hex.
        example: 0100000002...
        type: string
      id:
        description: ID is a draft transaction id.
        example: b356f7fa00cd3f20cce6c21d704cd13e871d28d714a5ebd0532f5a0e0cde63f7
        type: string
      metadata:
        additionalProperties:
          type: string
        description: Metadata is a metadata map of outer model.
        example:
          key: value
          key2: value2
        type: object
      status:
        description: Status is a draft transaction lastly monitored status.
        example: complete
        type: string
      updated_at:
        description: UpdatedAt is a time when outer model was updated.
        example: "2024-02-26T11:01:28.069911Z"
        type: string
      xpub_id:
        description: XpubID is a draft transaction's xpub used to sign transaction.
        example: bb8593f85ef8056a77026ad415f02128f3768906de53e9e8bf8749fe2d66cf50
        type: string
    type: object
  models.FeeUnit:
    properties:
      bytes:
        description: Bytes is a fee unit bytes representation.
        example: 1000
        type: integer
      satoshis:
        description: Satoshis is a fee unit satoshis amount.
        example: 1
        type: integer
    type: object
  models.MapProtocol:
    properties:
      app:
        description: App is a map protocol app.
        type: string
      keys:
        additionalProperties: true
        description: Keys is a map protocol keys.
        type: object
      type:
        description: Type is a map protocol type.
        type: string
    type: object
  models.OpReturn:
    properties:
      hex:
        description: Hex is a full hex of op return.
        type: string
      hex_parts:
        description: HexParts is a slice of splitted hex parts.
        items:
          type: string
        type: array
      map:
        allOf:
        - $ref: '#/definitions/models.MapProtocol'
        description: Map is a pointer to a map protocol object.
      string_parts:
        description: StringParts is a slice of string parts.
        items:
          type: string
        type: array
    type: object
  models.Page:
    properties:
      number:
        description: Page number
        type: integer
      orderByField:
        description: Field by which to order the results
        type: string
      size:
        description: Size of the page
        type: integer
      sortDirection:
        description: Direction in which to order the results ASC/DSC
        type: string
      totalElements:
        description: Total count of elements
        type: integer
      totalPages:
        description: Total number of possible pages
        type: integer
    type: object
  models.PaymailAddress:
    properties:
      alias:
        description: Alias is a paymail address's alias (first part of paymail).
        example: test
        type: string
      avatar:
        description: Avatar is a paymail address's avatar.
        example: https://spvwallet.com/avatar.png
        type: string
      created_at:
        description: CreatedAt is a time when outer model was created.
        example: "2024-02-26T11:00:28.069911Z"
        type: string
      deleted_at:
        description: DeletedAt is a time when outer model was deleted.
        example: "2024-02-26T11:02:28.069911Z"
        type: string
      domain:
        description: Domain is a paymail address's domain (second part of paymail).
        example: spvwallet.com
        type: string
      id:
        description: ID is a paymail address id.
        example: c0ba4a52c89279268476a141be7569200cff2ca4892512b07ca75c25a95c16cd
        type: string
      metadata:
        additionalProperties:
          type: string
        description: Metadata is a metadata map of outer model.
        example:
          key: value
          key2: value2
        type: object
      public_name:
        description: PublicName is a paymail address's public name.
        example: Test User
        type: string
      updated_at:
        description: UpdatedAt is a time when outer model was updated.
        example: "2024-02-26T11:01:28.069911Z"
        type: string
      xpub_id:
        description: XpubID is a paymail address's xpub related id used to register
          paymail address.
        example: bb8593f85ef8056a77026ad415f02128f3768906de53e9e8bf8749fe2d66cf50
        type: string
    type: object
  models.PaymailP4:
    properties:
      alias:
        description: Alias is a paymail p4 alias.
        type: string
      domain:
        description: Domain is a paymail p4 domain.
        type: string
      from_paymail:
        description: FromPaymail is a paymail p4 from paymail.
        type: string
      note:
        description: Note is a paymail p4 note.
        type: string
      pub_key:
        description: PubKey is a paymail p4 pub key.
        type: string
      receive_endpoint:
        description: ReceiveEndpoint is a paymail p4 receive endpoint.
        type: string
      reference_id:
        description: ReferenceID is a paymail p4 reference id.
        type: string
      resolution_type:
        description: ResolutionType is a paymail p4 resolution type.
        type: string
    type: object
  models.ScriptOutput:
    properties:
      address:
        description: Address is a script output address.
        type: string
      satoshis:
        description: Satoshis is a script output satoshis.
        type: integer
      script:
        description: Script is a script output script.
        type: string
      script_type:
        description: ScriptType is a script output script type.
        type: string
    type: object
  models.SearchContactsResponse:
    properties:
      content:
        description: List of records for the response
        items:
          $ref: '#/definitions/models.Contact'
        type: array
      page:
        allOf:
        - $ref: '#/definitions/models.Page'
        description: Pagination details
    type: object
  models.SharedConfig:
    properties:
      experimental_features:
        additionalProperties:
          type: boolean
        description: ExperimentalFeatures is a map of experimental features handled
          by spv-wallet.
        example:
          pike_enabled: true
        type: object
      paymail_domains:
        description: PaymailDomains is a list of paymail domains handled by spv-wallet.
        example:
        - spv-wallet.com
        items:
          type: string
        type: array
    type: object
  models.SyncConfig:
    properties:
      broadcast:
        description: Broadcast is a flag that indicates whether to broadcast transaction
          or not.
        type: boolean
      broadcast_instant:
        description: BroadcastInstant is a flag that indicates whether to broadcast
          transaction instantly or not.
        type: boolean
      paymail_p2p:
        description: PaymailP2P is a flag that indicates whether to use paymail p2p
          or not.
        type: boolean
      sync_on_chain:
        description: SyncOnChain is a flag that indicates whether to sync transaction
          on chain or not.
        type: boolean
    type: object
  models.Transaction:
    properties:
      block_hash:
        description: BlockHash is a block hash that transaction is in.
        example: 0000000000000000046e81025ca6cfbd2f45c7331f650c77edc99a14d5a1f0d0
        type: string
      block_height:
        description: BlockHeight is a block height that transaction is in.
        example: 833505
        type: integer
      created_at:
        description: CreatedAt is a time when outer model was created.
        example: "2024-02-26T11:00:28.069911Z"
        type: string
      deleted_at:
        description: DeletedAt is a time when outer model was deleted.
        example: "2024-02-26T11:02:28.069911Z"
        type: string
      direction:
        description: TransactionDirection is a transaction direction (incoming/outgoing).
        example: outgoing
        type: string
      draft_id:
        description: DraftID is a transaction related draft id.
        example: b356f7fa00cd3f20cce6c21d704cd13e871d28d714a5ebd0532f5a0e0cde63f7
        type: string
      fee:
        description: Fee is a transaction fee.
        example: 1
        type: integer
      hex:
        description: Hex is a transaction hex.
        example: 0100000002...
        type: string
      id:
        description: ID is a transaction id.
        example: 01d0d0067652f684c6acb3683763f353fce55f6496521c7d99e71e1d27e53f5c
        type: string
      metadata:
        additionalProperties:
          type: string
        description: Metadata is a metadata map of outer model.
        example:
          key: value
          key2: value2
        type: object
      number_of_inputs:
        description: NumberOfInputs is a number of transaction inputs.
        example: 3
        type: integer
      number_of_outputs:
        description: NumberOfOutputs is a number of transaction outputs.
        example: 2
        type: integer
      output_value:
        description: OutputValue is a total output value.
        example: 50
        type: integer
      outputs:
        additionalProperties:
          type: integer
        description: Outputs represents all spv-wallet-transaction outputs. Will be
          shown only for admin.
        example:
          92640954841510a9d95f7737a43075f22ebf7255976549de4c52e8f3faf57470: -51
          9d07977d2fc14402426288a6010b4cdf7d91b61461acfb75af050b209d2d07ba: 50
        type: object
      status:
        description: Status is a transaction status.
        example: MINED
        type: string
      total_value:
        description: TotalValue is a total input value.
        example: 51
        type: integer
      updated_at:
        description: UpdatedAt is a time when outer model was updated.
        example: "2024-02-26T11:01:28.069911Z"
        type: string
      xpub_in_ids:
        description: XpubInIDs is a slice of xpub input ids.
        example:
        - bb8593f85ef8056a77026ad415f02128f3768906de53e9e8bf8749fe2d66cf50
        items:
          type: string
        type: array
      xpub_out_ids:
        description: XpubOutIDs is a slice of xpub output ids.
        example:
        - 2075eca10bf2688b38cd7fdad6c24562463a9a26ae505d66c480fd53165dbaa2
        items:
          type: string
        type: array
    type: object
  models.TransactionConfig:
    properties:
      change_destinations:
        description: ChangeDestinations is a slice of change destinations.
        items:
          $ref: '#/definitions/models.Destination'
        type: array
      change_destinations_strategy:
        description: ChangeStrategy is a change strategy.
        type: string
      change_minimum_satoshis:
        description: ChangeMinimumSatoshis is a minimum satoshis for change.
        example: 0
        type: integer
      change_number_of_destinations:
        description: ChangeNumberOfDestinations is a number of change destinations.
        example: 1
        type: integer
      change_satoshis:
        description: ChangeSatoshis is a change satoshis.
        example: 49
        type: integer
      expires_in:
        allOf:
        - $ref: '#/definitions/time.Duration'
        description: ExpiresAt is a time when transaction expires.
        example: 1000
      fee:
        description: Fee is a fee amount.
        example: 1
        type: integer
      fee_unit:
        allOf:
        - $ref: '#/definitions/models.FeeUnit'
        description: FeeUnit is a pointer to a fee unit object.
      from_utxos:
        description: FromUtxos is a slice of from utxos used to build transaction.
        items:
          $ref: '#/definitions/models.UtxoPointer'
        type: array
      include_utxos:
        description: IncludeUtxos is a slice of utxos to include in transaction.
        items:
          $ref: '#/definitions/models.UtxoPointer'
        type: array
      inputs:
        description: Inputs is a slice of transaction inputs.
        items:
          $ref: '#/definitions/models.TransactionInput'
        type: array
      outputs:
        description: Outputs is a slice of transaction outputs.
        items:
          $ref: '#/definitions/models.TransactionOutput'
        type: array
      send_all_to:
        allOf:
        - $ref: '#/definitions/models.TransactionOutput'
        description: SendAllTo is a pointer to a transaction output object.
      sync:
        allOf:
        - $ref: '#/definitions/models.SyncConfig'
        description: Sync contains sync configuration.
    type: object
  models.TransactionInput:
    properties:
      created_at:
        description: CreatedAt is a time when outer model was created.
        example: "2024-02-26T11:00:28.069911Z"
        type: string
      deleted_at:
        description: DeletedAt is a time when outer model was deleted.
        example: "2024-02-26T11:02:28.069911Z"
        type: string
      destination:
        allOf:
        - $ref: '#/definitions/models.Destination'
        description: Destination is a pointer to a destination object.
      draft_id:
        description: DraftID is a utxo transaction related draft id.
        example: b356f7fa00cd3f20cce6c21d704cd13e871d28d714a5ebd0532f5a0e0cde63f7
        type: string
      id:
        description: ID is a utxo id which is a hash from transaction id and output
          index.
        example: c706a448748d398d542cf4dfad797c9a4b123ebb72dbfb8b27f3d0f1dda99b58
        type: string
      metadata:
        additionalProperties:
          type: string
        description: Metadata is a metadata map of outer model.
        example:
          key: value
          key2: value2
        type: object
      output_index:
        description: OutputIndex is a output index that utxo points to.
        example: 0
        type: integer
      reserved_at:
        description: ReservedAt is a time utxo was reserved at.
        example: "2024-02-26T11:00:28.069911Z"
        type: string
      satoshis:
        description: Satoshis is a utxo satoshis amount.
        example: 100
        type: integer
      script_pub_key:
        description: ScriptPubKey is a utxo script pub key.
        example: 76a91433ba3607a902bc022164bcb6e993f27bd040241c88ac
        type: string
      spending_tx_id:
        description: SpendingTxID is a spending transaction id - null if not spent
          yet.
        example: 01d0d0067652f684c6acb3683763f353fce55f6496521c7d99e71e1d27e53f5c
        type: string
      transaction:
        allOf:
        - $ref: '#/definitions/models.Transaction'
        description: Transaction is a transaction pointer that utxo points to.
      transaction_id:
        description: TransactionID is a transaction id that utxo points to.
        example: 01d0d0067652f684c6acb3683763f353fce55f6496521c7d99e71e1d27e53f5c
        type: string
      type:
        description: Type is a utxo type.
        example: pubkeyhash
        type: string
      updated_at:
        description: UpdatedAt is a time when outer model was updated.
        example: "2024-02-26T11:01:28.069911Z"
        type: string
      xpub_id:
        description: XpubID is a utxo related xpub id.
        example: bb8593f85ef8056a77026ad415f02128f3768906de53e9e8bf8749fe2d66cf50
        type: string
    type: object
  models.TransactionOutput:
    properties:
      op_return:
        allOf:
        - $ref: '#/definitions/models.OpReturn'
        description: OpReturn is a pointer to a op return object.
      paymail_p4:
        allOf:
        - $ref: '#/definitions/models.PaymailP4'
        description: PaymailP4 is a pointer to a paymail p4 object.
      satoshis:
        description: Satoshis is a satoshis amount.
        example: 50
        type: integer
      script:
        description: Script is a transaction output string representation of script.
        example: 76a91433ba3607a902bc022164bcb6e993f27bd040241c88ac
        type: string
      scripts:
        description: ScriptType is a transaction output script type.
        items:
          $ref: '#/definitions/models.ScriptOutput'
        type: array
      to:
        description: To is a transaction output destination address.
        example: 1MB8MfCyA5mGt3UBhxYr1exBfsFWgL1gCm
        type: string
      use_for_change:
        description: UseForChange is a flag that indicates if this output should be
          used for change.
        example: false
        type: boolean
    type: object
  models.Utxo:
    properties:
      created_at:
        description: CreatedAt is a time when outer model was created.
        example: "2024-02-26T11:00:28.069911Z"
        type: string
      deleted_at:
        description: DeletedAt is a time when outer model was deleted.
        example: "2024-02-26T11:02:28.069911Z"
        type: string
      draft_id:
        description: DraftID is a utxo transaction related draft id.
        example: b356f7fa00cd3f20cce6c21d704cd13e871d28d714a5ebd0532f5a0e0cde63f7
        type: string
      id:
        description: ID is a utxo id which is a hash from transaction id and output
          index.
        example: c706a448748d398d542cf4dfad797c9a4b123ebb72dbfb8b27f3d0f1dda99b58
        type: string
      metadata:
        additionalProperties:
          type: string
        description: Metadata is a metadata map of outer model.
        example:
          key: value
          key2: value2
        type: object
      output_index:
        description: OutputIndex is a output index that utxo points to.
        example: 0
        type: integer
      reserved_at:
        description: ReservedAt is a time utxo was reserved at.
        example: "2024-02-26T11:00:28.069911Z"
        type: string
      satoshis:
        description: Satoshis is a utxo satoshis amount.
        example: 100
        type: integer
      script_pub_key:
        description: ScriptPubKey is a utxo script pub key.
        example: 76a91433ba3607a902bc022164bcb6e993f27bd040241c88ac
        type: string
      spending_tx_id:
        description: SpendingTxID is a spending transaction id - null if not spent
          yet.
        example: 01d0d0067652f684c6acb3683763f353fce55f6496521c7d99e71e1d27e53f5c
        type: string
      transaction:
        allOf:
        - $ref: '#/definitions/models.Transaction'
        description: Transaction is a transaction pointer that utxo points to.
      transaction_id:
        description: TransactionID is a transaction id that utxo points to.
        example: 01d0d0067652f684c6acb3683763f353fce55f6496521c7d99e71e1d27e53f5c
        type: string
      type:
        description: Type is a utxo type.
        example: pubkeyhash
        type: string
      updated_at:
        description: UpdatedAt is a time when outer model was updated.
        example: "2024-02-26T11:01:28.069911Z"
        type: string
      xpub_id:
        description: XpubID is a utxo related xpub id.
        example: bb8593f85ef8056a77026ad415f02128f3768906de53e9e8bf8749fe2d66cf50
        type: string
    type: object
  models.UtxoPointer:
    properties:
      output_index:
        description: OutputIndex is a output index that utxo points to.
        example: 0
        type: integer
      transaction_id:
        description: TransactionID is a transaction id that utxo points to.
        example: 01d0d0067652f684c6acb3683763f353fce55f6496521c7d99e71e1d27e53f5c
        type: string
    type: object
  models.Xpub:
    properties:
      created_at:
        description: CreatedAt is a time when outer model was created.
        example: "2024-02-26T11:00:28.069911Z"
        type: string
      current_balance:
        description: CurrentBalance is a xpub's current balance.
        example: 1234
        type: integer
      deleted_at:
        description: DeletedAt is a time when outer model was deleted.
        example: "2024-02-26T11:02:28.069911Z"
        type: string
      id:
        description: ID is a hash of the xpub.
        example: bb8593f85ef8056a77026ad415f02128f3768906de53e9e8bf8749fe2d66cf50
        type: string
      metadata:
        additionalProperties:
          type: string
        description: Metadata is a metadata map of outer model.
        example:
          key: value
          key2: value2
        type: object
      next_external_num:
        description: NextExternalNum is the index derivation number use to generate
          NEXT external xPub (external xPub are used for address destinations).
        example: 0
        type: integer
      next_internal_num:
        description: NextInternalNum is the index derivation number use to generate
          NEXT internal xPub (internal xPub are used for change destinations).
        example: 0
        type: integer
      updated_at:
        description: UpdatedAt is a time when outer model was updated.
        example: "2024-02-26T11:01:28.069911Z"
        type: string
    type: object
  time.Duration:
    enum:
    - -9223372036854775808
    - 9223372036854775807
    - 1
    - 1000
    - 1000000
    - 1000000000
    - 60000000000
    - 3600000000000
    - -9223372036854775808
    - 9223372036854775807
    - 1
    - 1000
    - 1000000
    - 1000000000
    - 60000000000
    - 3600000000000
    - -9223372036854775808
    - 9223372036854775807
    - 1
    - 1000
    - 1000000
    - 1000000000
    - 60000000000
    - 3600000000000
    type: integer
    x-enum-varnames:
    - minDuration
    - maxDuration
    - Nanosecond
    - Microsecond
    - Millisecond
    - Second
    - Minute
    - Hour
    - minDuration
    - maxDuration
    - Nanosecond
    - Microsecond
    - Millisecond
    - Second
    - Minute
    - Hour
    - minDuration
    - maxDuration
    - Nanosecond
    - Microsecond
    - Millisecond
    - Second
    - Minute
    - Hour
  transactions.CountTransactions:
    properties:
      conditions:
        allOf:
        - $ref: '#/definitions/filter.TransactionFilter'
        description: Custom conditions used for filtering the search results. Every
          field within the object is optional.
      metadata:
        additionalProperties:
          type: string
        description: Accepts a JSON object for embedding custom metadata, enabling
          arbitrary additional information to be associated with the resource
        example:
          key: value
          key2: value2
        type: object
    type: object
  transactions.NewTransaction:
    properties:
      config:
        allOf:
        - $ref: '#/definitions/models.TransactionConfig'
        description: Configuration of the transaction
      metadata:
        additionalProperties:
          type: string
        description: Accepts a JSON object for embedding custom metadata, enabling
          arbitrary additional information to be associated with the resource
        example:
          key: value
          key2: value2
        type: object
    type: object
  transactions.RecordTransaction:
    properties:
      hex:
        description: Hex of the transaction
        example: 0100000002...
        type: string
      metadata:
        additionalProperties:
          type: string
        description: Accepts a JSON object for embedding custom metadata, enabling
          arbitrary additional information to be associated with the resource
        example:
          key: value
          key2: value2
        type: object
      reference_id:
        description: ReferenceID which is a ID of the draft transaction
        example: b356f7fa00cd3f20cce6c21d704cd13e871d28d714a5ebd0532f5a0e0cde63f7
        type: string
    type: object
  transactions.SearchTransactions:
    properties:
      conditions:
        allOf:
        - $ref: '#/definitions/filter.TransactionFilter'
        description: Custom conditions used for filtering the search results. Every
          field within the object is optional.
      metadata:
        additionalProperties:
          type: string
        description: Accepts a JSON object for embedding custom metadata, enabling
          arbitrary additional information to be associated with the resource
        example:
          key: value
          key2: value2
        type: object
      params:
        additionalProperties:
          type: string
        description: Pagination and sorting options to streamline data exploration
          and analysis
        example:
          order_by_direction: desc
          order_by_field: created_at
          page: "1"
          page_size: "10"
        type: object
    type: object
  transactions.UpdateTransaction:
    properties:
      id:
        description: ID of the transaction which is a hash of the transaction
        example: 01d0d0067652f684c6acb3683763f353fce55f6496521c7d99e71e1d27e53f5c
        type: string
      metadata:
        additionalProperties:
          type: string
        description: Accepts a JSON object for embedding custom metadata, enabling
          arbitrary additional information to be associated with the resource
        example:
          key: value
          key2: value2
        type: object
    type: object
  utxos.CountUtxos:
    properties:
      conditions:
        allOf:
        - $ref: '#/definitions/filter.UtxoFilter'
        description: Custom conditions used for filtering the search results. Every
          field within the object is optional.
      metadata:
        additionalProperties:
          type: string
        description: Accepts a JSON object for embedding custom metadata, enabling
          arbitrary additional information to be associated with the resource
        example:
          key: value
          key2: value2
        type: object
    type: object
  utxos.SearchUtxos:
    properties:
      conditions:
        allOf:
        - $ref: '#/definitions/filter.UtxoFilter'
        description: Custom conditions used for filtering the search results. Every
          field within the object is optional.
      metadata:
        additionalProperties:
          type: string
        description: Accepts a JSON object for embedding custom metadata, enabling
          arbitrary additional information to be associated with the resource
        example:
          key: value
          key2: value2
        type: object
      params:
        additionalProperties:
          type: string
        description: Pagination and sorting options to streamline data exploration
          and analysis
        example:
          order_by_direction: desc
          order_by_field: created_at
          page: "1"
          page_size: "10"
        type: object
    type: object
info:
  contact: {}
  title: SPV Wallet
  version: v0.12.0
paths:
  /transaction/broadcast/callback:
    post:
      parameters:
      - description: Transaction
        in: body
        name: transaction
        required: true
        schema:
          $ref: '#/definitions/broadcast.SubmittedTx'
      responses:
        "200":
          description: OK
        "400":
          description: Bad request - Error while parsing transaction from request
            body
        "500":
          description: Internal Server Error - Error while updating transaction
      security:
      - callback-auth: []
      summary: Endpoint designed for receiving callbacks from Arc (service responsible
        for submitting transactions to the BSV network)
      tags:
      - Transactions
  /v1/access-key:
    delete:
      description: Revoke access key
      parameters:
      - description: id of the access key
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Revoked AccessKey
          schema:
            $ref: '#/definitions/models.AccessKey'
        "400":
          description: 'Bad request - Missing required field: id'
        "500":
          description: Internal server error - Error while revoking access key
      security:
      - x-auth-xpub: []
      summary: Revoke access key
      tags:
      - Access-key
    get:
      description: Get access key
      parameters:
      - description: id of the access key
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: AccessKey with given id
          schema:
            $ref: '#/definitions/models.AccessKey'
        "400":
          description: 'Bad request - Missing required field: id'
        "403":
          description: Forbidden - Access key is not owned by the user
        "500":
          description: Internal server error - Error while getting access key
      security:
      - x-auth-xpub: []
      summary: Get access key
      tags:
      - Access-key
    post:
      description: Create access key
      parameters:
      - description: ' '
        in: body
        name: CreateAccessKey
        required: true
        schema:
          $ref: '#/definitions/accesskeys.CreateAccessKey'
      produces:
      - application/json
      responses:
        "201":
          description: Created AccessKey
          schema:
            $ref: '#/definitions/models.AccessKey'
        "400":
          description: Bad request - Error while parsing CreateAccessKey from request
            body
        "500":
          description: Internal server error - Error while creating new access key
      security:
      - x-auth-xpub: []
      summary: Create access key
      tags:
      - Access-key
  /v1/access-key/count:
    post:
      description: Count of access keys
      parameters:
      - description: Enables filtering of elements to be counted
        in: body
        name: CountAccessKeys
        schema:
          $ref: '#/definitions/accesskeys.CountAccessKeys'
      produces:
      - application/json
      responses:
        "200":
          description: Count of access keys
          schema:
            type: number
        "400":
          description: Bad request - Error while parsing CountAccessKeys from request
            body
        "500":
          description: Internal Server Error - Error while fetching count of access
            keys
      security:
      - x-auth-xpub: []
      summary: Count of access keys
      tags:
      - Access-key
  /v1/access-key/search:
    post:
      description: Search access key
      parameters:
      - description: Supports targeted resource searches with filters and metadata,
          plus options for pagination and sorting to streamline data exploration and
          analysis
        in: body
        name: SearchAccessKeys
        schema:
          $ref: '#/definitions/accesskeys.SearchAccessKeys'
      produces:
      - application/json
      responses:
        "200":
          description: List of access keys
          schema:
            items:
              $ref: '#/definitions/models.AccessKey'
            type: array
        "400":
          description: Bad request - Error while SearchAccessKeys from request body
        "500":
          description: Internal server error - Error while searching for access keys
      security:
      - x-auth-xpub: []
      summary: Search access key
      tags:
      - Access-key
  /v1/admin/access-keys/count:
    post:
      description: Access Keys Count
      parameters:
      - description: Enables filtering of elements to be counted
        in: body
        name: CountAccessKeys
        schema:
          $ref: '#/definitions/admin.CountAccessKeys'
      produces:
      - application/json
      responses:
        "200":
          description: Count of access keys
          schema:
            type: number
        "400":
          description: Bad request - Error while parsing CountAccessKeys from request
            body
        "500":
          description: Internal Server Error - Error while fetching count of access
            keys
      security:
      - x-auth-xpub: []
      summary: Access Keys Count
      tags:
      - Admin
  /v1/admin/access-keys/search:
    post:
      description: Access Keys Search
      parameters:
      - description: Supports targeted resource searches with filters and metadata,
          plus options for pagination and sorting to streamline data exploration and
          analysis
        in: body
        name: SearchAccessKeys
        schema:
          $ref: '#/definitions/admin.SearchAccessKeys'
      produces:
      - application/json
      responses:
        "200":
          description: List of access keys
          schema:
            items:
              $ref: '#/definitions/models.AccessKey'
            type: array
        "400":
          description: Bad request - Error while parsing SearchAccessKeys from request
            body
        "500":
          description: Internal server error - Error while searching for access keys
      security:
      - x-auth-xpub: []
      summary: Access Keys Search
      tags:
      - Admin
  /v1/admin/contact/{id}:
    delete:
      description: Delete contact
      parameters:
      - description: Contact id
        in: path
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad request - Error while parsing UpdateContact from request
            body or getting id from path
        "404":
          description: Not found - Error while getting contact by id
        "422":
          description: Unprocessable entity - Incorrect status of contact
        "500":
          description: Internal server error - Error while updating contact
      security:
      - x-auth-xpub: []
      summary: Delete contact
      tags:
      - Admin
    patch:
      description: Update contact FullName or Metadata
      parameters:
      - description: Contact id
        in: path
        name: id
        type: string
      - description: FullName and metadata to update
        in: body
        name: UpdateContact
        schema:
          $ref: '#/definitions/admin.UpdateContact'
      produces:
      - application/json
      responses:
        "200":
          description: Updated contact
          schema:
            $ref: '#/definitions/models.Contact'
        "400":
          description: Bad request - Error while parsing UpdateContact from request
            body or getting id from path
        "404":
          description: Not found - Error while getting contact by id
        "422":
          description: Unprocessable entity - Incorrect status of contact
        "500":
          description: Internal server error - Error while updating contact
      security:
      - x-auth-xpub: []
      summary: Update contact FullName or Metadata
      tags:
      - Admin
  /v1/admin/contact/accepted/{id}:
    patch:
      description: Accept contact
      parameters:
      - description: Contact id
        in: path
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Changed contact
          schema:
            $ref: '#/definitions/models.Contact'
        "400":
          description: Bad request - Error while getting id from path
        "404":
          description: Not found - Error while getting contact by id
        "422":
          description: Unprocessable entity - Incorrect status of contact
        "500":
          description: Internal server error - Error while changing contact status
      security:
      - x-auth-xpub: []
      summary: Accept contact
      tags:
      - Admin
  /v1/admin/contact/rejected/{id}:
    patch:
      description: Reject contact
      parameters:
      - description: Contact id
        in: path
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Rejected contact
          schema:
            $ref: '#/definitions/models.Contact'
        "400":
          description: Bad request - Error while getting id from path
        "404":
          description: Not found - Error while getting contact by id
        "422":
          description: Unprocessable entity - Incorrect status of contact
        "500":
          description: Internal server error - Error while changing contact status
      security:
      - x-auth-xpub: []
      summary: Reject contact
      tags:
      - Admin
  /v1/admin/contact/search:
    post:
      description: Search for contacts
      parameters:
      - description: Supports targeted resource searches with filters and metadata,
          plus options for pagination and sorting to streamline data exploration and
          analysis
        in: body
        name: SearchContacts
        schema:
          $ref: '#/definitions/admin.SearchContacts'
      produces:
      - application/json
      responses:
        "200":
          description: List of contacts
          schema:
            $ref: '#/definitions/models.SearchContactsResponse'
        "400":
          description: Bad request - Error while parsing SearchContacts from request
            body
        "500":
          description: Internal server error - Error while searching for contacts
      security:
      - x-auth-xpub: []
      summary: Search for contacts
      tags:
      - Admin
  /v1/admin/destinations/search:
    post:
      description: Search for destinations
      parameters:
      - description: Supports targeted resource searches with filters and metadata,
          plus options for pagination and sorting to streamline data exploration and
          analysis
        in: body
        name: SearchDestinations
        schema:
          $ref: '#/definitions/admin.SearchDestinations'
      produces:
      - application/json
      responses:
        "200":
          description: List of destinations
          schema:
            items:
              $ref: '#/definitions/models.Destination'
            type: array
        "400":
          description: Bad request - Error while parsing SearchDestinations from request
            body
        "500":
          description: Internal server error - Error while searching for destinations
      security:
      - x-auth-xpub: []
      summary: Search for destinations
      tags:
      - Admin
  /v1/admin/paymail/create:
    post:
      description: Create paymail
      parameters:
      - description: ' '
        in: body
        name: CreatePaymail
        schema:
          $ref: '#/definitions/admin.CreatePaymail'
      produces:
      - application/json
      responses:
        "201":
          description: Created PaymailAddress
          schema:
            $ref: '#/definitions/models.PaymailAddress'
        "400":
          description: Bad request - Error while parsing CreatePaymail from request
            body or if xpub or address are missing
        "500":
          description: Internal Server Error - Error while creating new paymail address
      security:
      - x-auth-xpub: []
      summary: Create paymail
      tags:
      - Admin
  /v1/admin/paymail/delete:
    delete:
      description: Delete paymail
      parameters:
      - description: PaymailAddress model containing paymail address to delete
        in: body
        name: PaymailAddress
        schema:
          $ref: '#/definitions/admin.PaymailAddress'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad request - Error while parsing PaymailAddress from request
            body or if address is missing
        "500":
          description: Internal Server Error - Error while deleting paymail address
      security:
      - x-auth-xpub: []
      summary: Delete paymail
      tags:
      - Admin
  /v1/admin/paymail/get:
    post:
      description: Get paymail
      parameters:
      - description: PaymailAddress model containing paymail address to get
        in: body
        name: PaymailAddress
        schema:
          $ref: '#/definitions/admin.PaymailAddress'
      produces:
      - application/json
      responses:
        "200":
          description: PaymailAddress with given address
          schema:
            $ref: '#/definitions/models.PaymailAddress'
        "400":
          description: Bad request - Error while parsing PaymailAddress from request
            body
        "500":
          description: Internal Server Error - Error while getting paymail address
      security:
      - x-auth-xpub: []
      summary: Get paymail
      tags:
      - Admin
  /v1/admin/paymails/count:
    post:
      description: Paymail addresses count
      parameters:
      - description: Enables filtering of elements to be counted
        in: body
        name: CountPaymails
        schema:
          $ref: '#/definitions/admin.CountPaymails'
      produces:
      - application/json
      responses:
        "200":
          description: Count of paymail addresses
          schema:
            type: number
        "400":
          description: Bad request - Error while parsing CountPaymails from request
            body
        "500":
          description: Internal Server Error - Error while fetching count of paymail
            addresses
      security:
      - x-auth-xpub: []
      summary: Paymail addresses count
      tags:
      - Admin
  /v1/admin/paymails/search:
    post:
      description: Paymail addresses search
      parameters:
      - description: Supports targeted resource searches with filters and metadata,
          plus options for pagination and sorting to streamline data exploration and
          analysis
        in: body
        name: SearchPaymails
        schema:
          $ref: '#/definitions/admin.SearchPaymails'
      produces:
      - application/json
      responses:
        "200":
          description: List of paymail addresses
          schema:
            items:
              $ref: '#/definitions/models.PaymailAddress'
            type: array
        "400":
          description: Bad request - Error while parsing SearchPaymails from request
            body
        "500":
          description: Internal server error - Error while searching for paymail addresses
      security:
      - x-auth-xpub: []
      summary: Paymail addresses search
      tags:
      - Admin
  /v1/admin/shared-config:
    get:
      description: Get shared config
      produces:
      - application/json
      responses:
        "200":
          description: Shared configuration
          schema:
            $ref: '#/definitions/models.SharedConfig'
      security:
      - x-auth-xpub: []
      summary: Get shared config
      tags:
      - Admin
  /v1/admin/stats:
    get:
      description: Get stats
      produces:
      - application/json
      responses:
        "200":
          description: Stats for the admin
          schema:
            $ref: '#/definitions/models.AdminStats'
        "500":
          description: Internal Server Error - Error while fetching admin stats
      security:
      - x-auth-xpub: []
      summary: Get stats
      tags:
      - Admin
  /v1/admin/status:
    get:
      description: Get status
      produces:
      - application/json
      responses:
        "200":
          description: Status response
          schema:
            type: boolean
      security:
      - x-auth-xpub: []
      summary: Get status
      tags:
      - Admin
  /v1/admin/transactions/count:
    post:
      description: Count transactions
      parameters:
      - description: Enables filtering of elements to be counted
        in: body
        name: CountTransactions
        schema:
          $ref: '#/definitions/admin.CountTransactions'
      produces:
      - application/json
      responses:
        "200":
          description: Count of transactions
          schema:
            type: number
        "400":
          description: Bad request - Error while parsing CountTransactions from request
            body
        "500":
          description: Internal Server Error - Error while fetching count of transactions
      security:
      - x-auth-xpub: []
      summary: Count transactions
      tags:
      - Admin
  /v1/admin/transactions/record:
    post:
      description: Record transactions
      parameters:
      - description: RecordTransaction model containing hex of the transaction to
          record
        in: body
        name: RecordTransaction
        required: true
        schema:
          $ref: '#/definitions/admin.RecordTransaction'
      produces:
      - application/json
      responses:
        "201":
          description: Recorded transaction
          schema:
            $ref: '#/definitions/models.Transaction'
        "400":
          description: Bad request - Error while parsing RecordTransaction from request
            body
        "500":
          description: Internal Server Error - Error while fetching count of access
            keys
      security:
      - x-auth-xpub: []
      summary: Record transactions
      tags:
      - Admin
  /v1/admin/transactions/search:
    post:
      description: Search for transactions
      parameters:
      - description: Supports targeted resource searches with filters and metadata,
          plus options for pagination and sorting to streamline data exploration and
          analysis
        in: body
        name: SearchTransactions
        schema:
          $ref: '#/definitions/admin.SearchTransactions'
      produces:
      - application/json
      responses:
        "200":
          description: List of transactions
          schema:
            items:
              $ref: '#/definitions/models.Transaction'
            type: array
        "400":
          description: Bad request - Error while parsing SearchTransactions from request
            body
        "500":
          description: Internal server error - Error while searching for transactions
      security:
      - x-auth-xpub: []
      summary: Search for transactions
      tags:
      - Admin
  /v1/admin/utxos/count:
    post:
      description: Count utxos
      parameters:
      - description: Enables filtering of elements to be counted
        in: body
        name: CountUtxos
        schema:
          $ref: '#/definitions/admin.CountUtxos'
      produces:
      - application/json
      responses:
        "200":
          description: Count of utxos
          schema:
            type: number
        "400":
          description: Bad request - Error while parsing CountUtxos from request body
        "500":
          description: Internal Server Error - Error while fetching count of utxos
      security:
      - x-auth-xpub: []
      summary: Count utxos
      tags:
      - Admin
  /v1/admin/utxos/search:
    post:
      description: Search for utxos
      parameters:
      - description: Supports targeted resource searches with filters and metadata,
          plus options for pagination and sorting to streamline data exploration and
          analysis
        in: body
        name: SearchUtxos
        schema:
          $ref: '#/definitions/admin.SearchUtxos'
      produces:
      - application/json
      responses:
        "200":
          description: List of utxos
          schema:
            items:
              $ref: '#/definitions/models.Utxo'
            type: array
        "400":
          description: Bad request - Error while parsing SearchUtxos from request
            body
        "500":
          description: Internal server error - Error while searching for utxos
      security:
      - x-auth-xpub: []
      summary: Search for utxos
      tags:
      - Admin
  /v1/admin/xpub:
    post:
      description: Create xPub
      parameters:
      - description: ' '
        in: body
        name: CreateXpub
        required: true
        schema:
          $ref: '#/definitions/admin.CreateXpub'
      produces:
      - application/json
      responses:
        "201":
          description: Created Xpub
          schema:
            $ref: '#/definitions/models.Xpub'
        "400":
          description: Bad request - Error while parsing CreateXpub from request body
        "500":
          description: Internal server error - Error while creating xpub
      security:
      - x-auth-xpub: []
      summary: Create xPub
      tags:
      - Admin
  /v1/admin/xpubs/count:
    post:
      description: Count xpubs
      parameters:
      - description: Enables filtering of elements to be counted
        in: body
        name: CountXpubs
        schema:
          $ref: '#/definitions/admin.CountXpubs'
      produces:
      - application/json
      responses:
        "200":
          description: Count of access keys
          schema:
            type: number
        "400":
          description: Bad request - Error while parsing CountXpubs from request body
        "500":
          description: Internal Server Error - Error while fetching count of xpubs
      security:
      - x-auth-xpub: []
      summary: Count xpubs
      tags:
      - Admin
  /v1/admin/xpubs/search:
    post:
      description: Search for xpubs
      parameters:
      - description: Supports targeted resource searches with filters and metadata,
          plus options for pagination and sorting to streamline data exploration and
          analysis
        in: body
        name: SearchXpubs
        schema:
          $ref: '#/definitions/admin.SearchXpubs'
      produces:
      - application/json
      responses:
        "200":
          description: List of xpubs
          schema:
            items:
              $ref: '#/definitions/models.Xpub'
            type: array
        "400":
          description: Bad request - Error while parsing SearchXpubs from request
            body
        "500":
          description: Internal server error - Error while searching for xpubs
      security:
      - x-auth-xpub: []
      summary: Search for xpubs
      tags:
      - Admin
  /v1/contact/{paymail}:
    put:
      description: Add or update contact. When adding a new contact, the system utilizes
        Paymail's PIKE capability to dispatch an invitation request, asking the counterparty
        to include the current user in their contacts.
      parameters:
      - description: Paymail address of the contact the user wants to add/modify
        in: path
        name: paymail
        required: true
        type: string
      - description: Full name and metadata needed to add/modify contact
        in: body
        name: UpsertContact
        required: true
        schema:
          $ref: '#/definitions/contacts.UpsertContact'
      produces:
      - application/json
      responses:
        "201":
          description: Created
      security:
      - x-auth-xpub: []
      summary: Upsert contact
      tags:
      - Contact
  /v1/contact/accepted/{paymail}:
    patch:
      description: Accept contact. For contact with status "awaiting" change status
        to "unconfirmed"
      parameters:
      - description: Paymail address of the contact the user wants to accept
        in: path
        name: paymail
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "404":
          description: Contact not found
        "422":
          description: Contact status not awaiting
        "500":
          description: Internal server error
      security:
      - x-auth-xpub: []
      summary: Accept contact
      tags:
      - Contact
  /v1/contact/confirmed/{paymail}:
    patch:
      description: Confirm contact. For contact with status "unconfirmed" change status
        to "confirmed"
      parameters:
      - description: Paymail address of the contact the user wants to confirm
        in: path
        name: paymail
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "404":
          description: Contact not found
        "422":
          description: Contact status not unconfirmed
        "500":
          description: Internal server error
      security:
      - x-auth-xpub: []
      summary: Confirm contact
      tags:
      - Contact
  /v1/contact/rejected/{paymail}:
    patch:
      description: Reject contact. For contact with status "awaiting" delete contact
      parameters:
      - description: Paymail address of the contact the user wants to reject
        in: path
        name: paymail
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "404":
          description: Contact not found
        "422":
          description: Contact status not awaiting
        "500":
          description: Internal server error
      security:
      - x-auth-xpub: []
      summary: Reject contact
      tags:
      - Contact
  /v1/contact/search:
    post:
      description: Search contacts
      parameters:
      - description: Supports targeted resource searches with filters and metadata,
          plus options for pagination and sorting to streamline data exploration and
          analysis
        in: body
        name: SearchContacts
        schema:
          $ref: '#/definitions/contacts.SearchContacts'
      produces:
      - application/json
      responses:
        "200":
          description: List of contacts
          schema:
            $ref: '#/definitions/models.SearchContactsResponse'
        "400":
          description: Bad request - Error while parsing SearchContacts from request
            body
        "500":
          description: Internal server error - Error while searching for contacts
      security:
      - x-auth-xpub: []
      summary: Search contacts
      tags:
      - Contact
  /v1/contact/unconfirmed/{paymail}:
    patch:
      description: Unconfirm contact. For contact with status "confirmed" change status
        to "unconfirmed"
      parameters:
      - description: Paymail address of the contact the user wants to unconfirm
        in: path
        name: paymail
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "404":
          description: Contact not found
        "422":
          description: Contact status not confirmed
        "500":
          description: Internal server error
      security:
      - x-auth-xpub: []
      summary: Unconfirm contact
      tags:
      - Contact
  /v1/destination:
    get:
      description: Get a destination
      parameters:
      - description: Destination ID
        in: query
        name: id
        type: string
      - description: Destination address
        in: query
        name: address
        type: string
      - description: Destination locking script
        in: query
        name: locking_script
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Destination with given id
          schema:
            $ref: '#/definitions/models.Destination'
        "400":
          description: Bad request - All parameters are missing (id, address, locking_script)
        "500":
          description: Internal server error - Error while getting destination
      security:
      - x-auth-xpub: []
      summary: Get a destination
      tags:
      - Destinations
    patch:
      description: Update destination
      parameters:
      - description: ' '
        in: body
        name: UpdateDestination
        schema:
          $ref: '#/definitions/destinations.UpdateDestination'
      produces:
      - application/json
      responses:
        "200":
          description: Updated Destination
          schema:
            $ref: '#/definitions/models.Destination'
        "400":
          description: Bad request - Error while parsing UpdateDestination from request
            body
        "500":
          description: Internal Server Error - Error while updating destination
      security:
      - x-auth-xpub: []
      summary: Update destination
      tags:
      - Destinations
    post:
      description: Create a new destination
      parameters:
      - description: ' '
        in: body
        name: CreateDestination
        schema:
          $ref: '#/definitions/destinations.CreateDestination'
      produces:
      - application/json
      responses:
        "201":
          description: Created Destination
          schema:
            $ref: '#/definitions/models.Destination'
        "400":
          description: Bad request - Error while parsing CreateDestination from request
            body
        "500":
          description: Internal Server Error - Error while creating destination
      security:
      - x-auth-xpub: []
      summary: Create a new destination
      tags:
      - Destinations
  /v1/destination/count:
    post:
      description: Count Destinations
      parameters:
      - description: Enables filtering of elements to be counted
        in: body
        name: CountDestinations
        schema:
          $ref: '#/definitions/destinations.CountDestinations'
      produces:
      - application/json
      responses:
        "200":
          description: Count of destinations
          schema:
            type: number
        "400":
          description: Bad request - Error while parsing CountDestinations from request
            body
        "500":
          description: Internal Server Error - Error while fetching count of destinations
      security:
      - x-auth-xpub: []
      summary: Count Destinations
      tags:
      - Destinations
  /v1/destination/search:
    post:
      description: Search for a destination
      parameters:
      - description: Supports targeted resource searches with filters and metadata,
          plus options for pagination and sorting to streamline data exploration and
          analysis
        in: body
        name: SearchDestinations
        schema:
          $ref: '#/definitions/destinations.SearchDestinations'
      produces:
      - application/json
      responses:
        "200":
          description: List of destinations
          schema:
            items:
              $ref: '#/definitions/models.Destination'
            type: array
        "400":
          description: Bad request - Error while parsing SearchDestinations from request
            body
        "500":
          description: Internal server error - Error while searching for destinations
      security:
      - x-auth-xpub: []
      summary: Search for a destination
      tags:
      - Destinations
  /v1/transaction:
    get:
      description: Get transaction by id
      parameters:
      - description: id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Transaction
          schema:
            $ref: '#/definitions/models.Transaction'
        "400":
          description: Bad request - Transaction not found or associated with another
            xpub
        "500":
          description: Internal Server Error - Error while fetching transaction
      security:
      - x-auth-xpub: []
      summary: Get transaction by id
      tags:
      - Transactions
    patch:
      description: Update transaction
      parameters:
      - description: ' '
        in: body
        name: UpdateTransaction
        required: true
        schema:
          $ref: '#/definitions/transactions.UpdateTransaction'
      produces:
      - application/json
      responses:
        "200":
          description: Updated transaction
          schema:
            $ref: '#/definitions/models.Transaction'
        "400":
          description: Bad request - Error while parsing UpdateTransaction from request
            body, tx not found or tx is not associated with the xpub
        "500":
          description: Internal Server Error - Error while updating transaction
      security:
      - x-auth-xpub: []
      summary: Update transaction
      tags:
      - Transactions
    post:
      description: New transaction
      parameters:
      - description: NewTransaction model containing the transaction config and metadata
        in: body
        name: NewTransaction
        required: true
        schema:
          $ref: '#/definitions/transactions.NewTransaction'
      produces:
      - application/json
      responses:
        "201":
          description: Created transaction
          schema:
            $ref: '#/definitions/models.DraftTransaction'
        "400":
          description: Bad request - Error while parsing NewTransaction from request
            body or xpub not found
        "500":
          description: Internal Server Error - Error while creating transaction
      security:
      - x-auth-xpub: []
      summary: New transaction
      tags:
      - Transactions
  /v1/transaction/count:
    post:
      description: Count of transactions
      parameters:
      - description: Enables filtering of elements to be counted
        in: body
        name: CountTransactions
        schema:
          $ref: '#/definitions/transactions.CountTransactions'
      produces:
      - application/json
      responses:
        "200":
          description: Count of access keys
          schema:
            type: number
        "400":
          description: Bad request - Error while parsing CountTransactions from request
            body
        "500":
          description: Internal Server Error - Error while fetching count of transactions
      security:
      - x-auth-xpub: []
      summary: Count of transactions
      tags:
      - Transactions
  /v1/transaction/record:
    post:
      description: Record transaction
      parameters:
      - description: Transaction to be recorded
        in: body
        name: RecordTransaction
        required: true
        schema:
          $ref: '#/definitions/transactions.RecordTransaction'
      produces:
      - application/json
      responses:
        "201":
          description: Created transaction
          schema:
            $ref: '#/definitions/models.Transaction'
        "400":
          description: Bad request - Error while parsing RecordTransaction from request
            body or xpub not found
        "500":
          description: Internal Server Error - Error while recording transaction
      security:
      - x-auth-xpub: []
      summary: Record transaction
      tags:
      - Transactions
  /v1/transaction/search:
    post:
      description: Search transaction
      parameters:
      - description: Supports targeted resource searches with filters and metadata,
          plus options for pagination and sorting to streamline data exploration and
          analysis
        in: body
        name: SearchTransactions
        schema:
          $ref: '#/definitions/transactions.SearchTransactions'
      produces:
      - application/json
      responses:
        "200":
          description: List of transactions
          schema:
            items:
              $ref: '#/definitions/models.Transaction'
            type: array
        "400":
          description: Bad request - Error while parsing SearchTransactions from request
            body
        "500":
          description: Internal server error - Error while searching for transactions
      security:
      - x-auth-xpub: []
      summary: Search transaction
      tags:
      - Transactions
  /v1/utxo:
    get:
      description: Get UTXO
      parameters:
      - description: Id of the transaction
        in: query
        name: tx_id
        required: true
        type: string
      - description: Output index
        in: query
        name: output_index
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: UTXO with given Id and output index
          schema:
            $ref: '#/definitions/models.Utxo'
        "400":
          description: Bad request - Error while parsing output_index
        "500":
          description: Internal Server Error - Error while fetching utxo
      security:
      - x-auth-xpub: []
      summary: Get UTXO
      tags:
      - UTXO
  /v1/utxo/count:
    post:
      description: Count of UTXOs
      parameters:
      - description: Enables filtering of elements to be counted
        in: body
        name: CountUtxos
        schema:
          $ref: '#/definitions/utxos.CountUtxos'
      produces:
      - application/json
      responses:
        "200":
          description: Count of utxos
          schema:
            type: number
        "400":
          description: Bad request - Error while parsing CountUtxos from request body
        "500":
          description: Internal Server Error - Error while fetching count of utxos
      security:
      - x-auth-xpub: []
      summary: Count of UTXOs
      tags:
      - UTXO
  /v1/utxo/search:
    post:
      description: Search UTXO
      parameters:
      - description: Supports targeted resource searches with filters and metadata,
          plus options for pagination and sorting to streamline data exploration and
          analysis
        in: body
        name: SearchUtxos
        schema:
          $ref: '#/definitions/utxos.SearchUtxos'
      produces:
      - application/json
      responses:
        "200":
          description: List of utxos
          schema:
            items:
              $ref: '#/definitions/models.Utxo'
            type: array
        "400":
          description: Bad request - Error while parsing SearchUtxos from request
            body
        "500":
          description: Internal server error - Error while searching for utxos
      security:
      - x-auth-xpub: []
      summary: Search UTXO
      tags:
      - UTXO
  /v1/xpub:
    get:
      description: Get xPub
      produces:
      - application/json
      responses:
        "200":
          description: xPub associated with the given xPub from auth header
          schema:
            $ref: '#/definitions/models.Xpub'
        "500":
          description: Internal Server Error - Error while fetching xPub
      security:
      - x-auth-xpub: []
      summary: Get xPub
      tags:
      - xPub
    patch:
      description: Update xPub
      parameters:
      - description: ' '
        in: body
        name: Metadata
        schema:
          $ref: '#/definitions/engine.Metadata'
      produces:
      - application/json
      responses:
        "200":
          description: Updated xPub
          schema:
            $ref: '#/definitions/models.Xpub'
        "400":
          description: Bad request - Error while parsing Metadata from request body
        "500":
          description: Internal Server Error - Error while updating xPub
      security:
      - x-auth-xpub: []
      - bux-auth-xpub: []
      summary: Update xPub
      tags:
      - xPub
securityDefinitions:
  callback-auth:
    in: header
    name: authorization
    type: apiKey
  x-auth-xpub:
    in: header
    name: x-auth-xpub
    type: apiKey
swagger: "2.0"
