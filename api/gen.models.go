// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package api

import (
	"encoding/json"
	"time"

	"github.com/oapi-codegen/runtime"
)

const (
	XPubAuthScopes = "XPubAuth.Scopes"
)

// Defines values for ApiComponentsModelsOperationTxStatus.
const (
	BROADCASTED ApiComponentsModelsOperationTxStatus = "BROADCASTED"
	CREATED     ApiComponentsModelsOperationTxStatus = "CREATED"
	MINED       ApiComponentsModelsOperationTxStatus = "MINED"
	PROBLEMATIC ApiComponentsModelsOperationTxStatus = "PROBLEMATIC"
	REVERTED    ApiComponentsModelsOperationTxStatus = "REVERTED"
)

// Defines values for ApiComponentsModelsOperationType.
const (
	Incoming ApiComponentsModelsOperationType = "incoming"
	Outgoing ApiComponentsModelsOperationType = "outgoing"
)

// Defines values for ApiComponentsModelsSearchPageSort.
const (
	Asc  ApiComponentsModelsSearchPageSort = "asc"
	Desc ApiComponentsModelsSearchPageSort = "desc"
)

// ApiComponentsErrorsErrAdminAuthOnNonAdminEndpoint defines model for api_components_errors_ErrAdminAuthOnNonAdminEndpoint.
type ApiComponentsErrorsErrAdminAuthOnNonAdminEndpoint struct {
	Code    interface{} `json:"code"`
	Message interface{} `json:"message"`
}

// ApiComponentsErrorsErrAnnotationIndexConversion defines model for api_components_errors_ErrAnnotationIndexConversion.
type ApiComponentsErrorsErrAnnotationIndexConversion struct {
	Code    interface{} `json:"code"`
	Message interface{} `json:"message"`
}

// ApiComponentsErrorsErrAnnotationIndexOutOfRange defines model for api_components_errors_ErrAnnotationIndexOutOfRange.
type ApiComponentsErrorsErrAnnotationIndexOutOfRange struct {
	Code    interface{} `json:"code"`
	Message interface{} `json:"message"`
}

// ApiComponentsErrorsErrAuthorization defines model for api_components_errors_ErrAuthorization.
type ApiComponentsErrorsErrAuthorization struct {
	Code    interface{} `json:"code"`
	Message interface{} `json:"message"`
}

// ApiComponentsErrorsErrDataNotFound defines model for api_components_errors_ErrDataNotFound.
type ApiComponentsErrorsErrDataNotFound struct {
	Code    interface{} `json:"code"`
	Message interface{} `json:"message"`
}

// ApiComponentsErrorsErrGettingOutputs defines model for api_components_errors_ErrGettingOutputs.
type ApiComponentsErrorsErrGettingOutputs struct {
	Code    interface{} `json:"code"`
	Message interface{} `json:"message"`
}

// ApiComponentsErrorsErrInternal defines model for api_components_errors_ErrInternal.
type ApiComponentsErrorsErrInternal struct {
	Code    interface{} `json:"code"`
	Message interface{} `json:"message"`
}

// ApiComponentsErrorsErrInvalidDataID defines model for api_components_errors_ErrInvalidDataID.
type ApiComponentsErrorsErrInvalidDataID struct {
	Code    interface{} `json:"code"`
	Message interface{} `json:"message"`
}

// ApiComponentsErrorsErrNoOperations defines model for api_components_errors_ErrNoOperations.
type ApiComponentsErrorsErrNoOperations struct {
	Code    interface{} `json:"code"`
	Message interface{} `json:"message"`
}

// ApiComponentsErrorsErrTxBroadcast defines model for api_components_errors_ErrTxBroadcast.
type ApiComponentsErrorsErrTxBroadcast struct {
	Code    interface{} `json:"code"`
	Message interface{} `json:"message"`
}

// ApiComponentsErrorsErrUTXOSpent defines model for api_components_errors_ErrUTXOSpent.
type ApiComponentsErrorsErrUTXOSpent struct {
	Code    interface{} `json:"code"`
	Message interface{} `json:"message"`
}

// ApiComponentsErrorsErrUnauthorized defines model for api_components_errors_ErrUnauthorized.
type ApiComponentsErrorsErrUnauthorized struct {
	union json.RawMessage
}

// ApiComponentsErrorsErrUserAuthOnNonUserEndpoint defines model for api_components_errors_ErrUserAuthOnNonUserEndpoint.
type ApiComponentsErrorsErrUserAuthOnNonUserEndpoint struct {
	Code    interface{} `json:"code"`
	Message interface{} `json:"message"`
}

// ApiComponentsErrorsErrWrongAuthScopeFormat defines model for api_components_errors_ErrWrongAuthScopeFormat.
type ApiComponentsErrorsErrWrongAuthScopeFormat struct {
	Code    interface{} `json:"code"`
	Message interface{} `json:"message"`
}

// ApiComponentsErrorsErrXPubAuthRequired defines model for api_components_errors_ErrXPubAuthRequired.
type ApiComponentsErrorsErrXPubAuthRequired struct {
	Code    interface{} `json:"code"`
	Message interface{} `json:"message"`
}

// ApiComponentsErrorsErrorSchema defines model for api_components_errors_ErrorSchema.
type ApiComponentsErrorsErrorSchema struct {
	// Code Error code
	Code string `json:"code"`

	// Message Error message
	Message string `json:"message"`
}

// ApiComponentsModelsAnnotations defines model for api_components_models_Annotations.
type ApiComponentsModelsAnnotations struct {
	// Inputs Map of input annotations
	Inputs *map[string]ApiComponentsModelsInputAnnotation `json:"inputs,omitempty"`

	// Outputs Map of output annotations
	Outputs *map[string]ApiComponentsModelsOutputAnnotation `json:"outputs,omitempty"`
}

// ApiComponentsModelsData defines model for api_components_models_Data.
type ApiComponentsModelsData struct {
	// Blob Data blob
	Blob string `json:"blob"`

	// Id User ID
	Id string `json:"id"`
}

// ApiComponentsModelsInputAnnotation defines model for api_components_models_InputAnnotation.
type ApiComponentsModelsInputAnnotation struct {
	// CustomInstructions Instructions about how to unlock this input.
	CustomInstructions string `json:"customInstructions"`
}

// ApiComponentsModelsOperation defines model for api_components_models_Operation.
type ApiComponentsModelsOperation struct {
	// Counterparty Counterparty of operation
	Counterparty *string `json:"counterparty,omitempty"`

	// CreatedAt Creation date of operation
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// TxID Transaction ID
	TxID *string `json:"txID,omitempty"`

	// TxStatus Status of transaction
	TxStatus *ApiComponentsModelsOperationTxStatus `json:"txStatus,omitempty"`

	// Type Type of operation
	Type *ApiComponentsModelsOperationType `json:"type,omitempty"`

	// Value Value of operation
	Value *int64 `json:"value,omitempty"`
}

// ApiComponentsModelsOperationTxStatus Status of transaction
type ApiComponentsModelsOperationTxStatus string

// ApiComponentsModelsOperationType Type of operation
type ApiComponentsModelsOperationType string

// ApiComponentsModelsOperationsSearchResult defines model for api_components_models_OperationsSearchResult.
type ApiComponentsModelsOperationsSearchResult struct {
	Operations *[]ApiComponentsModelsOperation `json:"operations,omitempty"`
	Page       *ApiComponentsModelsSearchPage  `json:"page,omitempty"`
}

// ApiComponentsModelsOutputAnnotation defines model for api_components_models_OutputAnnotation.
type ApiComponentsModelsOutputAnnotation struct {
	// Bucket Type of bucket where this output should be stored.
	Bucket  string                                `json:"bucket"`
	Paymail *ApiComponentsModelsPaymailAnnotation `json:"paymail,omitempty"`
}

// ApiComponentsModelsPaymailAnnotation defines model for api_components_models_PaymailAnnotation.
type ApiComponentsModelsPaymailAnnotation struct {
	// Receiver Paymail address of the receiver
	Receiver string `json:"receiver"`

	// Reference Reference number used for paymail transaction
	Reference string `json:"reference"`

	// Sender Paymail address of the sender
	Sender string `json:"sender"`
}

// ApiComponentsModelsRecordedOutline defines model for api_components_models_RecordedOutline.
type ApiComponentsModelsRecordedOutline struct {
	// TxID ID of the transaction
	TxID string `json:"txID"`
}

// ApiComponentsModelsSearchPage defines model for api_components_models_SearchPage.
type ApiComponentsModelsSearchPage struct {
	// Number Page number for pagination
	Number *int `json:"number,omitempty"`

	// Size Number of items per page
	Size *int `json:"size,omitempty"`

	// Sort Sorting order (asc or desc)
	Sort *ApiComponentsModelsSearchPageSort `json:"sort,omitempty"`

	// SortBy Field to sort by
	SortBy *string `json:"sortBy,omitempty"`
}

// ApiComponentsModelsSearchPageSort Sorting order (asc or desc)
type ApiComponentsModelsSearchPageSort string

// ApiComponentsModelsUserInfo defines model for api_components_models_UserInfo.
type ApiComponentsModelsUserInfo struct {
	// CurrentBalance Current balance of user
	CurrentBalance *string `json:"currentBalance,omitempty"`
}

// ApiComponentsRequestsAnnotatedTransaction defines model for api_components_requests_AnnotatedTransaction.
type ApiComponentsRequestsAnnotatedTransaction struct {
	Annotations *ApiComponentsModelsAnnotations `json:"annotations,omitempty"`

	// Format Transaction format
	Format string `json:"format"`

	// Hex Transaction hex
	Hex string `json:"hex"`
}

// ApiComponentsRequestsPageNumber defines model for api_components_requests_PageNumber.
type ApiComponentsRequestsPageNumber = int

// ApiComponentsRequestsPageSize defines model for api_components_requests_PageSize.
type ApiComponentsRequestsPageSize = int

// ApiComponentsRequestsSort defines model for api_components_requests_Sort.
type ApiComponentsRequestsSort = string

// ApiComponentsRequestsSortBy defines model for api_components_requests_SortBy.
type ApiComponentsRequestsSortBy = string

// ApiComponentsResponsesGetCurrentUserSuccess defines model for api_components_responses_GetCurrentUserSuccess.
type ApiComponentsResponsesGetCurrentUserSuccess = ApiComponentsModelsUserInfo

// ApiComponentsResponsesGetDataNotFound defines model for api_components_responses_GetDataNotFound.
type ApiComponentsResponsesGetDataNotFound struct {
	union json.RawMessage
}

// ApiComponentsResponsesGetDataSuccess defines model for api_components_responses_GetDataSuccess.
type ApiComponentsResponsesGetDataSuccess = ApiComponentsModelsData

// ApiComponentsResponsesInternalServerError defines model for api_components_responses_InternalServerError.
type ApiComponentsResponsesInternalServerError = ApiComponentsErrorsErrInternal

// ApiComponentsResponsesNotAuthorized defines model for api_components_responses_NotAuthorized.
type ApiComponentsResponsesNotAuthorized = ApiComponentsErrorsErrUnauthorized

// ApiComponentsResponsesRecordTransactionBadRequest defines model for api_components_responses_RecordTransactionBadRequest.
type ApiComponentsResponsesRecordTransactionBadRequest struct {
	union json.RawMessage
}

// ApiComponentsResponsesRecordTransactionInternalServerError defines model for api_components_responses_RecordTransactionInternalServerError.
type ApiComponentsResponsesRecordTransactionInternalServerError struct {
	union json.RawMessage
}

// ApiComponentsResponsesRecordTransactionSuccess defines model for api_components_responses_RecordTransactionSuccess.
type ApiComponentsResponsesRecordTransactionSuccess = ApiComponentsModelsRecordedOutline

// ApiComponentsResponsesSearchBadRequest defines model for api_components_responses_SearchBadRequest.
type ApiComponentsResponsesSearchBadRequest = ApiComponentsErrorsErrInvalidDataID

// ApiComponentsResponsesSearchOperationsSuccess defines model for api_components_responses_SearchOperationsSuccess.
type ApiComponentsResponsesSearchOperationsSuccess = ApiComponentsModelsOperationsSearchResult

// ApiComponentsResponsesUserBadRequest defines model for api_components_responses_UserBadRequest.
type ApiComponentsResponsesUserBadRequest = ApiComponentsErrorsErrInvalidDataID

// ApiComponentsResponsesUserNotAuthorized defines model for api_components_responses_UserNotAuthorized.
type ApiComponentsResponsesUserNotAuthorized struct {
	union json.RawMessage
}

// GetApiV2OperationsSearchParams defines parameters for GetApiV2OperationsSearch.
type GetApiV2OperationsSearchParams struct {
	// Page Page number for pagination
	Page *ApiComponentsRequestsPageNumber `form:"page,omitempty" json:"page,omitempty"`

	// Size Number of items per page
	Size *ApiComponentsRequestsPageSize `form:"size,omitempty" json:"size,omitempty"`

	// Sort Sorting order (asc or desc)
	Sort *ApiComponentsRequestsSort `form:"sort,omitempty" json:"sort,omitempty"`

	// SortBy Field to sort by
	SortBy *ApiComponentsRequestsSortBy `form:"sortBy,omitempty" json:"sortBy,omitempty"`
}

// PostApiV2TransactionsJSONRequestBody defines body for PostApiV2Transactions for application/json ContentType.
type PostApiV2TransactionsJSONRequestBody = ApiComponentsRequestsAnnotatedTransaction

// AsApiComponentsErrorsErrAuthorization returns the union data inside the ApiComponentsErrorsErrUnauthorized as a ApiComponentsErrorsErrAuthorization
func (t ApiComponentsErrorsErrUnauthorized) AsApiComponentsErrorsErrAuthorization() (ApiComponentsErrorsErrAuthorization, error) {
	var body ApiComponentsErrorsErrAuthorization
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromApiComponentsErrorsErrAuthorization overwrites any union data inside the ApiComponentsErrorsErrUnauthorized as the provided ApiComponentsErrorsErrAuthorization
func (t *ApiComponentsErrorsErrUnauthorized) FromApiComponentsErrorsErrAuthorization(v ApiComponentsErrorsErrAuthorization) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeApiComponentsErrorsErrAuthorization performs a merge with any union data inside the ApiComponentsErrorsErrUnauthorized, using the provided ApiComponentsErrorsErrAuthorization
func (t *ApiComponentsErrorsErrUnauthorized) MergeApiComponentsErrorsErrAuthorization(v ApiComponentsErrorsErrAuthorization) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsApiComponentsErrorsErrWrongAuthScopeFormat returns the union data inside the ApiComponentsErrorsErrUnauthorized as a ApiComponentsErrorsErrWrongAuthScopeFormat
func (t ApiComponentsErrorsErrUnauthorized) AsApiComponentsErrorsErrWrongAuthScopeFormat() (ApiComponentsErrorsErrWrongAuthScopeFormat, error) {
	var body ApiComponentsErrorsErrWrongAuthScopeFormat
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromApiComponentsErrorsErrWrongAuthScopeFormat overwrites any union data inside the ApiComponentsErrorsErrUnauthorized as the provided ApiComponentsErrorsErrWrongAuthScopeFormat
func (t *ApiComponentsErrorsErrUnauthorized) FromApiComponentsErrorsErrWrongAuthScopeFormat(v ApiComponentsErrorsErrWrongAuthScopeFormat) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeApiComponentsErrorsErrWrongAuthScopeFormat performs a merge with any union data inside the ApiComponentsErrorsErrUnauthorized, using the provided ApiComponentsErrorsErrWrongAuthScopeFormat
func (t *ApiComponentsErrorsErrUnauthorized) MergeApiComponentsErrorsErrWrongAuthScopeFormat(v ApiComponentsErrorsErrWrongAuthScopeFormat) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsApiComponentsErrorsErrAdminAuthOnNonAdminEndpoint returns the union data inside the ApiComponentsErrorsErrUnauthorized as a ApiComponentsErrorsErrAdminAuthOnNonAdminEndpoint
func (t ApiComponentsErrorsErrUnauthorized) AsApiComponentsErrorsErrAdminAuthOnNonAdminEndpoint() (ApiComponentsErrorsErrAdminAuthOnNonAdminEndpoint, error) {
	var body ApiComponentsErrorsErrAdminAuthOnNonAdminEndpoint
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromApiComponentsErrorsErrAdminAuthOnNonAdminEndpoint overwrites any union data inside the ApiComponentsErrorsErrUnauthorized as the provided ApiComponentsErrorsErrAdminAuthOnNonAdminEndpoint
func (t *ApiComponentsErrorsErrUnauthorized) FromApiComponentsErrorsErrAdminAuthOnNonAdminEndpoint(v ApiComponentsErrorsErrAdminAuthOnNonAdminEndpoint) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeApiComponentsErrorsErrAdminAuthOnNonAdminEndpoint performs a merge with any union data inside the ApiComponentsErrorsErrUnauthorized, using the provided ApiComponentsErrorsErrAdminAuthOnNonAdminEndpoint
func (t *ApiComponentsErrorsErrUnauthorized) MergeApiComponentsErrorsErrAdminAuthOnNonAdminEndpoint(v ApiComponentsErrorsErrAdminAuthOnNonAdminEndpoint) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsApiComponentsErrorsErrUserAuthOnNonUserEndpoint returns the union data inside the ApiComponentsErrorsErrUnauthorized as a ApiComponentsErrorsErrUserAuthOnNonUserEndpoint
func (t ApiComponentsErrorsErrUnauthorized) AsApiComponentsErrorsErrUserAuthOnNonUserEndpoint() (ApiComponentsErrorsErrUserAuthOnNonUserEndpoint, error) {
	var body ApiComponentsErrorsErrUserAuthOnNonUserEndpoint
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromApiComponentsErrorsErrUserAuthOnNonUserEndpoint overwrites any union data inside the ApiComponentsErrorsErrUnauthorized as the provided ApiComponentsErrorsErrUserAuthOnNonUserEndpoint
func (t *ApiComponentsErrorsErrUnauthorized) FromApiComponentsErrorsErrUserAuthOnNonUserEndpoint(v ApiComponentsErrorsErrUserAuthOnNonUserEndpoint) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeApiComponentsErrorsErrUserAuthOnNonUserEndpoint performs a merge with any union data inside the ApiComponentsErrorsErrUnauthorized, using the provided ApiComponentsErrorsErrUserAuthOnNonUserEndpoint
func (t *ApiComponentsErrorsErrUnauthorized) MergeApiComponentsErrorsErrUserAuthOnNonUserEndpoint(v ApiComponentsErrorsErrUserAuthOnNonUserEndpoint) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t ApiComponentsErrorsErrUnauthorized) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *ApiComponentsErrorsErrUnauthorized) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsApiComponentsErrorsErrDataNotFound returns the union data inside the ApiComponentsResponsesGetDataNotFound as a ApiComponentsErrorsErrDataNotFound
func (t ApiComponentsResponsesGetDataNotFound) AsApiComponentsErrorsErrDataNotFound() (ApiComponentsErrorsErrDataNotFound, error) {
	var body ApiComponentsErrorsErrDataNotFound
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromApiComponentsErrorsErrDataNotFound overwrites any union data inside the ApiComponentsResponsesGetDataNotFound as the provided ApiComponentsErrorsErrDataNotFound
func (t *ApiComponentsResponsesGetDataNotFound) FromApiComponentsErrorsErrDataNotFound(v ApiComponentsErrorsErrDataNotFound) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeApiComponentsErrorsErrDataNotFound performs a merge with any union data inside the ApiComponentsResponsesGetDataNotFound, using the provided ApiComponentsErrorsErrDataNotFound
func (t *ApiComponentsResponsesGetDataNotFound) MergeApiComponentsErrorsErrDataNotFound(v ApiComponentsErrorsErrDataNotFound) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t ApiComponentsResponsesGetDataNotFound) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *ApiComponentsResponsesGetDataNotFound) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsApiComponentsErrorsErrInvalidDataID returns the union data inside the ApiComponentsResponsesRecordTransactionBadRequest as a ApiComponentsErrorsErrInvalidDataID
func (t ApiComponentsResponsesRecordTransactionBadRequest) AsApiComponentsErrorsErrInvalidDataID() (ApiComponentsErrorsErrInvalidDataID, error) {
	var body ApiComponentsErrorsErrInvalidDataID
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromApiComponentsErrorsErrInvalidDataID overwrites any union data inside the ApiComponentsResponsesRecordTransactionBadRequest as the provided ApiComponentsErrorsErrInvalidDataID
func (t *ApiComponentsResponsesRecordTransactionBadRequest) FromApiComponentsErrorsErrInvalidDataID(v ApiComponentsErrorsErrInvalidDataID) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeApiComponentsErrorsErrInvalidDataID performs a merge with any union data inside the ApiComponentsResponsesRecordTransactionBadRequest, using the provided ApiComponentsErrorsErrInvalidDataID
func (t *ApiComponentsResponsesRecordTransactionBadRequest) MergeApiComponentsErrorsErrInvalidDataID(v ApiComponentsErrorsErrInvalidDataID) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsApiComponentsErrorsErrAnnotationIndexOutOfRange returns the union data inside the ApiComponentsResponsesRecordTransactionBadRequest as a ApiComponentsErrorsErrAnnotationIndexOutOfRange
func (t ApiComponentsResponsesRecordTransactionBadRequest) AsApiComponentsErrorsErrAnnotationIndexOutOfRange() (ApiComponentsErrorsErrAnnotationIndexOutOfRange, error) {
	var body ApiComponentsErrorsErrAnnotationIndexOutOfRange
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromApiComponentsErrorsErrAnnotationIndexOutOfRange overwrites any union data inside the ApiComponentsResponsesRecordTransactionBadRequest as the provided ApiComponentsErrorsErrAnnotationIndexOutOfRange
func (t *ApiComponentsResponsesRecordTransactionBadRequest) FromApiComponentsErrorsErrAnnotationIndexOutOfRange(v ApiComponentsErrorsErrAnnotationIndexOutOfRange) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeApiComponentsErrorsErrAnnotationIndexOutOfRange performs a merge with any union data inside the ApiComponentsResponsesRecordTransactionBadRequest, using the provided ApiComponentsErrorsErrAnnotationIndexOutOfRange
func (t *ApiComponentsResponsesRecordTransactionBadRequest) MergeApiComponentsErrorsErrAnnotationIndexOutOfRange(v ApiComponentsErrorsErrAnnotationIndexOutOfRange) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsApiComponentsErrorsErrUTXOSpent returns the union data inside the ApiComponentsResponsesRecordTransactionBadRequest as a ApiComponentsErrorsErrUTXOSpent
func (t ApiComponentsResponsesRecordTransactionBadRequest) AsApiComponentsErrorsErrUTXOSpent() (ApiComponentsErrorsErrUTXOSpent, error) {
	var body ApiComponentsErrorsErrUTXOSpent
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromApiComponentsErrorsErrUTXOSpent overwrites any union data inside the ApiComponentsResponsesRecordTransactionBadRequest as the provided ApiComponentsErrorsErrUTXOSpent
func (t *ApiComponentsResponsesRecordTransactionBadRequest) FromApiComponentsErrorsErrUTXOSpent(v ApiComponentsErrorsErrUTXOSpent) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeApiComponentsErrorsErrUTXOSpent performs a merge with any union data inside the ApiComponentsResponsesRecordTransactionBadRequest, using the provided ApiComponentsErrorsErrUTXOSpent
func (t *ApiComponentsResponsesRecordTransactionBadRequest) MergeApiComponentsErrorsErrUTXOSpent(v ApiComponentsErrorsErrUTXOSpent) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsApiComponentsErrorsErrAnnotationIndexConversion returns the union data inside the ApiComponentsResponsesRecordTransactionBadRequest as a ApiComponentsErrorsErrAnnotationIndexConversion
func (t ApiComponentsResponsesRecordTransactionBadRequest) AsApiComponentsErrorsErrAnnotationIndexConversion() (ApiComponentsErrorsErrAnnotationIndexConversion, error) {
	var body ApiComponentsErrorsErrAnnotationIndexConversion
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromApiComponentsErrorsErrAnnotationIndexConversion overwrites any union data inside the ApiComponentsResponsesRecordTransactionBadRequest as the provided ApiComponentsErrorsErrAnnotationIndexConversion
func (t *ApiComponentsResponsesRecordTransactionBadRequest) FromApiComponentsErrorsErrAnnotationIndexConversion(v ApiComponentsErrorsErrAnnotationIndexConversion) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeApiComponentsErrorsErrAnnotationIndexConversion performs a merge with any union data inside the ApiComponentsResponsesRecordTransactionBadRequest, using the provided ApiComponentsErrorsErrAnnotationIndexConversion
func (t *ApiComponentsResponsesRecordTransactionBadRequest) MergeApiComponentsErrorsErrAnnotationIndexConversion(v ApiComponentsErrorsErrAnnotationIndexConversion) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsApiComponentsErrorsErrNoOperations returns the union data inside the ApiComponentsResponsesRecordTransactionBadRequest as a ApiComponentsErrorsErrNoOperations
func (t ApiComponentsResponsesRecordTransactionBadRequest) AsApiComponentsErrorsErrNoOperations() (ApiComponentsErrorsErrNoOperations, error) {
	var body ApiComponentsErrorsErrNoOperations
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromApiComponentsErrorsErrNoOperations overwrites any union data inside the ApiComponentsResponsesRecordTransactionBadRequest as the provided ApiComponentsErrorsErrNoOperations
func (t *ApiComponentsResponsesRecordTransactionBadRequest) FromApiComponentsErrorsErrNoOperations(v ApiComponentsErrorsErrNoOperations) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeApiComponentsErrorsErrNoOperations performs a merge with any union data inside the ApiComponentsResponsesRecordTransactionBadRequest, using the provided ApiComponentsErrorsErrNoOperations
func (t *ApiComponentsResponsesRecordTransactionBadRequest) MergeApiComponentsErrorsErrNoOperations(v ApiComponentsErrorsErrNoOperations) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t ApiComponentsResponsesRecordTransactionBadRequest) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *ApiComponentsResponsesRecordTransactionBadRequest) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsApiComponentsErrorsErrInternal returns the union data inside the ApiComponentsResponsesRecordTransactionInternalServerError as a ApiComponentsErrorsErrInternal
func (t ApiComponentsResponsesRecordTransactionInternalServerError) AsApiComponentsErrorsErrInternal() (ApiComponentsErrorsErrInternal, error) {
	var body ApiComponentsErrorsErrInternal
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromApiComponentsErrorsErrInternal overwrites any union data inside the ApiComponentsResponsesRecordTransactionInternalServerError as the provided ApiComponentsErrorsErrInternal
func (t *ApiComponentsResponsesRecordTransactionInternalServerError) FromApiComponentsErrorsErrInternal(v ApiComponentsErrorsErrInternal) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeApiComponentsErrorsErrInternal performs a merge with any union data inside the ApiComponentsResponsesRecordTransactionInternalServerError, using the provided ApiComponentsErrorsErrInternal
func (t *ApiComponentsResponsesRecordTransactionInternalServerError) MergeApiComponentsErrorsErrInternal(v ApiComponentsErrorsErrInternal) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsApiComponentsErrorsErrGettingOutputs returns the union data inside the ApiComponentsResponsesRecordTransactionInternalServerError as a ApiComponentsErrorsErrGettingOutputs
func (t ApiComponentsResponsesRecordTransactionInternalServerError) AsApiComponentsErrorsErrGettingOutputs() (ApiComponentsErrorsErrGettingOutputs, error) {
	var body ApiComponentsErrorsErrGettingOutputs
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromApiComponentsErrorsErrGettingOutputs overwrites any union data inside the ApiComponentsResponsesRecordTransactionInternalServerError as the provided ApiComponentsErrorsErrGettingOutputs
func (t *ApiComponentsResponsesRecordTransactionInternalServerError) FromApiComponentsErrorsErrGettingOutputs(v ApiComponentsErrorsErrGettingOutputs) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeApiComponentsErrorsErrGettingOutputs performs a merge with any union data inside the ApiComponentsResponsesRecordTransactionInternalServerError, using the provided ApiComponentsErrorsErrGettingOutputs
func (t *ApiComponentsResponsesRecordTransactionInternalServerError) MergeApiComponentsErrorsErrGettingOutputs(v ApiComponentsErrorsErrGettingOutputs) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsApiComponentsErrorsErrTxBroadcast returns the union data inside the ApiComponentsResponsesRecordTransactionInternalServerError as a ApiComponentsErrorsErrTxBroadcast
func (t ApiComponentsResponsesRecordTransactionInternalServerError) AsApiComponentsErrorsErrTxBroadcast() (ApiComponentsErrorsErrTxBroadcast, error) {
	var body ApiComponentsErrorsErrTxBroadcast
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromApiComponentsErrorsErrTxBroadcast overwrites any union data inside the ApiComponentsResponsesRecordTransactionInternalServerError as the provided ApiComponentsErrorsErrTxBroadcast
func (t *ApiComponentsResponsesRecordTransactionInternalServerError) FromApiComponentsErrorsErrTxBroadcast(v ApiComponentsErrorsErrTxBroadcast) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeApiComponentsErrorsErrTxBroadcast performs a merge with any union data inside the ApiComponentsResponsesRecordTransactionInternalServerError, using the provided ApiComponentsErrorsErrTxBroadcast
func (t *ApiComponentsResponsesRecordTransactionInternalServerError) MergeApiComponentsErrorsErrTxBroadcast(v ApiComponentsErrorsErrTxBroadcast) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t ApiComponentsResponsesRecordTransactionInternalServerError) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *ApiComponentsResponsesRecordTransactionInternalServerError) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsApiComponentsErrorsErrUnauthorized returns the union data inside the ApiComponentsResponsesUserNotAuthorized as a ApiComponentsErrorsErrUnauthorized
func (t ApiComponentsResponsesUserNotAuthorized) AsApiComponentsErrorsErrUnauthorized() (ApiComponentsErrorsErrUnauthorized, error) {
	var body ApiComponentsErrorsErrUnauthorized
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromApiComponentsErrorsErrUnauthorized overwrites any union data inside the ApiComponentsResponsesUserNotAuthorized as the provided ApiComponentsErrorsErrUnauthorized
func (t *ApiComponentsResponsesUserNotAuthorized) FromApiComponentsErrorsErrUnauthorized(v ApiComponentsErrorsErrUnauthorized) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeApiComponentsErrorsErrUnauthorized performs a merge with any union data inside the ApiComponentsResponsesUserNotAuthorized, using the provided ApiComponentsErrorsErrUnauthorized
func (t *ApiComponentsResponsesUserNotAuthorized) MergeApiComponentsErrorsErrUnauthorized(v ApiComponentsErrorsErrUnauthorized) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsApiComponentsErrorsErrXPubAuthRequired returns the union data inside the ApiComponentsResponsesUserNotAuthorized as a ApiComponentsErrorsErrXPubAuthRequired
func (t ApiComponentsResponsesUserNotAuthorized) AsApiComponentsErrorsErrXPubAuthRequired() (ApiComponentsErrorsErrXPubAuthRequired, error) {
	var body ApiComponentsErrorsErrXPubAuthRequired
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromApiComponentsErrorsErrXPubAuthRequired overwrites any union data inside the ApiComponentsResponsesUserNotAuthorized as the provided ApiComponentsErrorsErrXPubAuthRequired
func (t *ApiComponentsResponsesUserNotAuthorized) FromApiComponentsErrorsErrXPubAuthRequired(v ApiComponentsErrorsErrXPubAuthRequired) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeApiComponentsErrorsErrXPubAuthRequired performs a merge with any union data inside the ApiComponentsResponsesUserNotAuthorized, using the provided ApiComponentsErrorsErrXPubAuthRequired
func (t *ApiComponentsResponsesUserNotAuthorized) MergeApiComponentsErrorsErrXPubAuthRequired(v ApiComponentsErrorsErrXPubAuthRequired) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t ApiComponentsResponsesUserNotAuthorized) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *ApiComponentsResponsesUserNotAuthorized) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}
