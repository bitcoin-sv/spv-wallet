openapi: 3.0.0
info:
  title: ignored
  version: ignored
paths:
  /api/v2/admin/status:
    get:
      operationId: adminStatus
      security:
        - XPubAuth:
            - "admin"
      tags:
        - Admin endpoints
      summary: Get admin status
      description: >-
        This endpoint returns admin status. It is used to check if authorization header contain admin xpub.
      responses:
        200:
          description: Success
        401:
          $ref: "../components/responses.yaml#/components/responses/NotAuthorizedToAdminEndpoint"

  /api/v2/admin/users:
    post:
      operationId: createUser
      security:
        - XPubAuth:
            - "admin"
      tags:
        - Admin endpoints
      summary: Create user
      description: >-
        This endpoint creates a new user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "../components/requests.yaml#/components/schemas/CreateUser"
      responses:
        201:
          $ref: "../components/responses.yaml#/components/responses/AdminCreateUserSuccess"
        400:
          $ref: "../components/responses.yaml#/components/responses/AdminUserBadRequest"
        401:
          $ref: "../components/responses.yaml#/components/responses/NotAuthorizedToAdminEndpoint"
        422:
          $ref: "../components/responses.yaml#/components/responses/AdminInvalidAvatarURL"
        500:
          $ref: "../components/responses.yaml#/components/responses/AdminCreateUserInternalServerError"

  /api/v2/admin/users/{id}:
    get:
      operationId: userById
      security:
        - XPubAuth:
            - "admin"
      tags:
        - Admin endpoints
      summary: Get user by id
      description: >-
        This endpoint gets user by id.
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          schema:
            type: string
      responses:
        200:
          $ref: "../components/responses.yaml#/components/responses/AdminGetUser"
        500:
          $ref: "../components/responses.yaml#/components/responses/AdminGetUserInternalServerError"

  /api/v2/admin/users/{id}/paymails:
    post:
      operationId: addPaymailToUser
      security:
        - XPubAuth:
            - "admin"
      tags:
        - Admin endpoints
      summary: Add paymails to user
      description: >-
        This endpoint add paymails to user with given id.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "../components/requests.yaml#/components/schemas/AddPaymail"
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          schema:
            type: string
      responses:
        201:
          $ref: "../components/responses.yaml#/components/responses/AdminAddPaymailSuccess"
        400:
          $ref: "../components/responses.yaml#/components/responses/AdminUserBadRequest"
        401:
          $ref: "../components/responses.yaml#/components/responses/NotAuthorizedToAdminEndpoint"
        422:
          $ref: "../components/responses.yaml#/components/responses/AdminInvalidAvatarURL"

  /api/v2/admin/webhooks:
    get:
      operationId: webhooks
      security:
        - XPubAuth:
            - "admin"
      tags:
        - Admin endpoints
      summary: Get webhooks
      description: >-
        This endpoint gets all webhooks.
      responses:
        200:
          $ref: "../components/responses.yaml#/components/responses/GetWebhooksSuccess"
        401:
          $ref: "../components/responses.yaml#/components/responses/NotAuthorizedToAdminEndpoint"
        404:
          $ref: "../components/responses.yaml#/components/responses/NotificationsDisabled"
        500:
          $ref: "../components/responses.yaml#/components/responses/GetWebhooksInternalServerError"

    post:
      operationId: subscribeWebhook
      security:
        - XPubAuth:
            - "admin"
      tags:
        - Admin endpoints
      summary: Create webhook
      description: >-
        This endpoint creates a new webhook.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "../components/requests.yaml#/components/schemas/SubscribeWebhook"
      responses:
        200:
          description: Success
        400:
            $ref: "../components/responses.yaml#/components/responses/SubscribeToWebhookBadRequest"
        401:
          $ref: "../components/responses.yaml#/components/responses/NotAuthorizedToAdminEndpoint"
        404:
          $ref: "../components/responses.yaml#/components/responses/NotificationsDisabled"
        500:
          $ref: "../components/responses.yaml#/components/responses/SubscribeToWebhookInternalServerError"

    delete:
      operationId: unsubscribeWebhook
      security:
        - XPubAuth:
            - "admin"
      tags:
        - Admin endpoints
      summary: Delete webhooks
      description: >-
        This endpoint deletes all webhooks.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "../components/requests.yaml#/components/schemas/UnsubscribeWebhook"
      responses:
        200:
          description: Webhooks deleted
        401:
          $ref: "../components/responses.yaml#/components/responses/NotAuthorizedToAdminEndpoint"
        404:
          $ref: "../components/responses.yaml#/components/responses/NotificationsDisabled"
        500:
          $ref: "../components/responses.yaml#/components/responses/UnsubscribeToWebhookInternalServerError"
