openapi: 3.0.0
info:
  title: ignored
  version: ignored
paths:

  /api/v2/admin/status:
    get:
      operationId: adminStatus
      security:
        - XPubAuth:
            - "admin"
      tags:
        - Admin endpoints
      summary: Get admin status
      description: >-
        This endpoint returns admin status. It is used to check if authorization header contain admin xpub.
      responses:
        200:
          description: Success
        401:
          $ref: "../components/responses.yaml#/components/responses/NotAuthorizedToAdminEndpoint"


  /api/v2/admin/users:
    post:
      operationId: createUser
      security:
        - XPubAuth:
            - "admin"
      tags:
        - Admin endpoints
      summary: Create user
      description: >-
        This endpoint creates a new user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "../components/requests.yaml#/components/schemas/CreateUser"
      responses:
        201:
          $ref: "../components/responses.yaml#/components/responses/AdminCreateUserSuccess"
        400:
          $ref: "../components/responses.yaml#/components/responses/AdminUserBadRequest"
        401:
          $ref: "../components/responses.yaml#/components/responses/NotAuthorizedToAdminEndpoint"
        500:
          $ref: "../components/responses.yaml#/components/responses/AdminCreateUserInternalServerError"


  /api/v2/admin/users/{id}:
    get:
      operationId: userById
      security:
        - XPubAuth:
            - "admin"
      tags:
        - Admin endpoints
      summary: Get user by id
      description: >-
        This endpoint gets user by id.
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          schema:
            type: string
      responses:
        200:
          $ref: "../components/responses.yaml#/components/responses/AdminGetUser"
        500:
          $ref: "../components/responses.yaml#/components/responses/AdminGetUserInternalServerError"


  /api/v2/admin/users/{id}/paymails:
    post:
      operationId: addPaymailToUser
      security:
        - XPubAuth:
            - "admin"
      tags:
        - Admin endpoints
      summary: Add paymails to user
      description: >-
        This endpoint add paymails to user with given id.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "../components/requests.yaml#/components/schemas/AddPaymail"
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          schema:
            type: string
      responses:
        201:
          $ref: "../components/responses.yaml#/components/responses/AdminAddPaymailSuccess"
        400:
          $ref: "../components/responses.yaml#/components/responses/AdminUserBadRequest"
        401:
          $ref: "../components/responses.yaml#/components/responses/NotAuthorizedToAdminEndpoint"

  /api/v2/admin/contacts:
    get:
      operationId: getContacts
      security:
        - XPubAuth:
            - "admin"
      tags:
        - Admin endpoints
      summary: Get contacts
      description: >-
        This endpoint returns all contacts.
      parameters:
        - $ref: "../components/requests.yaml#/components/parameters/PageNumber"
        - $ref: "../components/requests.yaml#/components/parameters/PageSize"
        - $ref: "../components/requests.yaml#/components/parameters/Sort"
        - $ref: "../components/requests.yaml#/components/parameters/SortBy"
        - $ref: "../components/requests.yaml#/components/parameters/FullName"
        - $ref: "../components/requests.yaml#/components/parameters/Paymail"
        - $ref: "../components/requests.yaml#/components/parameters/ID"
        - $ref: "../components/requests.yaml#/components/parameters/PubKey"
        - $ref: "../components/requests.yaml#/components/parameters/Status"
      responses:
        200:
          $ref: "../components/responses.yaml#/components/responses/SearchContactsSuccess"
        400:
          $ref: "../components/responses.yaml#/components/responses/AdminUserBadRequest"
        401:
          $ref: "../components/responses.yaml#/components/responses/NotAuthorizedToAdminEndpoint"
        500:
          $ref: "../components/responses.yaml#/components/responses/InternalServerError"

  /api/v2/admin/contacts/{id}:
    post:
      operationId: updateContact
      security:
        - XPubAuth:
            - "admin"
      tags:
        - Admin endpoints
      summary: Update contact
      description: >-
        This endpoint updates contact.
      parameters:
        - name: id
          in: path
          description: Contact ID
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "../components/requests.yaml#/components/schemas/UpdateContact"
      responses:
        200:
          $ref: "../components/responses.yaml#/components/responses/ContactSuccess"
        400:
          $ref: "../components/responses.yaml#/components/responses/AdminUserBadRequest"
        401:
          $ref: "../components/responses.yaml#/components/responses/NotAuthorizedToAdminEndpoint"
        500:
          $ref: "../components/responses.yaml#/components/responses/InternalServerError"

    delete:
      operationId: deleteContact
      security:
        - XPubAuth:
            - "admin"
      tags:
        - Admin endpoints
      summary: Delete contact
      description: >-
        This endpoint deletes contact.
      parameters:
        - name: id
          in: path
          description: Contact ID
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Contact deleted
        400:
          $ref: "../components/responses.yaml#/components/responses/AdminUserBadRequest"
        401:
          $ref: "../components/responses.yaml#/components/responses/NotAuthorizedToAdminEndpoint"
        500:
          $ref: "../components/responses.yaml#/components/responses/InternalServerError"


  /api/v2/admin/contacts/{paymail}:
    post:
      operationId: createContact
      security:
        - XPubAuth:
            - "admin"
      tags:
        - Admin endpoints
      summary: Create contact
      description: >-
        This endpoint creates contact.
      parameters:
        - name: paymail
          in: path
          description: Contact paymail
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "../components/requests.yaml#/components/schemas/AdminCreateContact"
      responses:
        200:
          $ref: "../components/responses.yaml#/components/responses/ContactSuccess"
        400:
          $ref: "../components/responses.yaml#/components/responses/AdminUserBadRequest"
        401:
          $ref: "../components/responses.yaml#/components/responses/NotAuthorizedToAdminEndpoint"
        500:
          $ref: "../components/responses.yaml#/components/responses/InternalServerError"

  /api/v2/admin/contacts/confirmations:
    post:
      operationId: confirmContact
      security:
        - XPubAuth:
            - "admin"
      tags:
        - Admin endpoints
      summary: Confirm contact
      description: >-
        This endpoint confirms contact.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "../components/requests.yaml#/components/schemas/AdminConfirmContact"
      responses:
        200:
          description: Contact confirmed
        400:
          $ref: "../components/responses.yaml#/components/responses/AdminUserBadRequest"
        401:
          $ref: "../components/responses.yaml#/components/responses/NotAuthorizedToAdminEndpoint"
        500:
          $ref: "../components/responses.yaml#/components/responses/InternalServerError"

  /api/v2/admin/invitations/{id}:
    post:
      operationId: acceptInvitation
      security:
        - XPubAuth:
            - "user"
      tags:
        - Admin endpoints
      summary: Accept invitation
      description: >-
        This endpoint allows to accept invitation for selected ID
      parameters:
        - name: id
          in: path
          description: >-
            ID of the contact that the admin would like to accept
          required: true
          schema:
            type: integer
      responses:
        200:
          $ref: "../components/responses.yaml#/components/responses/ContactSuccess"
        400:
          $ref: "../components/responses.yaml#/components/responses/AdminUserBadRequest"
        401:
          $ref: "../components/responses.yaml#/components/responses/NotAuthorizedToAdminEndpoint"
        500:
          $ref: "../components/responses.yaml#/components/responses/InternalServerError"

    delete:
      operationId: rejectInvitation
      security:
        - XPubAuth:
            - "user"
      tags:
        - Admin endpoints
      summary: Reject invitation
      description: >-
        This endpoint allows to reject invitation for selected ID
      parameters:
        - name: id
          in: path
          description: >-
            ID of the contact that the admin would like to reject
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Invitation rejected
        400:
          $ref: "../components/responses.yaml#/components/responses/AdminUserBadRequest"
        401:
          $ref: "../components/responses.yaml#/components/responses/NotAuthorizedToAdminEndpoint"
        500:
          $ref: "../components/responses.yaml#/components/responses/InternalServerError"
