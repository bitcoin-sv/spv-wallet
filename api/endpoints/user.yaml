openapi: 3.0.0
info:
  title: ignored
  version: ignored
paths:

  /api/v2/users/current:
    get:
      operationId: currentUser
      security:
        - XPubAuth:
            - "user"
      tags:
        - User
      summary: Get current user
      description: >-
        This endpoint return balance of current authenticated user
      responses:
        200:
          $ref: "../components/responses.yaml#/components/responses/GetCurrentUserSuccess"
        401:
          $ref: "../components/responses.yaml#/components/responses/UserNotAuthorized"
        500:
          $ref: "../components/responses.yaml#/components/responses/InternalServerError"

  /api/v2/data/{id}:
    get:
      operationId: dataById
      security:
        - XPubAuth:
            - "user"
      tags:
        - Data
      summary: Get data for user
      description: >-
        This endpoint gets data by its id for authenticated user
      parameters:
        - name: id
          in: path
          description: Data ID
          required: true
          schema:
            type: string
      responses:
        200:
          $ref: "../components/responses.yaml#/components/responses/GetDataSuccess"
        400:
          $ref: "../components/responses.yaml#/components/responses/UserBadRequest"
        401:
          $ref: "../components/responses.yaml#/components/responses/UserNotAuthorized"
        404:
          $ref: "../components/responses.yaml#/components/responses/GetDataNotFound"
        500:
          $ref: "../components/responses.yaml#/components/responses/InternalServerError"

  /api/v2/operations/search:
    get:
      operationId: searchOperations
      security:
        - XPubAuth:
            - "user"
      tags:
        - Operations
      summary: Get operations for user
      description: >-
        This endpoint allows to search operations for authenticated user
      parameters:
        - $ref: "../components/requests.yaml#/components/parameters/PageNumber"
        - $ref: "../components/requests.yaml#/components/parameters/PageSize"
        - $ref: "../components/requests.yaml#/components/parameters/Sort"
        - $ref: "../components/requests.yaml#/components/parameters/SortBy"
      responses:
        200:
          $ref: "../components/responses.yaml#/components/responses/SearchOperationsSuccess"
        400:
          $ref: "../components/responses.yaml#/components/responses/SearchBadRequest"
        401:
          $ref: "../components/responses.yaml#/components/responses/UserNotAuthorized"
        500:
          $ref: "../components/responses.yaml#/components/responses/InternalServerError"

  /api/v2/transactions:
    post:
      operationId: recordTransactionOutline
      security:
        - XPubAuth:
            - "user"
      tags:
        - Transactions
      summary: Record transaction outline
      description: >-
        This endpoint allows to record transaction outline for authenticated user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "../components/requests.yaml#/components/schemas/TransactionOutline"
      responses:
        201:
          $ref: "../components/responses.yaml#/components/responses/RecordTransactionSuccess"
        400:
          $ref: "../components/responses.yaml#/components/responses/RecordTransactionBadRequest"
        401:
          $ref: "../components/responses.yaml#/components/responses/UserNotAuthorized"
        500:
          $ref: "../components/responses.yaml#/components/responses/RecordTransactionInternalServerError"

  /api/v2/transactions/outlines:
    post:
      operationId: createTransactionOutline
      security:
        - XPubAuth:
            - "user"
      tags:
        - Transactions
      summary: Create transaction outline
      description: >-
        This endpoint allows to create transaction outline for authenticated user
      parameters:
        - name: format
          in: query
          description: Required format of transaction hex
          schema:
            type: string
            enum:
              - "beef"
              - "raw"
            default: "beef"
          example: "beef"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "../components/requests.yaml#/components/schemas/TransactionSpecification"
      responses:
        200:
          $ref: "../components/responses.yaml#/components/responses/CreateTransactionOutlineSuccess"
        400:
          $ref: "../components/responses.yaml#/components/responses/CreateTransactionOutlineBadRequest"
        422:
          $ref: "../components/responses.yaml#/components/responses/CreateTransactionOutlineUnprocessable"
        401:
          $ref: "../components/responses.yaml#/components/responses/UserNotAuthorized"
        500:
          $ref: "../components/responses.yaml#/components/responses/InternalServerError"

  /api/v2/merkleroots:
    get:
      operationId: merkleRoots
      security:
        - XPubAuth:
            - "user"
      tags:
        - Merkleroots
      summary: Get Merkleroots
      description: >-
        This endpoint fetches merkleroots from block header service according to the given query parameters.
      parameters:
        - name: batchSize
          in: query
          description: Batch size of merkleroots to be returned
          required: false
          schema:
            type: integer
            minimum: 0
            default: 2000
          example: 100
        - name: lastEvaluatedKey
          in: query
          description: Last processed merkleroot in client's database
          required: false
          schema:
            type: string
            default: ""
          example: "ac973196d58e42da6ad030dc39f5fcc343bd040e1db29b30c146e9aea9354bab"
      responses:
        200:
          $ref: "../components/responses.yaml#/components/responses/GetMerklerootsSuccess"
        400:
          $ref: "../components/responses.yaml#/components/responses/GetMerklerootsBadRequest"
        401:
          $ref: "../components/responses.yaml#/components/responses/UserNotAuthorized"
        404:
          $ref: "../components/responses.yaml#/components/responses/GetMerklerootsNotFound"
        409:
          $ref: "../components/responses.yaml#/components/responses/GetMerklerootsConflict"
        500:
          $ref: "../components/responses.yaml#/components/responses/GetMerklerootsInternalServerError"

  /api/v2/users/address:
    post:
      summary: Create Paymail Address
      operationId: createAddress
      security:
        - XPubAuth:
            - user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "../components/requests.yaml#/components/schemas/CreatePaymailAddress"
      responses:
        "200":
          $ref: "../components/responses.yaml#/components/responses/PaymailAddress"
        "400":
          $ref: "../components/responses.yaml#/components/responses/UserBadRequest"
        "401":
          $ref: "../components/responses.yaml#/components/responses/UserNotAuthorized"
        "500":
          $ref: "../components/responses.yaml#/components/responses/InternalServerError"
      tags:
        - User
