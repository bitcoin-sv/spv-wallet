openapi: 3.0.0
info:
    license:
        name: Open BSV Licence
        url: xyz
    title: SPV Wallet API
    version: development
paths:
    /api/v2/admin/status:
        get:
            description: This endpoint returns admin status. It is used to check if authorization header contain admin xpub.
            responses:
                "200":
                    description: Success
                "401":
                    $ref: '#/components/responses/api_components_responses_NotAuthorized'
            security:
                - XPubAuth:
                    - admin
            summary: Get admin status
            tags:
                - Admin endpoints
    /api/v2/data/{id}:
        get:
            description: This endpoint gets data by its id for authenticated user
            parameters:
                - description: Data ID
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    $ref: '#/components/responses/api_components_responses_GetDataSuccess'
                "400":
                    $ref: '#/components/responses/api_components_responses_UserBadRequest'
                "401":
                    $ref: '#/components/responses/api_components_responses_UserNotAuthorized'
                "404":
                    $ref: '#/components/responses/api_components_responses_GetDataNotFound'
                "500":
                    $ref: '#/components/responses/api_components_responses_InternalServerError'
            security:
                - XPubAuth:
                    - user
            summary: Get data for user
            tags:
                - User endpoints
    /api/v2/operations/search:
        get:
            description: This endpoint allows to search operations for authenticated user
            parameters:
                - $ref: '#/components/parameters/api_components_requests_PageNumber'
                - $ref: '#/components/parameters/api_components_requests_PageSize'
                - $ref: '#/components/parameters/api_components_requests_Sort'
                - $ref: '#/components/parameters/api_components_requests_SortBy'
            responses:
                "200":
                    $ref: '#/components/responses/api_components_responses_SearchOperationsSuccess'
                "400":
                    $ref: '#/components/responses/api_components_responses_SearchBadRequest'
                "401":
                    $ref: '#/components/responses/api_components_responses_UserNotAuthorized'
                "500":
                    $ref: '#/components/responses/api_components_responses_InternalServerError'
            security:
                - XPubAuth:
                    - user
            summary: Get operations for user
            tags:
                - User endpoints
    /api/v2/users/current:
        get:
            description: This endpoint return balance of current authenticated user
            responses:
                "200":
                    $ref: '#/components/responses/api_components_responses_GetCurrentUserSuccess'
                "401":
                    $ref: '#/components/responses/api_components_responses_UserNotAuthorized'
                "500":
                    $ref: '#/components/responses/api_components_responses_InternalServerError'
            security:
                - XPubAuth:
                    - user
            summary: Get current user
            tags:
                - User endpoints
components:
    parameters:
        api_components_requests_PageNumber:
            description: Page number for pagination
            example: 1
            in: query
            name: page
            schema:
                type: integer
        api_components_requests_PageSize:
            description: Number of items per page
            example: 10
            in: query
            name: size
            schema:
                type: integer
        api_components_requests_Sort:
            description: Sorting order (asc or desc)
            example: asc
            in: query
            name: sort
            schema:
                type: string
        api_components_requests_SortBy:
            description: Field to sort by
            example: name
            in: query
            name: sortBy
            schema:
                type: string
    responses:
        api_components_responses_GetCurrentUserSuccess:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/api_components_models_UserInfo'
            description: Balance of current authenticated user
        api_components_responses_GetDataNotFound:
            content:
                application/json:
                    schema:
                        oneOf:
                            - $ref: '#/components/schemas/api_components_errors_ErrDataNotFound'
            description: Not found is an error that occurs when the requested resource is not found.
        api_components_responses_GetDataSuccess:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/api_components_models_Data'
            description: Data found
        api_components_responses_InternalServerError:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/api_components_errors_ErrInternal'
            description: Internal server error
        api_components_responses_NotAuthorized:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/api_components_errors_ErrUnauthorized'
            description: Security requirements failed
        api_components_responses_SearchBadRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/api_components_errors_ErrInvalidDataID'
            description: Error when search request is malformed and params can not be parsed
        api_components_responses_SearchOperationsSuccess:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/api_components_models_OperationsSearchResult'
            description: Operations found
        api_components_responses_UserBadRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/api_components_errors_ErrInvalidDataID'
            description: Bad request is an error that occurs when the request is malformed.
        api_components_responses_UserNotAuthorized:
            content:
                application/json:
                    schema:
                        oneOf:
                            - $ref: '#/components/schemas/api_components_errors_ErrUnauthorized'
                            - $ref: '#/components/schemas/api_components_errors_ErrXPubAuthRequired'
            description: Security requirements failed
    schemas:
        api_components_errors_ErrAdminAuthOnNonAdminEndpoint:
            allOf:
                - $ref: '#/components/schemas/api_components_errors_ErrorSchema'
                - properties:
                    code:
                        example: error-admin-auth-on-non-admin-endpoint
                    message:
                        example: cannot call non-admin endpoints with admin authorization
                  type: object
        api_components_errors_ErrAuthorization:
            allOf:
                - $ref: '#/components/schemas/api_components_errors_ErrorSchema'
                - properties:
                    code:
                        example: error-unauthorized
                    message:
                        example: unauthorized
                  type: object
        api_components_errors_ErrDataNotFound:
            allOf:
                - $ref: '#/components/schemas/api_components_errors_ErrorSchema'
                - properties:
                    code:
                        example: error-data-not-found
                    message:
                        example: data not found
                  type: object
        api_components_errors_ErrInternal:
            allOf:
                - $ref: '#/components/schemas/api_components_errors_ErrorSchema'
                - properties:
                    code:
                        example: error-internal-server-error
                    message:
                        example: internal server error
                  type: object
        api_components_errors_ErrInvalidDataID:
            allOf:
                - $ref: '#/components/schemas/api_components_errors_ErrorSchema'
                - properties:
                    code:
                        example: error-invalid-data-id
                    message:
                        example: invalid data id
                  type: object
        api_components_errors_ErrUnauthorized:
            oneOf:
                - $ref: '#/components/schemas/api_components_errors_ErrAuthorization'
                - $ref: '#/components/schemas/api_components_errors_ErrWrongAuthScopeFormat'
                - $ref: '#/components/schemas/api_components_errors_ErrAdminAuthOnNonAdminEndpoint'
                - $ref: '#/components/schemas/api_components_errors_ErrUserAuthOnNonUserEndpoint'
        api_components_errors_ErrUserAuthOnNonUserEndpoint:
            allOf:
                - $ref: '#/components/schemas/api_components_errors_ErrorSchema'
                - properties:
                    code:
                        example: error-user-auth-on-non-user-endpoint
                    message:
                        example: cannot call non-user endpoints with user authorization
                  type: object
        api_components_errors_ErrWrongAuthScopeFormat:
            allOf:
                - $ref: '#/components/schemas/api_components_errors_ErrorSchema'
                - properties:
                    code:
                        example: error-wrong-auth-scope-format
                    message:
                        example: wrong auth scope format
                  type: object
        api_components_errors_ErrXPubAuthRequired:
            allOf:
                - $ref: '#/components/schemas/api_components_errors_ErrorSchema'
                - properties:
                    code:
                        example: error-xpub-authorization-required
                    message:
                        example: xpub authorization required
                  type: object
        api_components_errors_ErrorSchema:
            additionalProperties: false
            properties:
                code:
                    description: Error code
                    type: string
                message:
                    description: Error message
                    type: string
            required:
                - code
                - message
            type: object
        api_components_models_Data:
            properties:
                blob:
                    description: Data blob
                    type: string
                id:
                    description: User ID
                    type: string
            required:
                - id
                - blob
            type: object
        api_components_models_Operation:
            properties:
                counterparty:
                    description: Counterparty of operation
                    example: alice@example.com
                    type: string
                createdAt:
                    description: Creation date of operation
                    example: "2020-01-01T00:00:00Z"
                    format: date-time
                    type: string
                txID:
                    description: Transaction ID
                    example: bb8593f85ef8056a77026ad415f02128f3768906de53e9e8bf8749fe2d66cf50
                    type: string
                txStatus:
                    description: Status of transaction
                    enum:
                        - CREATED
                        - BROADCASTED
                        - MINED
                        - REVERTED
                        - PROBLEMATIC
                    example: BROADCASTED
                    type: string
                type:
                    description: Type of operation
                    enum:
                        - incoming
                        - outgoing
                    example: incoming
                    type: string
                value:
                    description: Value of operation
                    example: 1234
                    format: int64
                    type: integer
            type: object
        api_components_models_OperationsSearchResult:
            properties:
                operations:
                    items:
                        $ref: '#/components/schemas/api_components_models_Operation'
                    type: array
                page:
                    $ref: '#/components/schemas/api_components_models_SearchPage'
            type: object
        api_components_models_SearchPage:
            properties:
                number:
                    description: Page number for pagination
                    example: 1
                    type: integer
                size:
                    description: Number of items per page
                    example: 10
                    type: integer
                sort:
                    description: Sorting order (asc or desc)
                    enum:
                        - asc
                        - desc
                    example: asc
                    type: string
                sortBy:
                    description: Field to sort by
                    example: name
                    type: string
            type: object
        api_components_models_UserInfo:
            properties:
                currentBalance:
                    description: Current balance of user
                    format: uint64
                    type: string
            required:
                - id
                - name
            type: object
    securitySchemes:
        XPubAuth:
            description: Authentication using x-auth-xpub header
            in: header
            name: x-auth-xpub
            type: apiKey
