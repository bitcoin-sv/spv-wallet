openapi: 3.0.0
info:
    license:
        name: Open BSV Licence
        url: xyz
    title: SPV Wallet API
    version: development
paths:
    /api/v1/admin:
        get:
            description: This endpoint returns the admin settings.
            operationId: GET admin
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api_components_requests_AdminRequest'
                description: Test object in body
                required: true
            responses:
                "200":
                    description: Success
                "401":
                    $ref: '#/components/responses/api_components_errors_NotAuthorized'
            summary: Get the admin settings
            tags:
                - Admin endpoints
    /api/v1/admin/paymails:
        get:
            description: This endpoint returns the paymails
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api_components_requests_GetPaymails'
                description: Filter paymail
                required: true
            responses:
                "200":
                    description: Success
                "401":
                    $ref: '#/components/responses/api_components_errors_NotAuthorized'
            summary: Get all paymails
            tags:
                - Admin endpoints
    /api/v1/policy:
        get:
            description: This endpoint returns the policy settings.
            operationId: GET policy
            responses:
                "200":
                    description: Success
            summary: Get the policy settings
            tags:
                - Base endpoints
    /api/v1/user/{txid}:
        get:
            description: This endpoint returns the admin settings.
            operationId: GET user
            parameters:
                - description: User ID (32 byte hash) hex string
                  in: path
                  name: txid
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api_components_responses_UserExampleResponse'
                    description: Success
                "401":
                    $ref: '#/components/responses/api_components_errors_NotAuthorized'
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api_components_errors_ErrUserNotFound'
                    description: User not found
                "405":
                    $ref: '#/components/responses/api_components_errors_ErrorUserNotFoundResponse'
            summary: Get the user settings
            tags:
                - User endpoints
components:
    responses:
        api_components_errors_ErrorUserNotFoundResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/api_components_errors_ErrUserNotFound'
            description: User not found
        api_components_errors_NotAuthorized:
            description: Security requirements failed
    schemas:
        api_components_errors_ErrUserNotFound:
            additionalProperties: false
            allOf:
                - $ref: '#/components/schemas/api_components_errors_ErrorSchema'
                - properties:
                    code:
                        example: error-user-not-found
                    message:
                        example: user not found
                  type: object
        api_components_errors_ErrorSchema:
            additionalProperties: false
            properties:
                code:
                    description: Error code
                    format: int32
                    type: integer
                message:
                    description: Error message
                    type: string
            required:
                - code
                - message
            type: object
        api_components_models_User:
            additionalProperties: false
            properties:
                id:
                    description: User ID
                    example: 1
                    format: uint64
                    type: integer
                name:
                    description: User name
                    example: Geralt of Rivia
                    type: string
            required:
                - id
                - name
            type: object
        api_components_requests_AdminRequest:
            additionalProperties: false
            properties:
                id:
                    description: Example of admin request body
                    example: 1
                    format: uint64
                    type: integer
            required:
                - id
            type: object
        api_components_requests_GetPaymails:
            properties:
                domain:
                    description: Paymail domain
                    example: moneybutton.com
                    type: string
            type: object
        api_components_responses_CommonResponse:
            description: Common response object
            properties:
                timestamp:
                    format: date-time
                    type: string
            required:
                - timestamp
            type: object
        api_components_responses_UserExampleResponse:
            allOf:
                - $ref: '#/components/schemas/api_components_responses_CommonResponse'
                - $ref: '#/components/schemas/api_components_models_User'
                - properties:
                    additionalPropertyExample:
                        description: The user model additional property example
                        example: example
                        type: string
                  type: object
