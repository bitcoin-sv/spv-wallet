openapi: 3.0.0
info:
    license:
        name: Open BSV Licence
        url: xyz
    title: SPV Wallet API
    version: development
paths:
    /api/v2/admin/status:
        get:
            description: This endpoint returns admin status. It is used to check if authorization header contain admin xpub.
            operationId: adminStatus
            responses:
                "200":
                    description: Success
                "401":
                    $ref: '#/components/responses/responses_NotAuthorized'
            security:
                - XPubAuth:
                    - admin
            summary: Get admin status
            tags:
                - Admin endpoints
    /api/v2/admin/users:
        post:
            description: This endpoint creates a new user.
            operationId: createUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/requests_CreateUser'
                required: true
            responses:
                "201":
                    $ref: '#/components/responses/responses_AdminCreateUserSuccess'
                "400":
                    $ref: '#/components/responses/responses_AdminUserBadRequest'
                "401":
                    $ref: '#/components/responses/responses_NotAuthorized'
                "500":
                    $ref: '#/components/responses/responses_AdminCreateUserInternalServerError'
            security:
                - XPubAuth:
                    - admin
            summary: Create user
            tags:
                - Admin endpoints
    /api/v2/admin/users/{id}:
        get:
            description: This endpoint gets user by id.
            operationId: userById
            parameters:
                - description: User ID
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    $ref: '#/components/responses/responses_AdminGetUser'
                "500":
                    $ref: '#/components/responses/responses_AdminGetUserInternalServerError'
            security:
                - XPubAuth:
                    - admin
            summary: Get user by id
            tags:
                - Admin endpoints
    /api/v2/admin/users/{id}/paymails:
        post:
            description: This endpoint add paymails to user with given id.
            operationId: addPaymailToUser
            parameters:
                - description: User ID
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/requests_AddPaymail'
                required: true
            responses:
                "201":
                    $ref: '#/components/responses/responses_AdminAddPaymailSuccess'
                "400":
                    $ref: '#/components/responses/responses_AdminUserBadRequest'
                "401":
                    $ref: '#/components/responses/responses_NotAuthorized'
            security:
                - XPubAuth:
                    - admin
            summary: Add paymails to user
            tags:
                - Admin endpoints
    /api/v2/configs/shared:
        get:
            description: This endpoint returns shared config. It can be obtained by both admin and user.
            operationId: sharedConfig
            responses:
                "200":
                    $ref: '#/components/responses/responses_SharedConfig'
                "401":
                    $ref: '#/components/responses/responses_NotAuthorized'
            security:
                - XPubAuth:
                    - admin
                    - user
            summary: Get shared config
            tags:
                - Admin endpoints
                - Configurations
components:
    responses:
        responses_AdminAddPaymailSuccess:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/models_Paymail'
            description: Paymail added to user
        responses_AdminCreateUserInternalServerError:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/errors_CreatingUser'
            description: Internal error while creating user
        responses_AdminCreateUserSuccess:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/models_User'
            description: User created
        responses_AdminGetUser:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/models_User'
            description: User found
        responses_AdminGetUserInternalServerError:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/errors_GettingUser'
            description: Internal error while getting user
        responses_AdminUserBadRequest:
            content:
                application/json:
                    schema:
                        oneOf:
                            - $ref: '#/components/schemas/errors_CannotBindRequest'
                            - $ref: '#/components/schemas/errors_InvalidPubKey'
                            - $ref: '#/components/schemas/errors_InvalidPaymail'
                            - $ref: '#/components/schemas/errors_PaymailInconsistent'
                            - $ref: '#/components/schemas/errors_InvalidDomain'
            description: Bad request is an error that occurs when the request is malformed.
        responses_NotAuthorized:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/errors_Unauthorized'
            description: Security requirements failed
        responses_SharedConfig:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/models_SharedConfig'
            description: Shared config
    schemas:
        errors_AdminAuthOnNonAdminEndpoint:
            allOf:
                - $ref: '#/components/schemas/errors_Schema'
                - properties:
                    code:
                        example: error-admin-auth-on-non-admin-endpoint
                    message:
                        example: cannot call non-admin endpoints with admin authorization
                  type: object
        errors_Authorization:
            allOf:
                - $ref: '#/components/schemas/errors_Schema'
                - properties:
                    code:
                        example: error-unauthorized
                    message:
                        example: unauthorized
                  type: object
        errors_CannotBindRequest:
            allOf:
                - $ref: '#/components/schemas/errors_Schema'
                - properties:
                    code:
                        example: error-bind-body-invalid
                    message:
                        example: cannot bind request body
                  type: object
        errors_CreatingUser:
            allOf:
                - $ref: '#/components/schemas/errors_Schema'
                - properties:
                    code:
                        example: error-user-creating
                    message:
                        example: error creating user
                  type: object
        errors_GettingUser:
            allOf:
                - $ref: '#/components/schemas/errors_Schema'
                - properties:
                    code:
                        example: error-unknown
                    message:
                        example: Internal server error
                  type: object
        errors_InvalidDomain:
            allOf:
                - $ref: '#/components/schemas/errors_Schema'
                - properties:
                    code:
                        example: error-invalid-domain
                    message:
                        example: invalid domain
                  type: object
        errors_InvalidPaymail:
            allOf:
                - $ref: '#/components/schemas/errors_Schema'
                - properties:
                    code:
                        example: error-user-invalid-paymail
                    message:
                        example: invalid paymail
                  type: object
        errors_InvalidPubKey:
            allOf:
                - $ref: '#/components/schemas/errors_Schema'
                - properties:
                    code:
                        example: error-user-invalid-pubkey
                    message:
                        example: invalid public key
                  type: object
        errors_PaymailInconsistent:
            allOf:
                - $ref: '#/components/schemas/errors_Schema'
                - properties:
                    code:
                        example: error-user-inconsistent-paymail
                    message:
                        example: inconsistent paymail address and alias/domain
                  type: object
        errors_Schema:
            additionalProperties: false
            properties:
                code:
                    description: Error code
                    type: string
                message:
                    description: Error message
                    type: string
            required:
                - code
                - message
            type: object
        errors_Unauthorized:
            oneOf:
                - $ref: '#/components/schemas/errors_Authorization'
                - $ref: '#/components/schemas/errors_WrongAuthScopeFormat'
                - $ref: '#/components/schemas/errors_AdminAuthOnNonAdminEndpoint'
                - $ref: '#/components/schemas/errors_UserAuthOnNonUserEndpoint'
        errors_UserAuthOnNonUserEndpoint:
            allOf:
                - $ref: '#/components/schemas/errors_Schema'
                - properties:
                    code:
                        example: error-user-auth-on-non-user-endpoint
                    message:
                        example: cannot call non-user endpoints with user authorization
                  type: object
        errors_WrongAuthScopeFormat:
            allOf:
                - $ref: '#/components/schemas/errors_Schema'
                - properties:
                    code:
                        example: error-wrong-auth-scope-format
                    message:
                        example: wrong auth scope format
                  type: object
        models_Paymail:
            properties:
                alias:
                    example: test
                    type: string
                avatar:
                    example: https://spv-wallet.com/avatar.png
                    type: string
                domain:
                    example: spv-wallet.com
                    type: string
                id:
                    example: 1234
                    type: integer
                    x-go-type: uint
                paymail:
                    example: test@spv-wallet.com
                    type: string
                publicName:
                    example: Test
                    type: string
            required:
                - id
                - alias
                - domain
                - paymail
                - publicName
                - avatar
            type: object
        models_SharedConfig:
            description: Shared config
            properties:
                experimentalFeatures:
                    additionalProperties:
                        type: boolean
                    example:
                        pikeEnabled: true
                    type: object
                paymailDomains:
                    example:
                        - example.com
                    items:
                        type: string
                    type: array
            required:
                - paymailDomains
                - experimentalFeatures
            type: object
        models_User:
            properties:
                createdAt:
                    example: "2021-01-01T00:00:00Z"
                    format: date-time
                    type: string
                id:
                    example: "1"
                    type: string
                paymails:
                    items:
                        $ref: '#/components/schemas/models_Paymail'
                    type: array
                publicKey:
                    example: 76a914e069bd2e2fe3ea702c40d5e65b491b734c01686788ac
                    type: string
                updatedAt:
                    example: "2021-01-01T00:00:00Z"
                    format: date-time
                    type: string
            required:
                - id
                - publicKey
                - paymails
                - createdAt
                - updatedAt
            type: object
        requests_AddPaymail:
            properties:
                address:
                    example: test@spv-wallet.com
                    type: string
                alias:
                    example: test
                    type: string
                avatarURL:
                    example: https://spv-wallet.com/avatar.png
                    type: string
                domain:
                    example: spv-wallet.com
                    type: string
                publicName:
                    example: Test
                    type: string
            required:
                - address
                - alias
                - domain
                - publicName
                - avatarURL
            type: object
        requests_CreateUser:
            properties:
                paymail:
                    $ref: '#/components/schemas/requests_AddPaymail'
                publicKey:
                    example: 76a914e069bd2e2fe3ea702c40d5e65b491b734c01686788ac
                    type: string
            required:
                - publicKey
            type: object
    securitySchemes:
        XPubAuth:
            description: Authentication using x-auth-xpub header
            in: header
            name: x-auth-xpub
            type: apiKey
