openapi: 3.0.0
info:
    license:
        name: Open BSV Licence
        url: xyz
    title: SPV Wallet API
    version: development
paths:
    /api/v2/admin/status:
        get:
            description: This endpoint returns admin status. It is used to check if authorization header contain admin xpub.
            responses:
                "200":
                    description: Success
                "401":
                    $ref: '#/components/responses/api_components_responses_NotAuthorized'
            security:
                - XPubAuth:
                    - admin
            summary: Get admin status
            tags:
                - Admin endpoints
    /api/v2/admin/users:
        post:
            description: This endpoint creates a new user.
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api_components_requests_CreateUser'
                required: true
            responses:
                "201":
                    $ref: '#/components/responses/api_components_responses_AdminCreateUserSuccess'
                "400":
                    $ref: '#/components/responses/api_components_responses_AdminUserBadRequest'
                "401":
                    $ref: '#/components/responses/api_components_responses_NotAuthorized'
                "500":
                    $ref: '#/components/responses/api_components_responses_AdminCreateUserInternalServerError'
            security:
                - XPubAuth:
                    - admin
            summary: Create user
            tags:
                - Admin endpoints
    /api/v2/admin/users/{id}:
        get:
            description: This endpoint gets user by id.
            parameters:
                - description: User ID
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    $ref: '#/components/responses/api_components_responses_AdminGetUser'
                "500":
                    $ref: '#/components/responses/api_components_responses_AdminGetUserInternalServerError'
            security:
                - XPubAuth:
                    - admin
            summary: Get user by id
            tags:
                - Admin endpoints
    /api/v2/admin/users/{id}/paymails:
        post:
            description: This endpoint add paymails to user with given id.
            parameters:
                - description: User ID
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api_components_requests_AddPaymail'
                required: true
            responses:
                "201":
                    $ref: '#/components/responses/api_components_responses_AdminCreateUserSuccess'
                "400":
                    $ref: '#/components/responses/api_components_responses_AdminUserBadRequest'
                "401":
                    $ref: '#/components/responses/api_components_responses_NotAuthorized'
            security:
                - XPubAuth:
                    - admin
            summary: Add paymails to user
            tags:
                - Admin endpoints
components:
    responses:
        api_components_responses_AdminCreateUserInternalServerError:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/api_components_errors_ErrCreatingUser'
            description: Internal server error
        api_components_responses_AdminCreateUserSuccess:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/api_components_models_User'
            description: User created
        api_components_responses_AdminGetUser:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/api_components_models_User'
            description: User found
        api_components_responses_AdminGetUserInternalServerError:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/api_components_errors_ErrGettingUser'
            description: User found
        api_components_responses_AdminUserBadRequest:
            content:
                application/json:
                    schema:
                        oneOf:
                            - $ref: '#/components/schemas/api_components_errors_ErrCannotBindRequest'
                            - $ref: '#/components/schemas/api_components_errors_ErrInvalidPubKey'
                            - $ref: '#/components/schemas/api_components_errors_ErrInvalidPaymail'
                            - $ref: '#/components/schemas/api_components_errors_ErrPaymailInconsistent'
                            - $ref: '#/components/schemas/api_components_errors_ErrInvalidDomain'
            description: Cannot bind request
        api_components_responses_NotAuthorized:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/api_components_errors_ErrUnauthorized'
            description: Security requirements failed
    schemas:
        api_components_errors_ErrAdminAuthOnNonAdminEndpoint:
            allOf:
                - $ref: '#/components/schemas/api_components_errors_ErrorSchema'
                - properties:
                    code:
                        example: error-admin-auth-on-non-admin-endpoint
                    message:
                        example: cannot call non-admin endpoints with admin authorization
                  type: object
        api_components_errors_ErrAuthorization:
            allOf:
                - $ref: '#/components/schemas/api_components_errors_ErrorSchema'
                - properties:
                    code:
                        example: error-unauthorized
                    message:
                        example: unauthorized
                  type: object
        api_components_errors_ErrCannotBindRequest:
            allOf:
                - $ref: '#/components/schemas/api_components_errors_ErrorSchema'
                - properties:
                    code:
                        example: error-bind-body-invalid
                    message:
                        example: cannot bind request body
                  type: object
        api_components_errors_ErrCreatingUser:
            allOf:
                - $ref: '#/components/schemas/api_components_errors_ErrorSchema'
                - properties:
                    code:
                        example: error-user-creating
                    message:
                        example: error creating user
                  type: object
        api_components_errors_ErrGettingUser:
            allOf:
                - $ref: '#/components/schemas/api_components_errors_ErrorSchema'
                - properties:
                    code:
                        example: error-unknown
                    message:
                        example: Internal server error
                  type: object
        api_components_errors_ErrInvalidDomain:
            allOf:
                - $ref: '#/components/schemas/api_components_errors_ErrorSchema'
                - properties:
                    code:
                        example: error-user-invalid-domain
                    message:
                        example: invalid domain
                  type: object
        api_components_errors_ErrInvalidPaymail:
            allOf:
                - $ref: '#/components/schemas/api_components_errors_ErrorSchema'
                - properties:
                    code:
                        example: error-user-invalid-paymail
                    message:
                        example: invalid paymail
                  type: object
        api_components_errors_ErrInvalidPubKey:
            allOf:
                - $ref: '#/components/schemas/api_components_errors_ErrorSchema'
                - properties:
                    code:
                        example: error-user-invalid-pubkey
                    message:
                        example: invalid public key
                  type: object
        api_components_errors_ErrPaymailInconsistent:
            allOf:
                - $ref: '#/components/schemas/api_components_errors_ErrorSchema'
                - properties:
                    code:
                        example: error-user-inconsistent-paymail
                    message:
                        example: inconsistent paymail address and alias/domain
                  type: object
        api_components_errors_ErrUnauthorized:
            oneOf:
                - $ref: '#/components/schemas/api_components_errors_ErrAuthorization'
                - $ref: '#/components/schemas/api_components_errors_ErrWrongAuthScopeFormat'
                - $ref: '#/components/schemas/api_components_errors_ErrAdminAuthOnNonAdminEndpoint'
                - $ref: '#/components/schemas/api_components_errors_ErrUserAuthOnNonUserEndpoint'
        api_components_errors_ErrUserAuthOnNonUserEndpoint:
            allOf:
                - $ref: '#/components/schemas/api_components_errors_ErrorSchema'
                - properties:
                    code:
                        example: error-user-auth-on-non-user-endpoint
                    message:
                        example: cannot call non-user endpoints with user authorization
                  type: object
        api_components_errors_ErrWrongAuthScopeFormat:
            allOf:
                - $ref: '#/components/schemas/api_components_errors_ErrorSchema'
                - properties:
                    code:
                        example: error-wrong-auth-scope-format
                    message:
                        example: wrong auth scope format
                  type: object
        api_components_errors_ErrorSchema:
            additionalProperties: false
            properties:
                code:
                    description: Error code
                    type: string
                message:
                    description: Error message
                    type: string
            required:
                - code
                - message
            type: object
        api_components_models_Paymail:
            properties:
                alias:
                    example: test
                    type: string
                avatar:
                    example: https://spv-wallet.com/avatar.png
                    type: string
                domain:
                    example: spv-wallet.com
                    type: string
                id:
                    example: "1"
                    type: string
                paymail:
                    example: test@spv-wallet.com
                    type: string
                publicName:
                    example: Test
                    type: string
            required:
                - id
                - alias
                - domain
                - paymail
                - publicName
                - avatar
            type: object
        api_components_models_User:
            properties:
                createdAt:
                    example: "2021-01-01T00:00:00Z"
                    format: date-time
                    type: string
                id:
                    example: "1"
                    type: string
                paymails:
                    items:
                        $ref: '#/components/schemas/api_components_models_Paymail'
                    type: array
                publicKey:
                    example: 76a914e069bd2e2fe3ea702c40d5e65b491b734c01686788ac
                    type: string
                updatedAt:
                    example: "2021-01-01T00:00:00Z"
                    format: date-time
                    type: string
            required:
                - id
                - publicKey
                - paymails
                - createdAt
                - updatedAt
            type: object
        api_components_requests_AddPaymail:
            properties:
                address:
                    example: test@spv-wallet.com
                    type: string
                alias:
                    example: test
                    type: string
                avatarURL:
                    example: https://spv-wallet.com/avatar.png
                    type: string
                domain:
                    example: spv-wallet.com
                    type: string
                publicName:
                    example: Test
                    type: string
            required:
                - address
                - alias
                - domain
                - publicName
                - avatarURL
            type: object
        api_components_requests_CreateUser:
            properties:
                paymail:
                    $ref: '#/components/schemas/api_components_requests_AddPaymail'
                publicKey:
                    example: 76a914e069bd2e2fe3ea702c40d5e65b491b734c01686788ac
                    type: string
            required:
                - publicKey
            type: object
    securitySchemes:
        XPubAuth:
            description: Authentication using x-auth-xpub header
            in: header
            name: x-auth-xpub
            type: apiKey
