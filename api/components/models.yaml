openapi: 3.0.0
info:
  title: ignored
  version: ignored

components:
  schemas:
    SharedConfig:
      description: Shared config
      type: object
      required:
        - paymailDomains
        - experimentalFeatures
      properties:
        paymailDomains:
          type: array
          items:
            type: string
          example: ["example.com"]
        experimentalFeatures:
          type: object
          additionalProperties:
            type: boolean
          example: {"pikeEnabled": true}

    User:
      type: object
      properties:
        id:
          type: string
          example: "1"
        publicKey:
          type: string
          example: "76a914e069bd2e2fe3ea702c40d5e65b491b734c01686788ac"
        paymails:
          type: array
          items:
            $ref: "#/components/schemas/Paymail"
        createdAt:
          type: string
          format: date-time
          example: "2021-01-01T00:00:00Z"
        updatedAt:
          type: string
          format: date-time
          example: "2021-01-01T00:00:00Z"
      required:
        - id
        - publicKey
        - paymails
        - createdAt
        - updatedAt

    Paymail:
      type: object
      properties:
        id:
          type: integer
          x-go-type: uint
          example: 1234
        alias:
          type: string
          example: "test"
        domain:
          type: string
          example: "spv-wallet.com"
        paymail:
          type: string
          example: "test@spv-wallet.com"
        publicName:
          type: string
          example: "Test"
        avatar:
          type: string
          example: "https://spv-wallet.com/avatar.png"
      required:
        - id
        - alias
        - domain
        - paymail
        - publicName
        - avatar

    SearchPage:
      type: object
      properties:
        number:
          type: integer
          description: Page number for pagination
          example: 1
        size:
          type: integer
          description: Number of items per page
          example: 10
        sort:
          type: string
          description: Sorting order (asc or desc)
          enum:
            - asc
            - desc
          example: "asc"
        sortBy:
          type: string
          description: Field to sort by
          example: "name"

    Data:
      type: object
      properties:
        id:
          type: string
          description: User ID
        blob:
          type: string
          description: Data blob
      required:
        - id
        - blob

    UserInfo:
      type: object
      properties:
        currentBalance:
          type: string
          format: uint64
          description: Current balance of user
      required:
        - id
        - name

    OperationsSearchResult:
      type: object
      properties:
        operations:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
        page:
          $ref: '#/components/schemas/SearchPage'

    Operation:
      type: object
      properties:
        value:
          type: integer
          format: int64
          description: Value of operation
          example: 1234
        txID:
          type: string
          description: Transaction ID
          example: "bb8593f85ef8056a77026ad415f02128f3768906de53e9e8bf8749fe2d66cf50"
        type:
          type: string
          description: Type of operation
          enum:
            - incoming
            - outgoing
          example: "incoming"
        counterparty:
          type: string
          description: Counterparty of operation
          example: "alice@example.com"
        txStatus:
          type: string
          description: Status of transaction
          enum:
            - CREATED
            - BROADCASTED
            - MINED
            - REVERTED
            - PROBLEMATIC
          example: "BROADCASTED"
        createdAt:
          type: string
          format: date-time
          description: Creation date of operation
          example: "2020-01-01T00:00:00Z"

    Operations:
      type: array
      items:
        $ref: "#/components/schemas/Operation"

    Annotations:
      type: object
      properties:
        outputs:
          type: object
          description: Map of output annotations
          additionalProperties:
            $ref: "#/components/schemas/OutputAnnotation"
        inputs:
          type: object
          description: Map of input annotations
          additionalProperties:
            $ref: "#/components/schemas/InputAnnotation"

    OutputAnnotation:
      type: object
      properties:
        bucket:
          type: string
          description: Type of bucket where this output should be stored.
          example: "some-bucket"
        paymail:
          $ref: "#/components/schemas/PaymailAnnotation"
      required:
        - bucket

    InputAnnotation:
      type: object
      properties:
        customInstructions:
          type: string
          description: Instructions about how to unlock this input.
          example: "Use custom script to unlock"
      required:
        - customInstructions

    PaymailAnnotation:
      type: object
      properties:
        receiver:
          type: string
          description: Paymail address of the receiver
          example: "alice@example.com"
        reference:
          type: string
          description: Reference number used for paymail transaction
        sender:
          type: string
          description: Paymail address of the sender
          example: "bob@example.com"
      required:
        - receiver
        - reference
        - sender

    RecordedOutline:
      type: object
      properties:
        txID:
          type: string
          description: ID of the transaction
      required:
        - txID
