##########################################################
### !NOTE: This file is meant to be used by start.sh! ###
########################################################
services:
  wallet-frontend:
    image: bsvb/spv-wallet-web-frontend:latest
    pull_policy: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.walletfrontend.rule=Host(`wallet.${RUN_PAYMAIL_DOMAIN}`)"
      - "traefik.http.routers.walletfrontend.entrypoints=websecure"
      - "traefik.http.routers.walletfrontend.tls=true"
      - "traefik.http.routers.walletfrontend.tls.certresolver=httpsresolver"
      - "traefik.http.services.walletfrontend.loadbalancer.server.port=80"
    ports:
      - "3002:80"
    configs:
      - source: frontend-env-config
        target: /usr/share/nginx/html/env-config.json

  wallet-backend:
    image: bsvb/spv-wallet-web-backend:latest
    pull_policy: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.walletbackend.rule=Host(`${RUN_API_DOMAIN}`)"
      - "traefik.http.routers.walletbackend.entrypoints=websecure"
      - "traefik.http.routers.walletbackend.tls=true"
      - "traefik.http.routers.walletbackend.tls.certresolver=httpsresolver"
      - "traefik.http.services.walletbackend.loadbalancer.server.port=8180"
    environment:
      SPVWALLET_PAYMAIL_DOMAIN: '${RUN_PAYMAIL_DOMAIN}'
    env_file:
      - .env.config
    ports:
      - "8180:8180"
    links:
      - wallet-postgresql
    depends_on:
      wallet-postgresql:
        condition: service_healthy

  block-headers-service:
    image: bsvb/block-headers-service:latest
    pull_policy: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.headers.rule=Host(`headers.${RUN_PAYMAIL_DOMAIN}`)"
      - "traefik.http.routers.headers.entrypoints=websecure"
      - "traefik.http.routers.headers.tls=true"
      - "traefik.http.routers.headers.tls.certresolver=httpsresolver"
      - "traefik.http.services.headers.loadbalancer.server.port=8080"
    command:
      - "--preloaded"
    ports:
      - "8080:8080"
    volumes:
      - block-headers-service-data:/app/data

  spv-wallet-admin:
    image: bsvb/spv-wallet-admin:latest
    pull_policy: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.admin.rule=Host(`admin.${RUN_PAYMAIL_DOMAIN}`)"
      - "traefik.http.routers.admin.entrypoints=websecure"
      - "traefik.http.routers.admin.tls=true"
      - "traefik.http.routers.admin.tls.certresolver=httpsresolver"
      - "traefik.http.services.admin.loadbalancer.server.port=3000"
    env_file:
      - .env.config
    ports:
      - "3000:3000"
    configs:
      - source: admin-env-config
        target: /usr/share/nginx/html/env-config.json

  spv-wallet:
    image: bsvb/spv-wallet:latest
    pull_policy: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.wallet.rule=Host(`${RUN_PAYMAIL_DOMAIN}`)"
      - "traefik.http.routers.wallet.entrypoints=websecure"
      - "traefik.http.routers.wallet.tls=true"
      - "traefik.http.routers.wallet.tls.certresolver=httpsresolver"
      - "traefik.http.services.wallet.loadbalancer.server.port=3003"
    environment:
      SPVWALLET_PAYMAIL_DOMAINS: '${RUN_PAYMAIL_DOMAIN}'
    env_file:
      - .env.config
    ports:
      - "3003:3003"
    restart: always

  wallet-redis:
    image: redis
    hostname: redis
    ports:
      - "6379:6379"
    volumes:
      - wallet-redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]

  wallet-postgresql:
    image: postgres
    volumes:
      - wallet-postgresql-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U postgres -d postgres'"]
      timeout: 5s
      retries: 3

  wallet-mongodb:
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongo
      MONGO_INITDB_ROOT_PASSWORD: mongo
      MONGO_INITDB_DATABASE: xapi
    ports:
      - '27017:27017'
    volumes:
      - wallet-mongodb-data:/data/db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh mongodb:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

  wallet-gateway:
    image: traefik:v2.11
    container_name: traefik
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.web.http.redirections.entrypoint.permanent=true"
      - "--certificatesresolvers.httpsresolver.acme.storage=/gateway/acme.json"
      - "--certificatesresolvers.httpsresolver.acme.tlschallenge=true"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "wallet-gateway-data:/gateway"
    labels:
      - "traefik.enable=true"


volumes:
  wallet-postgresql-data:
    driver: local
  wallet-redis-data:
    driver: local
  wallet-mongodb-data:
    driver: local
  block-headers-service-data:
    driver: local
  wallet-gateway-data:
    driver: local

configs:
  frontend-env-config:
    content: |
      {
          "apiUrl": "http${RUN_SECURED_PROTOCOL_SUFFIX}://${RUN_API_DOMAIN}",
          "wsUrl": "ws${RUN_SECURED_PROTOCOL_SUFFIX}://${RUN_API_DOMAIN}/api/websocket"
      }
  admin-env-config:
    content: |
      {
        "serverUrl": "http${RUN_SECURED_PROTOCOL_SUFFIX}://${RUN_SPVWALLET_DOMAIN}/v1",
        "hideServerUrl": false
      }
