auth:
  # xpub used for admin api authentication
  admin_key: xpub661MyMwAqRbcFgfmdkPgE2m5UjHXu9dj124DbaGLSjaqVESTWfCD4VuNmEbVPkbYLCkykwVZvmA8Pbf8884TQr1FgdG2nPoHR8aB36YdDQh
  # require checking signatures for all requests which was registered with RequireAuthentication method
  require_signing: false
  # authentication scheme - xpub => using xPubs as tokens, currently the only option
  scheme: xpub
  # disable signing for all requests !!! Use only for development !!!
  signing_disabled: true
cache:
  cluster:
    # cluster coordinator - redis/memory
    coordinator: memory
    # prefix for channel names
    prefix: spv_wallet_cluster_
    redis: null
  # cache engine - freecache/redis
  engine: freecache
  redis:
    dependency_mode: true
    max_active_connections: 0
    max_connection_lifetime: 1m0s
    max_idle_connections: 10
    max_idle_timeout: 10s
    url: redis://localhost:6379
    use_tls: false
db:
  datastore:
    # enable datastore debug mode
    debug: false
    # datastore engine - sqlite/postgresql/mysql/mongodb (experimental)
    engine: postgresql
    # prefix for all tables
    table_prefix: xapi
  mongodb:
    database_name: xapi
    debug: false
    max_connection_idle_time: 0s
    max_connection_time: 0s
    max_idle_connections: 0
    max_open_connections: 0
    table_prefix: ""
    transactions: false
    uri: mongodb://localhost:27017/xapi
  sql:
    debug: false
    driver: postgresql
    host: localhost
    max_connection_idle_time: 0s
    max_connection_time: 0s
    max_idle_connections: 0
    max_open_connections: 0
    name: xapi
    password: ""
    port: "5432"
    replica: false
    skip_initialize_with_version: true
    table_prefix: ""
    time_zone: UTC
    tx_timeout: 10s
    user: postgres
  sqlite:
    database_path: ./spv-wallet.db
    debug: false
    max_connection_idle_time: 0s
    max_connection_time: 0s
    max_idle_connections: 0
    max_open_connections: 0
    shared: true
    table_prefix: ""
# enable debug mode
debug: true
# enable endpoints that provides profiling information
debug_profiling: true
# enable (ITC) incoming transaction checking
disable_itc: true
# url to import block headers
import_block_headers: ""
new_relic:
  # used for relic HostDisplayName
  domain_name: domain.com
  enabled: false
  license_key: BOGUS-LICENSE-KEY-1234567890987654321234
nodes:
  # deployment id used annotating api calls in XDeployment-ID header - this value will be randomly generated if not set
  _deployment_id: spv-wallet-deployment-id
  callback:
    callback_host: https://xyz.com
    # token to authenticate callback calls - default callback token will be generated from the Admin Key
    _callback_token: 44a82509
  # protocol - arc/mapi (arc is default)
  protocol: arc
  # list of apis used for getting and broadcasting transactions
  apis:
    # gorillapool can be used as well
    # - arc_url: https://arc.gorillapool.io
    # - token: ""
    - arc_url: https://api.taal.com/arc
      token: mainnet_06770f425eb00298839a24a49cbdc02c
  # use fee quotes for transaction fee calculation
  use_fee_quotes: true
  # used as the fee value if 'use_fee_quotes' is set to false
  fee_unit:
    satoshis: 1
    bytes: 1000
notifications:
  enabled: false
  # url to send notifications
  webhook_endpoint: ""
paymail:
  beef:
    block_headers_service_auth_token: mQZQ6WmxURxWz5ch
    # url to Block Headers Service, used for merkle root verification
    block_headers_service_url: http://localhost:8080/api/v1/chain/merkleroot/verify
    use_beef: false
  # set is as a default sender paymail if account does not have one
  default_from_paymail: from@domain.com
  # default note added into transactions - Deprecated
  default_note: SPV Wallet Address Resolution
  # enable paymail domain validation, paymail domain must be in domains list to be valid and that the transaction can be processed
  domain_validation_enabled: false
  # list of domains used for paymail domain validation
  domains:
    - localhost
  enabled: true
  # validates sender signature during receiving transactions
  sender_validation_enabled: false
# show logs about incoming requests
request_logging: true
server_config:
  # maximum amount of time to wait for the next request when keep-alives are enabled. If IdleTimeout is zero, the value of ReadTimeout is used. If both are zero, there is no timeout
  idle_timeout: 1m0s
  # port of the http server
  port: 3003
  # maximum duration for reading the entire request, including the body. A zero or negative value means there will be no timeout
  read_timeout: 15s
  # maximum duration before timing out writes of the response. A zero or negative value means there will be no timeout
  write_timeout: 15s
task_manager:
  # task manager factory - memory, redis
  factory: memory
# Prometheus metrics configuration
metrics:
  enabled: false
